{
    "version": "https://jsonfeed.org/version/1",
    "title": "CYX",
    "subtitle": "Blog",
    "icon": "http://example.com/images/favicon.ico",
    "description": "我的个人博客",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/07/16/post/sql/02-%E6%97%B6%E9%97%B4%E5%88%A4%E6%96%AD%E6%9F%A5%E8%AF%A2/",
            "url": "http://example.com/2024/07/16/post/sql/02-%E6%97%B6%E9%97%B4%E5%88%A4%E6%96%AD%E6%9F%A5%E8%AF%A2/",
            "title": "PostgreSQL中筛选月份和年份查询数据集",
            "date_published": "2024-07-16T13:28:16.252Z",
            "content_html": "<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--        日期查询  PostgreSQL中筛选月份和年份查询数据集   三种方法</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> srm.cux_5_offline_purchase <span class=\"keyword\">where</span>  <span class=\"built_in\">extract</span>(<span class=\"keyword\">year</span> <span class=\"keyword\">from</span> op_createdate )<span class=\"operator\">=</span><span class=\"number\">2024</span> <span class=\"keyword\">and</span> <span class=\"built_in\">extract</span>(<span class=\"keyword\">month</span> <span class=\"keyword\">from</span> op_createdate)<span class=\"operator\">=</span><span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> srm.cux_5_offline_purchase <span class=\"keyword\">where</span>  date_part(<span class=\"string\">&#x27;year&#x27;</span>, op_createdate) <span class=\"operator\">=</span> <span class=\"number\">2024</span> <span class=\"keyword\">AND</span> date_part(<span class=\"string\">&#x27;month&#x27;</span>, op_createdate) <span class=\"operator\">=</span> <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"comment\">-- SELECT * FROM srm.cux_5_offline_purchase WHERE op_createdate &gt;= &#x27;2024-2-01&#x27; AND op_createdate &lt;= &#x27;2024-2-28&#x27;;  不推荐</span></span><br></pre></td></tr></table></figure>\r\n",
            "tags": [
                "数据库",
                "time"
            ]
        },
        {
            "id": "http://example.com/2024/07/16/post/springboot/04-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/",
            "url": "http://example.com/2024/07/16/post/springboot/04-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/",
            "title": "正则表达式",
            "date_published": "2024-07-16T13:27:44.140Z",
            "content_html": "<h1 id=\"正则表达式\">正则表达式</h1>\r\n",
            "tags": [
                "后端",
                "正则"
            ]
        },
        {
            "id": "http://example.com/2024/07/16/post/vue/%E4%BF%AE%E6%94%B9avue%E9%BB%98%E8%AE%A4%E7%BB%84%E4%BB%B6%E6%A0%B7%E5%BC%8F/",
            "url": "http://example.com/2024/07/16/post/vue/%E4%BF%AE%E6%94%B9avue%E9%BB%98%E8%AE%A4%E7%BB%84%E4%BB%B6%E6%A0%B7%E5%BC%8F/",
            "title": "修改avue默认组件样式",
            "date_published": "2024-07-16T13:26:11.679Z",
            "content_html": "<h1 id=\"修改avue默认组件样式\">修改avue默认组件样式</h1>\r\n<p><a\r\nhref=\"https://blog.csdn.net/fyydashen/article/details/113611506\">参考链接</a></p>\r\n",
            "tags": [
                "前端",
                "avue"
            ]
        },
        {
            "id": "http://example.com/2024/07/15/post/vue/D3.js%20%20%20V3%E7%89%88%E6%9C%AC/",
            "url": "http://example.com/2024/07/15/post/vue/D3.js%20%20%20V3%E7%89%88%E6%9C%AC/",
            "title": "D3.js V3版本  学习笔记",
            "date_published": "2024-07-15T03:24:48.459Z",
            "content_html": "<h1 id=\"d3.js-v3版本\">D3.js V3版本</h1>\r\n<h2 id=\"d3-tree\">D3 Tree</h2>\r\n<p>vue2 + d3 (3.5.17)</p>\r\n<h4 id=\"安装组件\">安装组件</h4>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install d3@3.5.17 -s   </span><br></pre></td></tr></table></figure>\r\n<p><span class=\"citation\"\r\ndata-cites=\"后面是版本号\">@后面是版本号</span>，不加默认下载最新版</p>\r\n<p>页面（组件）引用</p>\r\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> d3 <span class=\"keyword\">from</span> <span class=\"string\">&quot;d3&quot;</span>;</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"直接上一个简单案例\">直接上一个简单案例</h3>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div id=&quot;screenshot&quot; style=&quot;width:100%;height:90%&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div id=&quot;tree-container&quot; style=&quot;width:100%;height:95%;&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">  &lt;div ref=&quot;container&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import * as d3 from &#x27;d3&#x27;;</span><br><span class=\"line\">import $ from &#x27;jquery&#x27;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  data()&#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      treeData:&#123;</span><br><span class=\"line\">        name: &#x27;收入&#x27;,</span><br><span class=\"line\">        value:100,</span><br><span class=\"line\">        children: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            name: &#x27;电费收入&#x27;,</span><br><span class=\"line\">            value: 10,</span><br><span class=\"line\">            children: []</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            name: &#x27;供热收入&#x27;,</span><br><span class=\"line\">            value: 8,</span><br><span class=\"line\">            children: []</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          ,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            name: &#x27;副产品收入&#x27;,</span><br><span class=\"line\">            value: 8,</span><br><span class=\"line\">            children: []</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            name: &#x27;其他收入&#x27;,</span><br><span class=\"line\">            value: 8,</span><br><span class=\"line\">            children: []</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mounted() &#123;</span><br><span class=\"line\">    this.drawTree();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    drawTree() &#123;</span><br><span class=\"line\">    // 设置图表的宽高和Margin</span><br><span class=\"line\">      var margin = &#123; top: 20, right: 90, bottom: 30, left: 90 &#125;,</span><br><span class=\"line\">          width = 960 - margin.left - margin.right,</span><br><span class=\"line\">          height = 500 - margin.top - margin.bottom;</span><br><span class=\"line\"></span><br><span class=\"line\">      //创建视图</span><br><span class=\"line\">      let svg = d3.select(this.$refs.container)</span><br><span class=\"line\">          .append(&#x27;svg&#x27;)</span><br><span class=\"line\">          .attr(&#x27;width&#x27;, width + margin.right + margin.left)</span><br><span class=\"line\">          .attr(&#x27;height&#x27;, height + margin.top + margin.bottom)</span><br><span class=\"line\">          .append(&#x27;g&#x27;)</span><br><span class=\"line\">          .call(this.zoomListener)</span><br><span class=\"line\">          .attr(&quot;transform&quot;, &quot;translate(&quot; + margin.left + &quot;,&quot; + margin.top + &quot;)&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">      //定义节点拖放行为的拖动侦听器。</span><br><span class=\"line\"></span><br><span class=\"line\">      //建立树布局</span><br><span class=\"line\">      const treeLayout = d3.layout.tree()</span><br><span class=\"line\">          .size([width, height]);</span><br><span class=\"line\"></span><br><span class=\"line\">      const nodes = treeLayout.nodes(this.treeData);</span><br><span class=\"line\">      const links = treeLayout.links(nodes);</span><br><span class=\"line\"></span><br><span class=\"line\">      const nodeGroup = svg.selectAll(&#x27;.node&#x27;)</span><br><span class=\"line\">          .data(nodes)</span><br><span class=\"line\">          .enter()</span><br><span class=\"line\">          .append(&#x27;g&#x27;)</span><br><span class=\"line\">          .attr(&#x27;class&#x27;, &#x27;node&#x27;)</span><br><span class=\"line\">          .attr(&#x27;transform&#x27;, d =&gt; `translate($&#123;d.x&#125;,$&#123;d.y&#125;)`);</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeGroup.append(&#x27;rect&#x27;)//设置为矩形</span><br><span class=\"line\">          .attr(&#x27;width&#x27;, 80) // 设置矩形宽度</span><br><span class=\"line\">          .attr(&#x27;height&#x27;, 30) // 设置矩形高度</span><br><span class=\"line\">          .attr(&#x27;x&#x27;, -40) // 调整矩形位置，使其居中</span><br><span class=\"line\">          .attr(&#x27;y&#x27;, -15)</span><br><span class=\"line\">          .attr(&#x27;rx&#x27;, 5) // 可选，设置矩形圆角</span><br><span class=\"line\">          .attr(&#x27;ry&#x27;, 5)</span><br><span class=\"line\">          .style(&#x27;fill&#x27;, &#x27;transparent&#x27;)</span><br><span class=\"line\">          .style(&#x27;stroke&#x27;, &#x27;#000&#x27;) // 设置矩形边框颜色</span><br><span class=\"line\">          .style(&#x27;stroke-width&#x27;, &#x27;1px&#x27;); // 设置矩形边框宽度; // 透明</span><br><span class=\"line\">      nodeGroup.append(&#x27;line&#x27;) // 添加分割线</span><br><span class=\"line\">          .attr(&#x27;x1&#x27;, -40) // 分割线的起始点 x 坐标</span><br><span class=\"line\">          .attr(&#x27;y1&#x27;, 0) // 分割线的起始点 y 坐标</span><br><span class=\"line\">          .attr(&#x27;x2&#x27;, 40) // 分割线的结束点 x 坐标</span><br><span class=\"line\">          .attr(&#x27;y2&#x27;, 0) // 分割线的结束点 y 坐标</span><br><span class=\"line\">          .style(&#x27;stroke&#x27;, &#x27;#000&#x27;) // 设置分割线颜色</span><br><span class=\"line\">          .style(&#x27;stroke-width&#x27;, &#x27;1px&#x27;); // 设置分割线宽度</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeGroup.append(&#x27;text&#x27;)</span><br><span class=\"line\">          .attr(&#x27;dy&#x27;, -4) // 调整文本的垂直位置，使其居中</span><br><span class=\"line\">          .style(&#x27;text-anchor&#x27;, &#x27;middle&#x27;) // 设置文本水平居中</span><br><span class=\"line\">          .text(d =&gt; d.name);</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeGroup.append(&#x27;text&#x27;)</span><br><span class=\"line\">          .attr(&#x27;dy&#x27;, 13) // 调整文本的垂直位置，使其在矩形内部</span><br><span class=\"line\">          .style(&#x27;text-anchor&#x27;, &#x27;middle&#x27;) // 设置文本水平居中</span><br><span class=\"line\">          .text(d =&gt; d.value);</span><br><span class=\"line\"></span><br><span class=\"line\">      svg.selectAll(&#x27;.link&#x27;)</span><br><span class=\"line\">          .data(links)</span><br><span class=\"line\">          .enter()</span><br><span class=\"line\">          .append(&#x27;path&#x27;)</span><br><span class=\"line\">          .attr(&#x27;class&#x27;, &#x27;link&#x27;)</span><br><span class=\"line\">          .attr(&#x27;d&#x27;, d =&gt; &#123;</span><br><span class=\"line\">            return `M$&#123;d.source.x&#125;,$&#123;d.source.y+15&#125;L$&#123;d.target.x&#125;,$&#123;d.target.y-15&#125;`;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      const zoomHandler = d3.behavior.zoom()</span><br><span class=\"line\">          .on(&#x27;zoom&#x27;, () =&gt; &#123;</span><br><span class=\"line\">            svg.attr(&#x27;transform&#x27;, `translate($&#123;d3.event.translate&#125;)scale($&#123;d3.event.scale&#125;)`);</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      svg.call(zoomHandler);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">circle &#123;</span><br><span class=\"line\">  fill: #ccc;</span><br><span class=\"line\">  stroke: #000;</span><br><span class=\"line\">  stroke-width: 1px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">text &#123;</span><br><span class=\"line\">  font-size: 12px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">path.link &#123;</span><br><span class=\"line\">  fill: none;</span><br><span class=\"line\">  stroke: #ccc;</span><br><span class=\"line\">  stroke-width: 1.5px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\r\n<p>我们可以看到D3.js的步骤其实就是</p>\r\n<p><code>初始化图表 -&gt; 获取数据 -&gt; 数据转换 -&gt; 元素操作/交互/动画 -&gt; 事件绑定 -&gt; 数据更新 -&gt; 元素更新</code></p>\r\n<h2 id=\"用d3-tree-做一个指标下钻功能\">用D3 tree 做一个指标下钻功能</h2>\r\n<p>看完上面哪个例子我们直接上难度，在大数据时代，很多数据客户都会要求直观的展示数据，这个指标下钻就是很普遍的客户需求，展示如下动图。</p>\r\n<p>[双击收展、任意拖拉、滚轮缩放]</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\006V2BDqly8hrp5pe8coxg30b408u41t.gif\"\r\nalt=\"alt\" />\r\n<figcaption aria-hidden=\"true\">alt</figcaption>\r\n</figure>\r\n<p>我们按照例子中的方法进行介绍：</p>\r\n<p>图的绘制主要在drawTree 与 update中</p>\r\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">drawTree</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">     <span class=\"comment\">//show D3 tree</span></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">depths</span> = <span class=\"variable language_\">this</span>.<span class=\"title function_\">treeDepths</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">treeData</span>);</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">depths</span>)</span><br><span class=\"line\">     <span class=\"comment\">//建立树布局</span></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">minHeight</span> = <span class=\"number\">500</span>;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">viewerWidth</span> = $(<span class=\"string\">&quot;#screenshot&quot;</span>).<span class=\"title function_\">width</span>();</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">viewerHeight</span> = $(<span class=\"string\">&quot;#screenshot&quot;</span>).<span class=\"title function_\">height</span>();</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">viewerHeight</span>)</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">viewerHeight</span> &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">minHeight</span>)</span><br><span class=\"line\">       <span class=\"variable language_\">this</span>.<span class=\"property\">viewerHeight</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">minHeight</span></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">viewerHeight</span>=<span class=\"number\">500</span></span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">tree</span> = d3.<span class=\"property\">layout</span>.<span class=\"title function_\">tree</span>()</span><br><span class=\"line\">         .<span class=\"title function_\">size</span>([<span class=\"variable language_\">this</span>.<span class=\"property\">viewerHeight</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">viewerWidth</span>]);</span><br><span class=\"line\">     <span class=\"comment\">//定义一个d3对角线投影，供稍后的节点路径使用</span></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">diagonal</span> = d3.<span class=\"property\">svg</span>.<span class=\"title function_\">diagonal</span>()</span><br><span class=\"line\">         .<span class=\"title function_\">projection</span>(<span class=\"function\"><span class=\"params\">d</span> =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> [d.<span class=\"property\">y</span>, d.<span class=\"property\">x</span>];</span><br><span class=\"line\">         &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"comment\">//call visit to maxLabelLength</span></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"title function_\">visit</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">treeData</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">       <span class=\"variable language_\">this</span>.<span class=\"property\">totalNodes</span>++;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (d.<span class=\"property\">name</span>) &#123;</span><br><span class=\"line\">         <span class=\"variable language_\">this</span>.<span class=\"property\">maxLabelLength</span> = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(d.<span class=\"property\">name</span>.<span class=\"property\">length</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">maxLabelLength</span>);</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">         <span class=\"variable language_\">this</span>.<span class=\"property\">maxLabelLength</span> = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(<span class=\"number\">0</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">maxLabelLength</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> d.<span class=\"property\">children</span> &amp;&amp; d.<span class=\"property\">children</span>.<span class=\"property\">length</span> &gt; <span class=\"number\">0</span> ? d.<span class=\"property\">children</span> : <span class=\"literal\">null</span>;</span><br><span class=\"line\">     &#125;)</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;总节点&quot;</span>,<span class=\"variable language_\">this</span>.<span class=\"property\">totalNodes</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"comment\">//排序树最初是为了防止json没有按排序顺序排列</span></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"title function_\">sortTree</span>()</span><br><span class=\"line\">     <span class=\"comment\">//定义 zoomListener，该 zoomListener 在 scaleExtents 中约束的“zoom”事件上调用缩放</span></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">zoomListener</span> = d3.<span class=\"property\">behavior</span>.<span class=\"title function_\">zoom</span>().<span class=\"title function_\">scaleExtent</span>([<span class=\"number\">0.1</span>, <span class=\"number\">3</span>]).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;zoom&quot;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">       <span class=\"variable language_\">this</span>.<span class=\"title function_\">zoom</span>()</span><br><span class=\"line\">     &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"comment\">//创建视图</span></span><br><span class=\"line\">     <span class=\"keyword\">const</span> baseSvg = d3.<span class=\"title function_\">select</span>(<span class=\"string\">&quot;#tree-container&quot;</span>)</span><br><span class=\"line\">         .<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;svg&#x27;</span>)</span><br><span class=\"line\">         .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">viewerWidth</span>)</span><br><span class=\"line\">         .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">viewerHeight</span>)</span><br><span class=\"line\">         .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;class&quot;</span>,<span class=\"string\">&quot;overlay&quot;</span>)</span><br><span class=\"line\">         .<span class=\"title function_\">append</span>(<span class=\"string\">&quot;g&quot;</span>)</span><br><span class=\"line\">         .<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">zoomListener</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">let</span> dragListener = d3.<span class=\"property\">behavior</span>.<span class=\"title function_\">drag</span>()</span><br><span class=\"line\">         .<span class=\"title function_\">on</span>(<span class=\"string\">&quot;dragstart&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (d === <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>) &#123;</span><br><span class=\"line\">             <span class=\"keyword\">return</span>;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"variable language_\">this</span>.<span class=\"property\">dragStarted</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">           <span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">tree</span>.<span class=\"title function_\">nodes</span>(d);</span><br><span class=\"line\">           d3.<span class=\"property\">event</span>.<span class=\"property\">sourceEvent</span>.<span class=\"title function_\">stopPropagation</span>();</span><br><span class=\"line\">         &#125;).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;drag&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (d === <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>) &#123;</span><br><span class=\"line\">             <span class=\"keyword\">return</span>;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">dragStarted</span>) &#123;</span><br><span class=\"line\">             <span class=\"keyword\">let</span> domNode = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"title function_\">initiateDrag</span>(d, domNode);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"comment\">//获取mouseEvent相对于SVG容器的同弦以允许摇摄</span></span><br><span class=\"line\">           <span class=\"keyword\">let</span> relCoords = d3.<span class=\"title function_\">mouse</span>($(<span class=\"string\">&#x27;svg&#x27;</span>).<span class=\"title function_\">get</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (relCoords[<span class=\"number\">0</span>] &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">panBoundary</span>)&#123;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"title function_\">pan</span>(<span class=\"variable language_\">this</span>, <span class=\"string\">&#x27;left&#x27;</span>);</span><br><span class=\"line\">           &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (relCoords[<span class=\"number\">0</span>] &gt; ($(<span class=\"string\">&#x27;svg&#x27;</span>).<span class=\"title function_\">width</span>() - <span class=\"variable language_\">this</span>.<span class=\"property\">panBoundary</span>)) &#123;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"title function_\">pan</span>(<span class=\"variable language_\">this</span>, <span class=\"string\">&#x27;right&#x27;</span>);</span><br><span class=\"line\">           &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (relCoords[<span class=\"number\">1</span>] &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">panBoundary</span>) &#123;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"title function_\">pan</span>(<span class=\"variable language_\">this</span>, <span class=\"string\">&#x27;up&#x27;</span>);</span><br><span class=\"line\">           &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (relCoords[<span class=\"number\">1</span>] &gt; ($(<span class=\"string\">&#x27;svg&#x27;</span>).<span class=\"title function_\">height</span>() - <span class=\"variable language_\">this</span>.<span class=\"property\">panBoundary</span>)) &#123;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"title function_\">pan</span>(<span class=\"variable language_\">this</span>, <span class=\"string\">&#x27;down&#x27;</span>);</span><br><span class=\"line\">           &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">             <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">               <span class=\"built_in\">clearTimeout</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span>);</span><br><span class=\"line\">             &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           d.<span class=\"property\">x0</span> += d3.<span class=\"property\">event</span>.<span class=\"property\">dy</span>;</span><br><span class=\"line\">           d.<span class=\"property\">y0</span> += d3.<span class=\"property\">event</span>.<span class=\"property\">dx</span>;</span><br><span class=\"line\">           <span class=\"keyword\">var</span> node = d3.<span class=\"title function_\">select</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">           node.<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;transform&quot;</span>, <span class=\"string\">&quot;translate(&quot;</span> + d.<span class=\"property\">y0</span> + <span class=\"string\">&quot;,&quot;</span> + d.<span class=\"property\">x0</span> + <span class=\"string\">&quot;)&quot;</span>);</span><br><span class=\"line\">           <span class=\"comment\">//更新临时连接器</span></span><br><span class=\"line\">           <span class=\"variable language_\">this</span>.<span class=\"title function_\">updateTempConnector</span>();</span><br><span class=\"line\">         &#125;).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;dragend&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (d === <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>) &#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">           <span class=\"variable language_\">this</span>.<span class=\"property\">domNode</span> = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>)&#123;</span><br><span class=\"line\">             <span class=\"keyword\">var</span> index = <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">parent</span>.<span class=\"property\">children</span>.<span class=\"title function_\">indexOf</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>);</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (index &gt; -<span class=\"number\">1</span> )&#123;</span><br><span class=\"line\">               <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">parent</span>.<span class=\"property\">children</span>.<span class=\"title function_\">splice</span>(index, <span class=\"number\">1</span>);</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">children</span> !== <span class=\"string\">&quot;undefined&quot;</span> || <span class=\"keyword\">typeof</span> <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">_children</span> !== <span class=\"string\">&#x27;undefined&#x27;</span>)&#123;</span><br><span class=\"line\">               <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">_children</span> !== <span class=\"string\">&quot;undefined&quot;</span>) &#123;</span><br><span class=\"line\">                 <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">children</span>.<span class=\"title function_\">push</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>)</span><br><span class=\"line\">               &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                 <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">_children</span>.<span class=\"title function_\">push</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>)</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">             &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">               <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">children</span> = []</span><br><span class=\"line\">               <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">children</span>.<span class=\"title function_\">push</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>)</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">             <span class=\"comment\">//确保要添加到的节点已展开，以便用户可以看到添加的节点已正确移动</span></span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"title function_\">expand</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>);</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"title function_\">sortTree</span>();</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"title function_\">endDrag</span>();</span><br><span class=\"line\">           &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"title function_\">endDrag</span>();</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">         &#125;);</span><br><span class=\"line\">     <span class=\"comment\">//附加一个包含所有节点的组，缩放侦听器可以对其进行操作。</span></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">svgGroup</span> = baseSvg.<span class=\"title function_\">append</span>(<span class=\"string\">&quot;g&quot;</span>);</span><br><span class=\"line\">     <span class=\"comment\">//移除双击</span></span><br><span class=\"line\">     d3.<span class=\"title function_\">select</span>(<span class=\"string\">&quot;svg&quot;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;dblclick.zoom&quot;</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">root</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">treeData</span>;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>.<span class=\"property\">x0</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">viewerHeight</span>/<span class=\"number\">2</span>;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>.<span class=\"property\">y0</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">     <span class=\"comment\">//最初布局树并以根节点为中心。</span></span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>.<span class=\"property\">children</span>.<span class=\"title function_\">forEach</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">collapse</span>);</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"title function_\">update</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>);</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"title function_\">centerNode</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>);</span><br><span class=\"line\">   &#125;,</span><br></pre></td></tr></table></figure>\r\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">update</span>(<span class=\"params\">source</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> width = <span class=\"number\">130</span>,</span><br><span class=\"line\">          height = <span class=\"number\">70</span>;</span><br><span class=\"line\">      <span class=\"comment\">//计算新 树图的布局</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">tree</span>.<span class=\"title function_\">nodes</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>).<span class=\"title function_\">reverse</span>();</span><br><span class=\"line\">      <span class=\"keyword\">let</span> links = <span class=\"variable language_\">this</span>.<span class=\"property\">tree</span>.<span class=\"title function_\">links</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span>)</span><br><span class=\"line\">      <span class=\"comment\">//设置y坐标点  每层占  200px；</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">d</span>=&gt;</span>&#123;</span><br><span class=\"line\">        d.<span class=\"property\">y</span>=d.<span class=\"property\">depth</span> * <span class=\"number\">200</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//每个node对应一个group</span></span><br><span class=\"line\">      <span class=\"comment\">//data()：绑定一个数组到选择集上，数组的各项值分别与选择集的各元素绑定</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> node = <span class=\"variable language_\">this</span>.<span class=\"property\">svgGroup</span>.<span class=\"title function_\">selectAll</span>(<span class=\"string\">&quot;g.node&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">data</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> d.<span class=\"property\">id</span> || (d.<span class=\"property\">id</span> = ++ <span class=\"variable language_\">this</span>.<span class=\"property\">i</span>)</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//新增节点数据集，设置位置</span></span><br><span class=\"line\">      <span class=\"comment\">//在 svg 中添加一个g，g是 svg 中的一个属性，是 group 的意思，</span></span><br><span class=\"line\">      <span class=\"comment\">// 它表示一组什么东西，如一组 lines ， rects ，circles</span></span><br><span class=\"line\">      <span class=\"comment\">// 其实坐标轴就是由这些东西构成的。</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> nodeEnter = node.<span class=\"title function_\">enter</span>().<span class=\"title function_\">append</span>(<span class=\"string\">&quot;g&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;class&quot;</span>, <span class=\"string\">&quot;node&quot;</span>) <span class=\"comment\">//attr设置html属性，style设置css属性</span></span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;transform&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;translate(&quot;</span> + source.<span class=\"property\">y0</span> + <span class=\"string\">&quot;,&quot;</span> + source.<span class=\"property\">x0</span> + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">          &#125;).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;dblclick&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123; <span class=\"variable language_\">this</span>.<span class=\"title function_\">click</span>(d) &#125;);</span><br><span class=\"line\">      <span class=\"comment\">//添加连接点---此处设置的是圆圈过渡时候的效果（颜色）</span></span><br><span class=\"line\">      nodeEnter.<span class=\"title function_\">append</span>(<span class=\"string\">&quot;rect&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;x&quot;</span>, -<span class=\"number\">65</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;y&quot;</span>,-<span class=\"number\">35</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;width&quot;</span>, width)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;height&quot;</span>, height)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;rx&quot;</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill&quot;</span>, <span class=\"string\">&quot;#FFF&quot;</span>); <span class=\"comment\">//d 代表数据，也就是与某元素绑定的数据。</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//指标名称</span></span><br><span class=\"line\">      nodeEnter.<span class=\"title function_\">append</span>(<span class=\"string\">&quot;text&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;x&quot;</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;dy&quot;</span>, -<span class=\"number\">20</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;text-anchor&quot;</span>, <span class=\"string\">&quot;middle&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">text</span>(<span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> d.<span class=\"property\">name</span>;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill&quot;</span>, <span class=\"string\">&quot;gray&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill-opacity&quot;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;font-size&quot;</span>, <span class=\"string\">&quot;12px&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//指标值</span></span><br><span class=\"line\">      nodeEnter.<span class=\"title function_\">append</span>(<span class=\"string\">&quot;text&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;x&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> d.<span class=\"property\">children</span> || d.<span class=\"property\">_children</span> ? -<span class=\"number\">15</span> : -<span class=\"number\">15</span>;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;dy&quot;</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">          <span class=\"comment\">// .attr(&quot;text-anchor&quot;, (d) &#123; return d.children || d._children ? &quot;end&quot; : &quot;start&quot;; &#125;)</span></span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;text-anchor&quot;</span>, <span class=\"string\">&quot;middle&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">text</span>(<span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> d.<span class=\"property\">value</span>.<span class=\"title function_\">toLocaleString</span>();</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill&quot;</span>, <span class=\"string\">&quot;blue&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;font-size&quot;</span>, <span class=\"string\">&quot;18px&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//指标单位</span></span><br><span class=\"line\">      nodeEnter.<span class=\"title function_\">append</span>(<span class=\"string\">&quot;text&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;x&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> d.<span class=\"property\">children</span> || d.<span class=\"property\">_children</span> ? d.<span class=\"property\">value</span> != <span class=\"literal\">null</span> ? d.<span class=\"property\">value</span>.<span class=\"title function_\">toString</span>().<span class=\"property\">length</span> * <span class=\"number\">6</span> - <span class=\"number\">4</span> : <span class=\"number\">10</span> : d.<span class=\"property\">value</span> != <span class=\"literal\">null</span> ? d.<span class=\"property\">value</span>.<span class=\"title function_\">toString</span>().<span class=\"property\">length</span> * <span class=\"number\">6</span> - <span class=\"number\">4</span> : <span class=\"number\">10</span>;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;dy&quot;</span>, -<span class=\"number\">3</span>)</span><br><span class=\"line\">          <span class=\"comment\">// .attr(&quot;text-anchor&quot;, (d) &#123; return d.children || d._children ? &quot;end&quot; : &quot;start&quot;; &#125;)</span></span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;text-anchor&quot;</span>, <span class=\"string\">&quot;middle&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">text</span>(<span class=\"string\">&quot;万元&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill&quot;</span>, <span class=\"string\">&quot;gray&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;font-size&quot;</span>, <span class=\"string\">&quot;10px&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//展开趋势图</span></span><br><span class=\"line\">      nodeEnter.<span class=\"title function_\">append</span>(<span class=\"string\">&quot;text&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;x&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> d.<span class=\"property\">children</span> || d.<span class=\"property\">_children</span> ? <span class=\"number\">50</span> : <span class=\"number\">50</span>;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;dy&quot;</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;text-anchor&quot;</span>, <span class=\"string\">&quot;middle&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">text</span>(<span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;...&quot;</span></span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill&quot;</span>, <span class=\"string\">&quot;gray&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill-opacity&quot;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;font-size&quot;</span>, <span class=\"string\">&quot;28px&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">on</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\">(<span class=\"params\">d, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;触发点击事件&quot;</span>)</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">      <span class=\"comment\">// Transition nodes to their new position.将节点过渡到一个新的位置-----主要是针对节点过渡过程中的过渡效果</span></span><br><span class=\"line\">      <span class=\"comment\">//node就是保留的数据集，为原来数据的图形添加过渡动画。首先是整个组的位置</span></span><br><span class=\"line\">      <span class=\"comment\">//子节点全出来了</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> nodeUpdate = node.<span class=\"title function_\">transition</span>() <span class=\"comment\">//开始一个动画过度</span></span><br><span class=\"line\">          .<span class=\"title function_\">duration</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">duration</span>) <span class=\"comment\">//过渡延迟时间 此处主要设置的是圆圈节点随斜线的过渡延迟</span></span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;transform&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;translate(&quot;</span> + d.<span class=\"property\">y</span> + <span class=\"string\">&quot;,&quot;</span> + d.<span class=\"property\">x</span> + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeUpdate.<span class=\"title function_\">select</span>(<span class=\"string\">&quot;rect&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;x&quot;</span>, -<span class=\"number\">65</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;y&quot;</span>, -<span class=\"number\">35</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;width&quot;</span>, width)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;height&quot;</span>, height/<span class=\"number\">2</span> + <span class=\"number\">10</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;rx&quot;</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill&quot;</span>, <span class=\"string\">&quot;#FFF&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;stroke&quot;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">d</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(d.<span class=\"property\">value</span> === <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span> <span class=\"string\">&#x27;#6b6b6b&#x27;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;steelblue&#x27;</span></span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;stroke-width&quot;</span>, <span class=\"string\">&quot;1.5px&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Transition exiting nodes to the parent&#x27;s new position.过渡现有的节点到父母的新位置。</span></span><br><span class=\"line\">      <span class=\"comment\">//最后处理消失的数据，添加消失动画</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> nodeExit = node.<span class=\"title function_\">exit</span>().<span class=\"title function_\">transition</span>()</span><br><span class=\"line\">          .<span class=\"title function_\">duration</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">duration</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;transform&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;translate(&quot;</span> + source.<span class=\"property\">y</span> + <span class=\"string\">&quot;,&quot;</span> + source.<span class=\"property\">x</span> + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">remove</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeExit.<span class=\"title function_\">select</span>(<span class=\"string\">&quot;rect&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;x&quot;</span>, -<span class=\"number\">65</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;y&quot;</span>, -<span class=\"number\">35</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;width&quot;</span>, width)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;height&quot;</span>, height/<span class=\"number\">2</span> +<span class=\"number\">10</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;rx&quot;</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill&quot;</span>, <span class=\"string\">&quot;#FFF&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeExit.<span class=\"title function_\">select</span>(<span class=\"string\">&quot;text&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;text-anchor&quot;</span>, <span class=\"string\">&quot;middle&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill-opacity&quot;</span>, <span class=\"number\">1e-6</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Update the links…线操作相关</span></span><br><span class=\"line\">      <span class=\"comment\">//再处理连线集合</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> link = <span class=\"variable language_\">this</span>.<span class=\"property\">svgGroup</span>.<span class=\"title function_\">selectAll</span>(<span class=\"string\">&quot;path.link&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill&quot;</span>, <span class=\"string\">&quot;none&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;stroke&quot;</span>, <span class=\"string\">&quot;steelblue&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;stroke-width&quot;</span>, <span class=\"string\">&quot;1.5px&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">data</span>(links, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> d.<span class=\"property\">target</span>.<span class=\"property\">id</span>;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Enter any new links at the parent&#x27;s previous position.</span></span><br><span class=\"line\">      <span class=\"comment\">//添加新的连线</span></span><br><span class=\"line\"></span><br><span class=\"line\">      link.<span class=\"title function_\">enter</span>().<span class=\"title function_\">insert</span>(<span class=\"string\">&quot;path&quot;</span>, <span class=\"string\">&quot;g&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill&quot;</span>, <span class=\"string\">&quot;none&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;stroke&quot;</span>, <span class=\"string\">&quot;steelblue&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;stroke-width&quot;</span>, <span class=\"string\">&quot;1.5px&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;class&quot;</span>, <span class=\"string\">&quot;link&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;d&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> o = &#123;</span><br><span class=\"line\">              <span class=\"attr\">x</span>: source.<span class=\"property\">x0</span>,</span><br><span class=\"line\">              <span class=\"attr\">y</span>: source.<span class=\"property\">y0</span></span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">diagonal</span>(&#123;</span><br><span class=\"line\">              <span class=\"attr\">source</span>: o,</span><br><span class=\"line\">              <span class=\"attr\">target</span>: o</span><br><span class=\"line\">            &#125;); <span class=\"comment\">//diagonal - 生成一个二维贝塞尔连接器, 用于节点连接图.</span></span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;marker-end&#x27;</span>, <span class=\"string\">&#x27;url(#arrow)&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Transition links to their new position.将斜线过渡到新的位置</span></span><br><span class=\"line\">      <span class=\"comment\">//保留的连线添加过渡动画</span></span><br><span class=\"line\">      link.<span class=\"title function_\">transition</span>()</span><br><span class=\"line\">          .<span class=\"title function_\">duration</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">duration</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;d&quot;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">diagonal</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Transition exiting nodes to the parent&#x27;s new position.过渡现有的斜线到父母的新位置。</span></span><br><span class=\"line\">      <span class=\"comment\">//消失的连线添加过渡动画</span></span><br><span class=\"line\">      link.<span class=\"title function_\">exit</span>().<span class=\"title function_\">transition</span>()</span><br><span class=\"line\">          .<span class=\"title function_\">duration</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">duration</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;d&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> o = &#123;</span><br><span class=\"line\">              <span class=\"attr\">x</span>: source.<span class=\"property\">x</span>,</span><br><span class=\"line\">              <span class=\"attr\">y</span>: source.<span class=\"property\">y</span></span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">diagonal</span>(&#123;</span><br><span class=\"line\">              <span class=\"attr\">source</span>: o,</span><br><span class=\"line\">              <span class=\"attr\">target</span>: o</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">remove</span>();</span><br><span class=\"line\">      <span class=\"comment\">// Stash the old positions for transition.将旧的斜线过渡效果隐藏</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        d.<span class=\"property\">x0</span> = d.<span class=\"property\">x</span>;</span><br><span class=\"line\">        d.<span class=\"property\">y0</span> = d.<span class=\"property\">y</span>;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\r\n<p>双击收展方法：</p>\r\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//展开节点</span></span><br><span class=\"line\"><span class=\"comment\">//children 展示节点 _children 隐藏节点  缩</span></span><br><span class=\"line\">    <span class=\"title function_\">expand</span>(<span class=\"params\">d</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (d.<span class=\"property\">_children</span>)&#123;</span><br><span class=\"line\">        d.<span class=\"property\">children</span> = d.<span class=\"property\">_children</span>;</span><br><span class=\"line\">        d.<span class=\"property\">children</span>.<span class=\"title function_\">forEach</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">expand</span>)</span><br><span class=\"line\">        d.<span class=\"property\">_children</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">//收缩节点</span></span><br><span class=\"line\">    <span class=\"title function_\">collapse</span>(<span class=\"params\">d</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (d.<span class=\"property\">children</span>)&#123;</span><br><span class=\"line\">        d.<span class=\"property\">_children</span>=d.<span class=\"property\">children</span>;</span><br><span class=\"line\">        d.<span class=\"property\">children</span>=<span class=\"literal\">null</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\r\n<p>根据数据判断层数：</p>\r\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//判断是否多层</span></span><br><span class=\"line\"><span class=\"title function_\">treeDepths</span>(<span class=\"params\">g</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> depths = [];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (g.<span class=\"property\">children</span>)</span><br><span class=\"line\">    g.<span class=\"property\">children</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">v</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">dfs</span>(v, <span class=\"number\">1</span>, depths);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> depths;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">//嵌套循环</span></span><br><span class=\"line\"><span class=\"title function_\">dfs</span>(<span class=\"params\">v, depth, depths</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> children = v.<span class=\"property\">children</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (children &amp;&amp; children.<span class=\"property\">length</span> &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    children.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">child</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">dfs</span>(child, depth + <span class=\"number\">1</span>, depths);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    depths.<span class=\"title function_\">push</span>(v);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\r\n<p>排序节点：</p>\r\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//排序</span></span><br><span class=\"line\"><span class=\"title function_\">sortTree</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;==排序开始==&quot;</span>)</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">tree</span>.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> b.<span class=\"property\">name</span> ? b.<span class=\"property\">name</span>.<span class=\"title function_\">toLowerCase</span>() : b.<span class=\"property\">name</span> &lt; a.<span class=\"property\">name</span> ? a.<span class=\"property\">name</span>.<span class=\"title function_\">toLowerCase</span>() : a.<span class=\"property\">name</span> ? <span class=\"number\">1</span> : -<span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<p>拖拉行为：</p>\r\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">zoom</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">svgGroup</span>.<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;transform&quot;</span>, <span class=\"string\">&quot;translate(&quot;</span> + d3.<span class=\"property\">event</span>.<span class=\"property\">translate</span> + <span class=\"string\">&quot;)scale(&quot;</span> + d3.<span class=\"property\">event</span>.<span class=\"property\">scale</span> + <span class=\"string\">&quot;)&quot;</span>);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">    </span><br><span class=\"line\">      <span class=\"comment\">//拖拽开始时对节点进行一系列操作，以确保拖拽过程中节点的正确显示和相关连线的调整。</span></span><br><span class=\"line\"><span class=\"title function_\">initiateDrag</span>(<span class=\"params\">d, domNode</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  将当前被拖拽的节点保存在this.draggingNode属性中，</span></span><br><span class=\"line\"><span class=\"comment\">  以便在拖拽过程中能够对其进行操作</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span> = d;</span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  1=</span></span><br><span class=\"line\"><span class=\"comment\">  为了将被拖拽节点的.ghostCircle元素的</span></span><br><span class=\"line\"><span class=\"comment\">  pointer-events属性设置为none，</span></span><br><span class=\"line\"><span class=\"comment\">  以避免拖拽节点时干扰到其他元素</span></span><br><span class=\"line\"><span class=\"comment\">  2=</span></span><br><span class=\"line\"><span class=\"comment\">  为了将所有.ghostCircle元素的类设置为ghostCircle show，</span></span><br><span class=\"line\"><span class=\"comment\">  这可能是用于显示拖拽节点周围的虚拟元素</span></span><br><span class=\"line\"><span class=\"comment\">  3=为了为被拖拽的节点设置类名，可能是用于在拖拽过程中应用特定的样式</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  d3.<span class=\"title function_\">select</span>(domNode).<span class=\"title function_\">select</span>(<span class=\"string\">&#x27;.ghostCircle&#x27;</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;pointer-events&#x27;</span>, <span class=\"string\">&#x27;none&#x27;</span>);</span><br><span class=\"line\">  d3.<span class=\"title function_\">selectAll</span>(<span class=\"string\">&#x27;.ghostCircle&#x27;</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;ghostCircle show&#x27;</span>);</span><br><span class=\"line\">  d3.<span class=\"title function_\">select</span>(domNode).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;node activeDrag&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  重新排序所有节点，将被拖拽的节点置于最前面，</span></span><br><span class=\"line\"><span class=\"comment\">  以确保它能够在拖拽过程中正确显示在其他节点之上</span></span><br><span class=\"line\"><span class=\"comment\">  选择父项并对路径的</span></span><br><span class=\"line\"><span class=\"comment\">  a 不是悬停元素，将“a”发送到后面</span></span><br><span class=\"line\"><span class=\"comment\">  a 是悬停元素，将“a”放在前面</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">svgGroup</span>.<span class=\"title function_\">selectAll</span>(<span class=\"string\">&quot;g.node&quot;</span>).<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123; <span class=\"comment\">// select the parent and sort the path&#x27;s</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a.<span class=\"property\">id</span> !== <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">id</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>; <span class=\"comment\">// a is not the hovered element, send &quot;a&quot; to the back</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> -<span class=\"number\">1</span>; <span class=\"comment\">// a is the hovered element, bring &quot;a&quot; to the front</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"comment\">// 如果节点有子节点，请删除链接和节点</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span>.<span class=\"property\">length</span> &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// remove link paths 删除链接路径</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> links = <span class=\"variable language_\">this</span>.<span class=\"property\">tree</span>.<span class=\"title function_\">links</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> nodePaths = <span class=\"variable language_\">this</span>.<span class=\"property\">svgGroup</span>.<span class=\"title function_\">selectAll</span>(<span class=\"string\">&quot;path.link&quot;</span>)</span><br><span class=\"line\">        .<span class=\"title function_\">data</span>(links, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> d.<span class=\"property\">target</span>.<span class=\"property\">id</span>;</span><br><span class=\"line\">        &#125;).<span class=\"title function_\">remove</span>();</span><br><span class=\"line\">    <span class=\"comment\">// remove child nodes 删除子节点</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> nodesExit = <span class=\"variable language_\">this</span>.<span class=\"property\">svgGroup</span>.<span class=\"title function_\">selectAll</span>(<span class=\"string\">&quot;g.node&quot;</span>)</span><br><span class=\"line\">        .<span class=\"title function_\">data</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> d.<span class=\"property\">id</span>;</span><br><span class=\"line\">        &#125;).<span class=\"title function_\">filter</span>(<span class=\"function\">(<span class=\"params\">d, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (d.<span class=\"property\">id</span> === <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">id</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;).<span class=\"title function_\">remove</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// remove parent link</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> parentLink = <span class=\"variable language_\">this</span>.<span class=\"property\">tree</span>.<span class=\"title function_\">links</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">tree</span>.<span class=\"title function_\">nodes</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">parent</span>));</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">svgGroup</span>.<span class=\"title function_\">selectAll</span>(<span class=\"string\">&#x27;path.link&#x27;</span>).<span class=\"title function_\">filter</span>(<span class=\"function\">(<span class=\"params\">d, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (d.<span class=\"property\">target</span>.<span class=\"property\">id</span> === <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">id</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;).<span class=\"title function_\">remove</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">dragStarted</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//更新指示拖动隶属关系的临时连接器</span></span><br><span class=\"line\"><span class=\"title function_\">updateTempConnector</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> data = [];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span> !== <span class=\"literal\">null</span> &amp;&amp; <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span> !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// have to flip the source coordinates since we did this for the existing connectors on the original tree</span></span><br><span class=\"line\">    data = [&#123;</span><br><span class=\"line\">      <span class=\"attr\">source</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">x</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">y0</span>,</span><br><span class=\"line\">        <span class=\"attr\">y</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">x0</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">target</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">x</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">y0</span>,</span><br><span class=\"line\">        <span class=\"attr\">y</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">x0</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> link = <span class=\"variable language_\">this</span>.<span class=\"property\">svgGroup</span>.<span class=\"title function_\">selectAll</span>(<span class=\"string\">&quot;.templink&quot;</span>).<span class=\"title function_\">data</span>(data);</span><br><span class=\"line\"></span><br><span class=\"line\">  link.<span class=\"title function_\">enter</span>().<span class=\"title function_\">append</span>(<span class=\"string\">&quot;path&quot;</span>)</span><br><span class=\"line\">      .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;class&quot;</span>, <span class=\"string\">&quot;templink&quot;</span>)</span><br><span class=\"line\">      .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;d&quot;</span>, d3.<span class=\"property\">svg</span>.<span class=\"title function_\">diagonal</span>())</span><br><span class=\"line\">      .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;pointer-events&#x27;</span>, <span class=\"string\">&#x27;none&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  link.<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;d&quot;</span>, d3.<span class=\"property\">svg</span>.<span class=\"title function_\">diagonal</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">  link.<span class=\"title function_\">exit</span>().<span class=\"title function_\">remove</span>();</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<h2 id=\"d3-方法介绍\">d3 方法介绍</h2>\r\n<h4 id=\"append\">append()</h4>\r\n<p><code>.append('svg')</code>和<code>.append('g')</code>是D3中的方法，用于在DOM中添加SVG元素和G元素。</p>\r\n<p><code>.append('svg')</code>方法用于在选定的DOM元素中添加一个SVG元素。SVG（可缩放矢量图形）是一种用于在Web上显示矢量图形的XML语言。通过使用<code>.append('svg')</code>方法，你可以在DOM中创建一个包含SVG图形的容器，以便在其中绘制图形、添加元素等。例如：</p>\r\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制d3.<span class=\"title function_\">select</span>(<span class=\"string\">&#x27;body&#x27;</span>).<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;svg&#x27;</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">500</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"number\">300</span>);</span><br></pre></td></tr></table></figure>\r\n<p>上述代码在<code>&lt;body&gt;</code>元素中添加了一个SVG元素，并设置宽度为500像素、高度为300像素。</p>\r\n<p><code>.append('g')</code>方法用于在已经存在的SVG元素中添加一个G元素。G元素是SVG中的分组元素，可以用于组织和管理其他SVG元素。你可以将G元素看作是一个容器，可以在其中放置其他SVG元素，然后对整个组进行变换、样式设置等操作。例如：</p>\r\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制<span class=\"keyword\">const</span> svg = d3.<span class=\"title function_\">select</span>(<span class=\"string\">&#x27;body&#x27;</span>).<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;svg&#x27;</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">500</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"number\">300</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> g = svg.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;g&#x27;</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">&#x27;translate(50, 50)&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">g.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;rect&#x27;</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;fill&#x27;</span>, <span class=\"string\">&#x27;blue&#x27;</span>);</span><br></pre></td></tr></table></figure>\r\n<p>上述代码先在<code>&lt;body&gt;</code>元素中添加了一个SVG元素，然后在SVG元素中添加了一个G元素，设置了G元素的平移变换，最后在G元素中添加了一个矩形元素。</p>\r\n<p>希望解答了你的问题。如果还有其他疑问，请随时提出。</p>\r\n<h5 id=\"d3.behavior.drag\">d3.behavior.drag()</h5>\r\n<ol type=\"1\">\r\n<li><code>dragstart</code>：当拖拽开始时触发。在这个回调函数中，首先判断拖拽的目标节点<code>d</code>是否为根节点<code>this.root</code>。如果是根节点，则直接返回，不执行后续的拖拽操作。否则，将<code>this.dragStarted</code>标志设置为<code>true</code>，并获取该节点的所有子节点。最后，通过<code>d3.event.sourceEvent.stopPropagation()</code>阻止事件继续传播。</li>\r\n<li><code>drag</code>：当拖拽过程中持续触发。在这个回调函数中，首先判断拖拽的目标节点<code>d</code>是否为根节点<code>this.root</code>。如果是根节点，则直接返回，不执行后续的拖拽操作。接下来，如果<code>this.dragStarted</code>为<code>true</code>，则调用<code>initiateDrag()</code>方法来初始化拖拽操作。然后，获取鼠标事件相对于SVG容器的坐标，并根据坐标来判断是否需要进行平移操作。最后，更新目标节点的位置，并调用<code>updateTempConnector()</code>方法更新临时连接器。</li>\r\n<li><code>dragend</code>：当拖拽结束时触发。在这个回调函数中，首先判断拖拽的目标节点<code>d</code>是否为根节点<code>this.root</code>，如果是根节点，则直接返回。接下来，将<code>this.domNode</code>设置为当前节点，并判断是否有选中的节点<code>this.selectedNode</code>。如果有选中的节点，则将被拖拽的节点<code>this.draggingNode</code>从其父节点中移除，并将其添加到选中的节点的子节点或子节点集合中，然后展开选中的节点，对树进行排序，并结束拖拽操作。如果没有选中的节点，则直接结束拖拽操作。</li>\r\n</ol>\r\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> dragListener = d3.<span class=\"property\">behavior</span>.<span class=\"title function_\">drag</span>()</span><br><span class=\"line\">          .<span class=\"title function_\">on</span>(<span class=\"string\">&quot;dragstart&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (d === <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>) &#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">dragStarted</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">tree</span>.<span class=\"title function_\">nodes</span>(d);</span><br><span class=\"line\">            d3.<span class=\"property\">event</span>.<span class=\"property\">sourceEvent</span>.<span class=\"title function_\">stopPropagation</span>();</span><br><span class=\"line\">          &#125;).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;drag&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (d === <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>) &#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">dragStarted</span>) &#123;</span><br><span class=\"line\">              <span class=\"keyword\">let</span> domNode = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"title function_\">initiateDrag</span>(d, domNode);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//获取mouseEvent相对于SVG容器的同弦以允许摇摄</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> relCoords = d3.<span class=\"title function_\">mouse</span>($(<span class=\"string\">&#x27;svg&#x27;</span>).<span class=\"title function_\">get</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (relCoords[<span class=\"number\">0</span>] &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">panBoundary</span>)&#123;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"title function_\">pan</span>(<span class=\"variable language_\">this</span>, <span class=\"string\">&#x27;left&#x27;</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (relCoords[<span class=\"number\">0</span>] &gt; ($(<span class=\"string\">&#x27;svg&#x27;</span>).<span class=\"title function_\">width</span>() - <span class=\"variable language_\">this</span>.<span class=\"property\">panBoundary</span>)) &#123;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"title function_\">pan</span>(<span class=\"variable language_\">this</span>, <span class=\"string\">&#x27;right&#x27;</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (relCoords[<span class=\"number\">1</span>] &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">panBoundary</span>) &#123;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"title function_\">pan</span>(<span class=\"variable language_\">this</span>, <span class=\"string\">&#x27;up&#x27;</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (relCoords[<span class=\"number\">1</span>] &gt; ($(<span class=\"string\">&#x27;svg&#x27;</span>).<span class=\"title function_\">height</span>() - <span class=\"variable language_\">this</span>.<span class=\"property\">panBoundary</span>)) &#123;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"title function_\">pan</span>(<span class=\"variable language_\">this</span>, <span class=\"string\">&#x27;down&#x27;</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"built_in\">clearTimeout</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span>);</span><br><span class=\"line\">              &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            d.<span class=\"property\">x0</span> += d3.<span class=\"property\">event</span>.<span class=\"property\">dy</span>;</span><br><span class=\"line\">            d.<span class=\"property\">y0</span> += d3.<span class=\"property\">event</span>.<span class=\"property\">dx</span>;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> node = d3.<span class=\"title function_\">select</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">            node.<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;transform&quot;</span>, <span class=\"string\">&quot;translate(&quot;</span> + d.<span class=\"property\">y0</span> + <span class=\"string\">&quot;,&quot;</span> + d.<span class=\"property\">x0</span> + <span class=\"string\">&quot;)&quot;</span>);</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"title function_\">updateTempConnector</span>();</span><br><span class=\"line\">          &#125;).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;dragend&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (d === <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>) &#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">domNode</span> = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>)&#123;</span><br><span class=\"line\">              <span class=\"keyword\">var</span> index = <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">parent</span>.<span class=\"property\">children</span>.<span class=\"title function_\">indexOf</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>);</span><br><span class=\"line\">              <span class=\"keyword\">if</span> (index &gt; -<span class=\"number\">1</span> )&#123;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">parent</span>.<span class=\"property\">children</span>.<span class=\"title function_\">splice</span>(index, <span class=\"number\">1</span>);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">children</span> !== <span class=\"string\">&quot;undefined&quot;</span> || <span class=\"keyword\">typeof</span> <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">_children</span> !== <span class=\"string\">&#x27;undefined&#x27;</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">_children</span> !== <span class=\"string\">&quot;undefined&quot;</span>) &#123;</span><br><span class=\"line\">                  <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">children</span>.<span class=\"title function_\">push</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>)</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                  <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">_children</span>.<span class=\"title function_\">push</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">children</span> = []</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">children</span>.<span class=\"title function_\">push</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>)</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              <span class=\"comment\">//确保要添加到的节点已展开，以便用户可以看到添加的节点已正确移动</span></span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"title function_\">expand</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>);</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"title function_\">sortTree</span>();</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"title function_\">endDrag</span>();</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"title function_\">endDrag</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;);</span><br></pre></td></tr></table></figure>\r\n<h2 id=\"end-完整代码\">End 完整代码</h2>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div block :scroll=&quot;true&quot;&gt;</span><br><span class=\"line\">    &lt;div style=&quot;background-color: white;border: 3px black;&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--    指标下钻--&gt;</span><br><span class=\"line\">  &lt;div id=&quot;screenshot&quot; style=&quot;width:100%;height:90%&quot;&gt;</span><br><span class=\"line\">    &lt;div id=&quot;tree-container&quot; style=&quot;width:100%;height:95%;&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import * as d3 from &#x27;d3&#x27;;</span><br><span class=\"line\">import $ from &#x27;jquery&#x27;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  data()&#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      treeData:&#123;</span><br><span class=\"line\">        name: &#x27;收入&#x27;,</span><br><span class=\"line\">        value:100,</span><br><span class=\"line\">        analysisContent:&quot;demo&quot;,</span><br><span class=\"line\">        children: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            name: &#x27;电费收入&#x27;,</span><br><span class=\"line\">            value: 10,</span><br><span class=\"line\">            analysisContent:&quot;demo&quot;,</span><br><span class=\"line\">            children: []</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            name: &#x27;供热收入&#x27;,</span><br><span class=\"line\">            value: 8,</span><br><span class=\"line\">            analysisContent:&quot;demo&quot;,</span><br><span class=\"line\">            children: []</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          ,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            name: &#x27;副产品收入&#x27;,</span><br><span class=\"line\">            value: 8,</span><br><span class=\"line\">            analysisContent:&quot;demo&quot;,</span><br><span class=\"line\">            children: []</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            name: &#x27;其他收入&#x27;,</span><br><span class=\"line\">            value: 8,</span><br><span class=\"line\">            analysisContent:&quot;demo&quot;,</span><br><span class=\"line\">            children: []</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      //视图大小</span><br><span class=\"line\">      viewerWidth:null,</span><br><span class=\"line\">      viewerHeight:null,</span><br><span class=\"line\">      minHeight:null,</span><br><span class=\"line\">      //层数 判断是否多层，默认显示2层</span><br><span class=\"line\">      depths:[],</span><br><span class=\"line\">      //对角线投影，供稍后的节点路径使用</span><br><span class=\"line\">      diagonal:null,</span><br><span class=\"line\">      //树布局</span><br><span class=\"line\">      tree:null,</span><br><span class=\"line\">      //总节点数</span><br><span class=\"line\">      totalNodes:null,</span><br><span class=\"line\">      //文字最大长度</span><br><span class=\"line\">      maxLabelLength:null,</span><br><span class=\"line\">      zoomListener:null,</span><br><span class=\"line\">      //dragListener  dragstart</span><br><span class=\"line\">      root:null,</span><br><span class=\"line\">      dragStarted:null,</span><br><span class=\"line\">      nodes:null,</span><br><span class=\"line\">      //dragListener  drag</span><br><span class=\"line\">      panTimer:null,</span><br><span class=\"line\">      //initiateDrag  用于拖放的变量</span><br><span class=\"line\">      draggingNode:null,</span><br><span class=\"line\">      selectedNode:null,</span><br><span class=\"line\">      // panning variables  平移变量</span><br><span class=\"line\">      panSpeed: 200,</span><br><span class=\"line\">      panBoundary: 20, // 拖动时，距离边缘 20px 以内将平移。</span><br><span class=\"line\">      // Misc. variables 其他变量</span><br><span class=\"line\">      i:0,</span><br><span class=\"line\">      domNode:null,</span><br><span class=\"line\"></span><br><span class=\"line\">      //centerNode</span><br><span class=\"line\">      duration:750,</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mounted() &#123;</span><br><span class=\"line\">    this.drawTree();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    drawTree() &#123;</span><br><span class=\"line\">      //show D3 tree</span><br><span class=\"line\">      this.depths = this.treeDepths(this.treeData);</span><br><span class=\"line\">      console.log(this.depths)</span><br><span class=\"line\">      //建立树布局</span><br><span class=\"line\">      this.minHeight = 500;</span><br><span class=\"line\">      this.viewerWidth = $(&quot;#screenshot&quot;).width();</span><br><span class=\"line\">      this.viewerHeight = $(&quot;#screenshot&quot;).height();</span><br><span class=\"line\">      console.log(this.viewerHeight)</span><br><span class=\"line\">      if (this.viewerHeight &lt; this.minHeight)</span><br><span class=\"line\">        this.viewerHeight = this.minHeight</span><br><span class=\"line\">      this.viewerHeight=500</span><br><span class=\"line\"></span><br><span class=\"line\">      this.tree = d3.layout.tree()</span><br><span class=\"line\">          .size([this.viewerHeight, this.viewerWidth]);</span><br><span class=\"line\">      //定义一个d3对角线投影，供稍后的节点路径使用</span><br><span class=\"line\">      this.diagonal = d3.svg.diagonal()</span><br><span class=\"line\">          .projection(d =&gt; &#123;</span><br><span class=\"line\">            return [d.y, d.x];</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">      //call visit to maxLabelLength</span><br><span class=\"line\">      this.visit(this.treeData, (d) =&gt; &#123;</span><br><span class=\"line\">        this.totalNodes++;</span><br><span class=\"line\">        if (d.name) &#123;</span><br><span class=\"line\">          this.maxLabelLength = Math.max(d.name.length, this.maxLabelLength);</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">          this.maxLabelLength = Math.max(0, this.maxLabelLength);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;, (d) =&gt; &#123;</span><br><span class=\"line\">        return d.children &amp;&amp; d.children.length &gt; 0 ? d.children : null;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      console.log(&quot;总节点&quot;,this.totalNodes)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">      //排序树最初是为了防止json没有按排序顺序排列</span><br><span class=\"line\">      this.sortTree()</span><br><span class=\"line\">      //定义 zoomListener，该 zoomListener 在 scaleExtents 中约束的“zoom”事件上调用缩放</span><br><span class=\"line\">      this.zoomListener = d3.behavior.zoom().scaleExtent([0.1, 3]).on(&quot;zoom&quot;, () =&gt; &#123;</span><br><span class=\"line\">        this.zoom()</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      //创建视图</span><br><span class=\"line\">      const baseSvg = d3.select(&quot;#tree-container&quot;)</span><br><span class=\"line\">          .append(&#x27;svg&#x27;)</span><br><span class=\"line\">          .attr(&#x27;width&#x27;, this.viewerWidth)</span><br><span class=\"line\">          .attr(&#x27;height&#x27;, this.viewerHeight)</span><br><span class=\"line\">          .attr(&quot;class&quot;,&quot;overlay&quot;)</span><br><span class=\"line\">          .append(&quot;g&quot;)</span><br><span class=\"line\">          .call(this.zoomListener)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">      let dragListener = d3.behavior.drag()</span><br><span class=\"line\">          .on(&quot;dragstart&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            if (d === this.root) &#123;</span><br><span class=\"line\">              return;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            this.dragStarted = true;</span><br><span class=\"line\">            this.nodes = this.tree.nodes(d);</span><br><span class=\"line\">            d3.event.sourceEvent.stopPropagation();</span><br><span class=\"line\">          &#125;).on(&quot;drag&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            if (d === this.root) &#123;</span><br><span class=\"line\">              return;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if (this.dragStarted) &#123;</span><br><span class=\"line\">              let domNode = this;</span><br><span class=\"line\">              this.initiateDrag(d, domNode);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            //获取mouseEvent相对于SVG容器的同弦以允许摇摄</span><br><span class=\"line\">            let relCoords = d3.mouse($(&#x27;svg&#x27;).get(0));</span><br><span class=\"line\">            if (relCoords[0] &lt; this.panBoundary)&#123;</span><br><span class=\"line\">              this.panTimer = true;</span><br><span class=\"line\">              this.pan(this, &#x27;left&#x27;);</span><br><span class=\"line\">            &#125;else if (relCoords[0] &gt; ($(&#x27;svg&#x27;).width() - this.panBoundary)) &#123;</span><br><span class=\"line\">              this.panTimer = true;</span><br><span class=\"line\">              this.pan(this, &#x27;right&#x27;);</span><br><span class=\"line\">            &#125;else if (relCoords[1] &lt; this.panBoundary) &#123;</span><br><span class=\"line\">              this.panTimer = true;</span><br><span class=\"line\">              this.pan(this, &#x27;up&#x27;);</span><br><span class=\"line\">            &#125;else if (relCoords[1] &gt; ($(&#x27;svg&#x27;).height() - this.panBoundary)) &#123;</span><br><span class=\"line\">              this.panTimer = true;</span><br><span class=\"line\">              this.pan(this, &#x27;down&#x27;);</span><br><span class=\"line\">            &#125;else &#123;</span><br><span class=\"line\">              try &#123;</span><br><span class=\"line\">                clearTimeout(this.panTimer);</span><br><span class=\"line\">              &#125; catch (e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            d.x0 += d3.event.dy;</span><br><span class=\"line\">            d.y0 += d3.event.dx;</span><br><span class=\"line\">            var node = d3.select(this);</span><br><span class=\"line\">            node.attr(&quot;transform&quot;, &quot;translate(&quot; + d.y0 + &quot;,&quot; + d.x0 + &quot;)&quot;);</span><br><span class=\"line\">            //更新临时连接器</span><br><span class=\"line\">            this.updateTempConnector();</span><br><span class=\"line\">          &#125;).on(&quot;dragend&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            if (d === this.root) &#123;return;&#125;</span><br><span class=\"line\">            this.domNode = this;</span><br><span class=\"line\">            if (this.selectedNode)&#123;</span><br><span class=\"line\">              var index = this.draggingNode.parent.children.indexOf(this.draggingNode);</span><br><span class=\"line\">              if (index &gt; -1 )&#123;</span><br><span class=\"line\">                this.draggingNode.parent.children.splice(index, 1);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              if (typeof this.selectedNode.children !== &quot;undefined&quot; || typeof this.selectedNode._children !== &#x27;undefined&#x27;)&#123;</span><br><span class=\"line\">                if (typeof this.selectedNode._children !== &quot;undefined&quot;) &#123;</span><br><span class=\"line\">                  this.selectedNode.children.push(this.draggingNode)</span><br><span class=\"line\">                &#125;else &#123;</span><br><span class=\"line\">                  this.selectedNode._children.push(this.draggingNode)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;else &#123;</span><br><span class=\"line\">                this.selectedNode.children = []</span><br><span class=\"line\">                this.selectedNode.children.push(this.draggingNode)</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              //确保要添加到的节点已展开，以便用户可以看到添加的节点已正确移动</span><br><span class=\"line\">              this.expand(this.selectedNode);</span><br><span class=\"line\">              this.sortTree();</span><br><span class=\"line\">              this.endDrag();</span><br><span class=\"line\">            &#125;else&#123;</span><br><span class=\"line\">              this.endDrag();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">      //附加一个包含所有节点的组，缩放侦听器可以对其进行操作。</span><br><span class=\"line\">      this.svgGroup = baseSvg.append(&quot;g&quot;);</span><br><span class=\"line\">      //移除双击</span><br><span class=\"line\">      d3.select(&quot;svg&quot;).on(&quot;dblclick.zoom&quot;, null);</span><br><span class=\"line\">      this.root = this.treeData;</span><br><span class=\"line\">      this.root.x0 = this.viewerHeight/2;</span><br><span class=\"line\">      this.root.y0 = 0;</span><br><span class=\"line\">      //最初布局树并以根节点为中心。</span><br><span class=\"line\">      //添加提示框 div</span><br><span class=\"line\">      this.tooltip = d3.select(&quot;#tree-container&quot;).append(&quot;div&quot;)</span><br><span class=\"line\">          .attr(&quot;class&quot;, &quot;tooltip&quot;)</span><br><span class=\"line\">          .style(&quot;opacity&quot;, &quot;1.0&quot;)</span><br><span class=\"line\">          .style(&quot;display&quot;,&quot;none&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">      this.root.children.forEach(this.collapse);</span><br><span class=\"line\">      this.update(this.root);</span><br><span class=\"line\">      this.centerNode(this.root);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    //判断是否多层</span><br><span class=\"line\">    treeDepths(g) &#123;</span><br><span class=\"line\">      var depths = [];</span><br><span class=\"line\">      if (g.children)</span><br><span class=\"line\">        g.children.forEach((v) =&gt; &#123;</span><br><span class=\"line\">          this.dfs(v, 1, depths);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      return depths;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    //嵌套循环</span><br><span class=\"line\">    dfs(v, depth, depths) &#123;</span><br><span class=\"line\">      var children = v.children;</span><br><span class=\"line\">      if (children &amp;&amp; children.length &gt; 0) &#123;</span><br><span class=\"line\">        children.forEach((child) =&gt; &#123;</span><br><span class=\"line\">          this.dfs(child, depth + 1, depths);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        depths.push(v);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    //递归 通过遍历所有节点  执行某些设置</span><br><span class=\"line\">    visit(parent, visitFn, childrenFn) &#123;</span><br><span class=\"line\">      if (!parent) return;</span><br><span class=\"line\">      visitFn(parent);</span><br><span class=\"line\">      var children = childrenFn(parent);</span><br><span class=\"line\">      if (children) &#123;</span><br><span class=\"line\">        var count = children.length;</span><br><span class=\"line\">        for (var i = 0; i &lt; count; i++) &#123;</span><br><span class=\"line\">          this.visit(children[i], visitFn, childrenFn);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    //排序</span><br><span class=\"line\">    sortTree() &#123;</span><br><span class=\"line\">      console.log(&quot;==排序开始==&quot;)</span><br><span class=\"line\">      this.tree.sort((a, b) =&gt; &#123;</span><br><span class=\"line\">        return b.name ? b.name.toLowerCase() : b.name &lt; a.name ? a.name.toLowerCase() : a.name ? 1 : -1;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    zoom() &#123;</span><br><span class=\"line\">      this.svgGroup.attr(&quot;transform&quot;, &quot;translate(&quot; + d3.event.translate + &quot;)scale(&quot; + d3.event.scale + &quot;)&quot;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    //拖拽开始时对节点进行一系列操作，以确保拖拽过程中节点的正确显示和相关连线的调整。</span><br><span class=\"line\">    initiateDrag(d, domNode) &#123;</span><br><span class=\"line\">      /*</span><br><span class=\"line\">      将当前被拖拽的节点保存在this.draggingNode属性中，</span><br><span class=\"line\">      以便在拖拽过程中能够对其进行操作</span><br><span class=\"line\">       */</span><br><span class=\"line\">      this.draggingNode = d;</span><br><span class=\"line\">      /*</span><br><span class=\"line\">      1=</span><br><span class=\"line\">      为了将被拖拽节点的.ghostCircle元素的</span><br><span class=\"line\">      pointer-events属性设置为none，</span><br><span class=\"line\">      以避免拖拽节点时干扰到其他元素</span><br><span class=\"line\">      2=</span><br><span class=\"line\">      为了将所有.ghostCircle元素的类设置为ghostCircle show，</span><br><span class=\"line\">      这可能是用于显示拖拽节点周围的虚拟元素</span><br><span class=\"line\">      3=为了为被拖拽的节点设置类名，可能是用于在拖拽过程中应用特定的样式</span><br><span class=\"line\">       */</span><br><span class=\"line\">      d3.select(domNode).select(&#x27;.ghostCircle&#x27;).attr(&#x27;pointer-events&#x27;, &#x27;none&#x27;);</span><br><span class=\"line\">      d3.selectAll(&#x27;.ghostCircle&#x27;).attr(&#x27;class&#x27;, &#x27;ghostCircle show&#x27;);</span><br><span class=\"line\">      d3.select(domNode).attr(&#x27;class&#x27;, &#x27;node activeDrag&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">      /*</span><br><span class=\"line\">      重新排序所有节点，将被拖拽的节点置于最前面，</span><br><span class=\"line\">      以确保它能够在拖拽过程中正确显示在其他节点之上</span><br><span class=\"line\">      选择父项并对路径的</span><br><span class=\"line\">      a 不是悬停元素，将“a”发送到后面</span><br><span class=\"line\">      a 是悬停元素，将“a”放在前面</span><br><span class=\"line\">       */</span><br><span class=\"line\">      this.svgGroup.selectAll(&quot;g.node&quot;).sort((a, b) =&gt; &#123; // select the parent and sort the path&#x27;s</span><br><span class=\"line\">        if (a.id !== this.draggingNode.id) return 1; // a is not the hovered element, send &quot;a&quot; to the back</span><br><span class=\"line\">        else return -1; // a is the hovered element, bring &quot;a&quot; to the front</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      // 如果节点有子节点，请删除链接和节点</span><br><span class=\"line\">      if (this.nodes.length &gt; 1) &#123;</span><br><span class=\"line\">        // remove link paths 删除链接路径</span><br><span class=\"line\">        let links = this.tree.links(this.nodes);</span><br><span class=\"line\">        let nodePaths = this.svgGroup.selectAll(&quot;path.link&quot;)</span><br><span class=\"line\">            .data(links, (d) =&gt; &#123;</span><br><span class=\"line\">              return d.target.id;</span><br><span class=\"line\">            &#125;).remove();</span><br><span class=\"line\">        // remove child nodes 删除子节点</span><br><span class=\"line\">        let nodesExit = this.svgGroup.selectAll(&quot;g.node&quot;)</span><br><span class=\"line\">            .data(this.nodes, (d) =&gt; &#123;</span><br><span class=\"line\">              return d.id;</span><br><span class=\"line\">            &#125;).filter((d, i) =&gt; &#123;</span><br><span class=\"line\">              if (d.id === this.draggingNode.id) &#123;</span><br><span class=\"line\">                return false;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              return true;</span><br><span class=\"line\">            &#125;).remove();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      // remove parent link</span><br><span class=\"line\">      let parentLink = this.tree.links(this.tree.nodes(this.draggingNode.parent));</span><br><span class=\"line\">      this.svgGroup.selectAll(&#x27;path.link&#x27;).filter((d, i) =&gt; &#123;</span><br><span class=\"line\">        if (d.target.id === this.draggingNode.id) &#123;</span><br><span class=\"line\">          return true;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">      &#125;).remove();</span><br><span class=\"line\"></span><br><span class=\"line\">      this.dragStarted = null;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    pan(domNode, direction)&#123;</span><br><span class=\"line\">      let speed = this.panSpeed,translateX,translateY;</span><br><span class=\"line\">      if (this.panTimer)&#123;</span><br><span class=\"line\">        clearTimeout(this.panTimer);</span><br><span class=\"line\">        let translateCoords = d3.transform(this.svgGroup.attr(&quot;transform&quot;));</span><br><span class=\"line\">        if (direction === &#x27;left&#x27; || direction === &#x27;right&#x27;) &#123;</span><br><span class=\"line\">          translateX = direction === &#x27;left&#x27; ? translateCoords.translate[0] + speed : translateCoords.translate[0] - speed;</span><br><span class=\"line\">          translateY = translateCoords.translate[1];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (direction === &#x27;up&#x27; || direction === &#x27;down&#x27;) &#123;</span><br><span class=\"line\">          translateX = translateCoords.translate[0];</span><br><span class=\"line\">          translateY = direction === &#x27;up&#x27; ? translateCoords.translate[1] + speed : translateCoords.translate[1] - speed;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        let scaleX = translateCoords.scale[0];</span><br><span class=\"line\">        let scaleY = translateCoords.scale[1];</span><br><span class=\"line\">        let scale = this.zoomListener.scale();</span><br><span class=\"line\">        this.svgGroup.transition().attr(&quot;transform&quot;, &quot;translate(&quot; + translateX + &quot;,&quot; + translateY + &quot;)scale(&quot; + scale + &quot;)&quot;);</span><br><span class=\"line\">        d3.select(domNode).select(&#x27;g.node&#x27;).attr(&quot;transform&quot;, &quot;translate(&quot; + translateX + &quot;,&quot; + translateY + &quot;)&quot;);</span><br><span class=\"line\">        this.zoomListener.scale(this.zoomListener.scale());</span><br><span class=\"line\">        this.zoomListener.translate([translateX, translateY]);</span><br><span class=\"line\">        this.panTimer = setTimeout(()=&gt;&#123;</span><br><span class=\"line\">          this.pan(domNode, direction);</span><br><span class=\"line\">        &#125;,50)</span><br><span class=\"line\"></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    //to update the temporary connector indicating dragging affiliation</span><br><span class=\"line\">    //更新指示拖动隶属关系的临时连接器</span><br><span class=\"line\">    updateTempConnector() &#123;</span><br><span class=\"line\">      var data = [];</span><br><span class=\"line\">      if (this.draggingNode !== null &amp;&amp; this.selectedNode !== null) &#123;</span><br><span class=\"line\">        // have to flip the source coordinates since we did this for the existing connectors on the original tree</span><br><span class=\"line\">        data = [&#123;</span><br><span class=\"line\">          source: &#123;</span><br><span class=\"line\">            x: this.selectedNode.y0,</span><br><span class=\"line\">            y: this.selectedNode.x0</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          target: &#123;</span><br><span class=\"line\">            x: this.draggingNode.y0,</span><br><span class=\"line\">            y: this.draggingNode.x0</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      let link = this.svgGroup.selectAll(&quot;.templink&quot;).data(data);</span><br><span class=\"line\"></span><br><span class=\"line\">      link.enter().append(&quot;path&quot;)</span><br><span class=\"line\">          .attr(&quot;class&quot;, &quot;templink&quot;)</span><br><span class=\"line\">          .attr(&quot;d&quot;, d3.svg.diagonal())</span><br><span class=\"line\">          .attr(&#x27;pointer-events&#x27;, &#x27;none&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">      link.attr(&quot;d&quot;, d3.svg.diagonal());</span><br><span class=\"line\"></span><br><span class=\"line\">      link.exit().remove();</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    //展开节点</span><br><span class=\"line\">    expand(d)&#123;</span><br><span class=\"line\">      if (d._children)&#123;</span><br><span class=\"line\">        d.children = d._children;</span><br><span class=\"line\">        d.children.forEach(this.expand)</span><br><span class=\"line\">        d._children = null</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    //在拖拽操作结束后，重置节点和虚拟节点的样式和属性，以确保它们恢复到正常状态并且不再响应鼠标事件。</span><br><span class=\"line\">    endDrag()&#123;</span><br><span class=\"line\">      this.selectedNode = null;</span><br><span class=\"line\">      d3.selectAll(&#x27;.ghostCircle&#x27;).attr(&#x27;class&#x27;,&#x27;ghostCircle&#x27;);</span><br><span class=\"line\">      d3.select(this.domNode).attr(&#x27;class&#x27;, &#x27;node&#x27;);</span><br><span class=\"line\">      //禁用这些元素的鼠标事件，使其在拖拽过程中不再响应鼠标交互</span><br><span class=\"line\">      d3.select(this.domNode).select(&#x27;.ghostCircle&#x27;).attr(&#x27;pointer-events&#x27;, &#x27;none&#x27;);</span><br><span class=\"line\">      this.updateTempConnector()</span><br><span class=\"line\">      if (this.draggingNode !=null )&#123;</span><br><span class=\"line\">        this.update(this.root)</span><br><span class=\"line\">        this.centerNode(this.draggingNode)</span><br><span class=\"line\">        this.draggingNode = null;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    //节点更新   重点</span><br><span class=\"line\">    update(source)&#123;</span><br><span class=\"line\">      var width = 130,</span><br><span class=\"line\">          height = 70;</span><br><span class=\"line\">      //计算新 树图的布局</span><br><span class=\"line\">      this.nodes = this.tree.nodes(this.root).reverse();</span><br><span class=\"line\">      let links = this.tree.links(this.nodes)</span><br><span class=\"line\">      //设置y坐标点  每层占  200px；</span><br><span class=\"line\">      this.nodes.forEach(d=&gt;&#123;</span><br><span class=\"line\">        d.y=d.depth * 200</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">      //每个node对应一个group</span><br><span class=\"line\">      //data()：绑定一个数组到选择集上，数组的各项值分别与选择集的各元素绑定</span><br><span class=\"line\">      let node = this.svgGroup.selectAll(&quot;g.node&quot;)</span><br><span class=\"line\">          .data(this.nodes, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.id || (d.id = ++ this.i)</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">      //新增节点数据集，设置位置</span><br><span class=\"line\">      //在 svg 中添加一个g，g是 svg 中的一个属性，是 group 的意思，</span><br><span class=\"line\">      // 它表示一组什么东西，如一组 lines ， rects ，circles</span><br><span class=\"line\">      // 其实坐标轴就是由这些东西构成的。</span><br><span class=\"line\">      let nodeEnter = node.enter().append(&quot;g&quot;)</span><br><span class=\"line\">          .attr(&quot;class&quot;, &quot;node&quot;) //attr设置html属性，style设置css属性</span><br><span class=\"line\">          .attr(&quot;transform&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return &quot;translate(&quot; + source.y0 + &quot;,&quot; + source.x0 + &quot;)&quot;;</span><br><span class=\"line\">          &#125;).on(&quot;dblclick&quot;, (d) =&gt; &#123; this.click(d) &#125;);</span><br><span class=\"line\">      //添加连接点---此处设置的是圆圈过渡时候的效果（颜色）</span><br><span class=\"line\">      nodeEnter.append(&quot;rect&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, -65)</span><br><span class=\"line\">          .attr(&quot;y&quot;,-35)</span><br><span class=\"line\">          .attr(&quot;width&quot;, width)</span><br><span class=\"line\">          .attr(&quot;height&quot;, height)</span><br><span class=\"line\">          .attr(&quot;rx&quot;, 10)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;#FFF&quot;); //d 代表数据，也就是与某元素绑定的数据。</span><br><span class=\"line\"></span><br><span class=\"line\">      //指标名称</span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, 0)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, -25)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text((d) =&gt; &#123;</span><br><span class=\"line\">            return d.name;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;gray&quot;)</span><br><span class=\"line\">          .style(&quot;fill-opacity&quot;, 1)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;10px&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">      //指标值</span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.children || d._children ? -15 : -15;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, -5)</span><br><span class=\"line\">          // .attr(&quot;text-anchor&quot;, (d) &#123; return d.children || d._children ? &quot;end&quot; : &quot;start&quot;; &#125;)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text((d) =&gt; &#123;</span><br><span class=\"line\">            return d.value.toLocaleString();</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;blue&quot;)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;18px&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">      //指标单位</span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.children || d._children ? d.value != null ? d.value.toString().length * 6 - 4 : 10 : d.value != null ? d.value.toString().length * 6 - 4 : 10;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, -5)</span><br><span class=\"line\">          // .attr(&quot;text-anchor&quot;, (d) &#123; return d.children || d._children ? &quot;end&quot; : &quot;start&quot;; &#125;)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text(&quot;万元&quot;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;gray&quot;)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;10px&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeEnter.append(&quot;line&quot;)</span><br><span class=\"line\">          .attr(&quot;x1&quot;, -width / 2)</span><br><span class=\"line\">          .attr(&quot;y1&quot;, 5)</span><br><span class=\"line\">          .attr(&quot;x2&quot;, width / 2)</span><br><span class=\"line\">          .attr(&quot;y2&quot;, 5)</span><br><span class=\"line\">          .attr(&quot;stroke&quot;,function(d)&#123;</span><br><span class=\"line\">            if(d.value === 0)&#123;</span><br><span class=\"line\">              return &#x27;#6b6b6b&#x27;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            return &#x27;steelblue&#x27;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.children || d._children ? -40 : -40;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, 15)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text((d) =&gt; &#123;</span><br><span class=\"line\">            return &quot;同比&quot;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;gray&quot;)</span><br><span class=\"line\">          .style(&quot;fill-opacity&quot;, 1)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;10px&quot;);;</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.children || d._children ? -58 : -58;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, 30)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text(&quot;↑&quot;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;red&quot;)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;15px&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">      // 新增标签标识</span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, 50)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, 29)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text((d) =&gt; &#123;</span><br><span class=\"line\">            // return &quot;📌&quot;;📑🔖🔗🎫✎</span><br><span class=\"line\">            // return d.labelId != null ? &quot;📑&quot; : &quot;&quot;;</span><br><span class=\"line\">            return &quot;📌&quot;;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;fill&quot;,&quot;#2f6db3&quot;)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;12px&quot;);//75px</span><br><span class=\"line\">      //同比值</span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.children || d._children ? -40 : -40;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, 30)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text((d) =&gt; &#123;</span><br><span class=\"line\">            return d.anValue != null ? Math.abs(d.anValue)+&#x27;%&#x27; : &quot;&quot;;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return &quot;black&quot;;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;10px&quot;)</span><br><span class=\"line\">          //-鼠标移入事件</span><br><span class=\"line\">          .on(&quot;mouseover&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">              let xPosition = d3.event.offsetX;</span><br><span class=\"line\">              let yPosition = d3.event.offsetY + 60;</span><br><span class=\"line\">              //添加标签</span><br><span class=\"line\">              this.tooltip.html(d.analysisContent.replace(/\\r/g, &quot;&lt;br&gt;&quot;).replace(/\\r\\n/g, &quot;&lt;br&gt;&quot;))</span><br><span class=\"line\">                  //设置tooltip的位置(left,top 相对于页面的距离)</span><br><span class=\"line\">                  .style(&quot;left&quot;, xPosition + &quot;px&quot;)</span><br><span class=\"line\">                  .style(&quot;top&quot;, yPosition + &quot;px&quot;)</span><br><span class=\"line\">                  .style(&quot;border-radius&quot;, &quot;10px&quot;)</span><br><span class=\"line\">                  .style(&quot;border&quot;, &quot; 1px solid #999&quot;)</span><br><span class=\"line\">                  .style(&quot;padding&quot;, &quot;5px 10px&quot;)</span><br><span class=\"line\">                  .style(&quot;display&quot;, &quot;block&quot;);</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          //--鼠标移出事件</span><br><span class=\"line\">          .on(&quot;mouseout&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            this.tooltip.style(&quot;display&quot;, &quot;none&quot;);</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">//计划值名称</span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.children || d._children ? 10 : 10;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, 15)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text((d) =&gt; &#123;</span><br><span class=\"line\">            return &quot;计划值&quot;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;gray&quot;)</span><br><span class=\"line\">          .style(&quot;fill-opacity&quot;, 1)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;10px&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">      //计划值</span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.children || d._children ? 10 : 10;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, 30)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text((d) =&gt; &#123;</span><br><span class=\"line\">            return d.value;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;blue&quot;)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;12px&quot;);</span><br><span class=\"line\">      //展开趋势图</span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.children || d._children ? 50 : 50;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, 15)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text((d) =&gt; &#123;</span><br><span class=\"line\">            return &quot;...&quot;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;gray&quot;)</span><br><span class=\"line\">          .style(&quot;fill-opacity&quot;, 1)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;28px&quot;)</span><br><span class=\"line\">          .on(&quot;click&quot;, (d, i) =&gt; &#123;</span><br><span class=\"line\">            console.log(&quot;触发点击事件&quot;)</span><br><span class=\"line\">            // this.getChartsData()</span><br><span class=\"line\">            // this.dialogVisible.three = true</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">      // Transition nodes to their new position.将节点过渡到一个新的位置-----主要是针对节点过渡过程中的过渡效果</span><br><span class=\"line\">      //node就是保留的数据集，为原来数据的图形添加过渡动画。首先是整个组的位置</span><br><span class=\"line\">      //子节点全出来了</span><br><span class=\"line\">      var nodeUpdate = node.transition() //开始一个动画过度</span><br><span class=\"line\">          .duration(this.duration) //过渡延迟时间 此处主要设置的是圆圈节点随斜线的过渡延迟</span><br><span class=\"line\">          .attr(&quot;transform&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return &quot;translate(&quot; + d.y + &quot;,&quot; + d.x + &quot;)&quot;;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeUpdate.select(&quot;rect&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, -65)</span><br><span class=\"line\">          .attr(&quot;y&quot;, -35)</span><br><span class=\"line\">          .attr(&quot;width&quot;, width)</span><br><span class=\"line\">          .attr(&quot;height&quot;, height)</span><br><span class=\"line\">          .attr(&quot;rx&quot;, 10)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;#FFF&quot;)</span><br><span class=\"line\">          .style(&quot;stroke&quot;,function(d)&#123;</span><br><span class=\"line\">            if(d.value === 0)&#123;</span><br><span class=\"line\">              return &#x27;#6b6b6b&#x27;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            return &#x27;steelblue&#x27;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;stroke-width&quot;, &quot;1.5px&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeUpdate.select(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .style(&quot;fill-opacity&quot;, 1);</span><br><span class=\"line\"></span><br><span class=\"line\">      // Transition exiting nodes to the parent&#x27;s new position.过渡现有的节点到父母的新位置。</span><br><span class=\"line\">      //最后处理消失的数据，添加消失动画</span><br><span class=\"line\">      var nodeExit = node.exit().transition()</span><br><span class=\"line\">          .duration(this.duration)</span><br><span class=\"line\">          .attr(&quot;transform&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return &quot;translate(&quot; + source.y + &quot;,&quot; + source.x + &quot;)&quot;;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .remove();</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeExit.select(&quot;rect&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, -65)</span><br><span class=\"line\">          .attr(&quot;y&quot;, -35)</span><br><span class=\"line\">          .attr(&quot;width&quot;, width)</span><br><span class=\"line\">          .attr(&quot;height&quot;, height)</span><br><span class=\"line\">          .attr(&quot;rx&quot;, 10)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;#FFF&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeExit.select(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .style(&quot;fill-opacity&quot;, 1e-6);</span><br><span class=\"line\"></span><br><span class=\"line\">      // Update the links…线操作相关</span><br><span class=\"line\">      //再处理连线集合</span><br><span class=\"line\">      let link = this.svgGroup.selectAll(&quot;path.link&quot;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;none&quot;)</span><br><span class=\"line\">          .style(&quot;stroke&quot;, &quot;steelblue&quot;)</span><br><span class=\"line\">          .style(&quot;stroke-width&quot;, &quot;1.5px&quot;)</span><br><span class=\"line\">          .data(links, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.target.id;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      // Enter any new links at the parent&#x27;s previous position.</span><br><span class=\"line\">      //添加新的连线</span><br><span class=\"line\"></span><br><span class=\"line\">      link.enter().insert(&quot;path&quot;, &quot;g&quot;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;none&quot;)</span><br><span class=\"line\">          .style(&quot;stroke&quot;, &quot;steelblue&quot;)</span><br><span class=\"line\">          .style(&quot;stroke-width&quot;, &quot;1.5px&quot;)</span><br><span class=\"line\">          .attr(&quot;class&quot;, &quot;link&quot;)</span><br><span class=\"line\">          .attr(&quot;d&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            var o = &#123;</span><br><span class=\"line\">              x: source.x0,</span><br><span class=\"line\">              y: source.y0</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\">            return this.diagonal(&#123;</span><br><span class=\"line\">              source: o,</span><br><span class=\"line\">              target: o</span><br><span class=\"line\">            &#125;); //diagonal - 生成一个二维贝塞尔连接器, 用于节点连接图.</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .attr(&#x27;marker-end&#x27;, &#x27;url(#arrow)&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">      // Transition links to their new position.将斜线过渡到新的位置</span><br><span class=\"line\">      //保留的连线添加过渡动画</span><br><span class=\"line\">      link.transition()</span><br><span class=\"line\">          .duration(this.duration)</span><br><span class=\"line\">          .attr(&quot;d&quot;, this.diagonal);</span><br><span class=\"line\"></span><br><span class=\"line\">      // Transition exiting nodes to the parent&#x27;s new position.过渡现有的斜线到父母的新位置。</span><br><span class=\"line\">      //消失的连线添加过渡动画</span><br><span class=\"line\">      link.exit().transition()</span><br><span class=\"line\">          .duration(this.duration)</span><br><span class=\"line\">          .attr(&quot;d&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            var o = &#123;</span><br><span class=\"line\">              x: source.x,</span><br><span class=\"line\">              y: source.y</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\">            return this.diagonal(&#123;</span><br><span class=\"line\">              source: o,</span><br><span class=\"line\">              target: o</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .remove();</span><br><span class=\"line\">      // Stash the old positions for transition.将旧的斜线过渡效果隐藏</span><br><span class=\"line\">      this.nodes.forEach((d) =&gt; &#123;</span><br><span class=\"line\">        d.x0 = d.x;</span><br><span class=\"line\">        d.y0 = d.y;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    //收缩节点</span><br><span class=\"line\">    collapse(d)&#123;</span><br><span class=\"line\">      if (d.children)&#123;</span><br><span class=\"line\">        d._children=d.children;</span><br><span class=\"line\">        d.children=null</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    //当点击/删除时，中心节点，这样节点在折叠/移动时不会丢失大量的子节点。</span><br><span class=\"line\">    centerNode(source)&#123;</span><br><span class=\"line\">      //scale()方法用于返回当前的缩放比例值  缩放比例值</span><br><span class=\"line\">      let scale = this.zoomListener.scale();</span><br><span class=\"line\">      let x = -source.y0;</span><br><span class=\"line\">      let y = -source.x0;</span><br><span class=\"line\">      x = x* scale +100;</span><br><span class=\"line\">      y = y* scale +this.viewerHeight /2;</span><br><span class=\"line\">      d3.select(&#x27;g&#x27;).transition()</span><br><span class=\"line\">          .duration(this.duration)</span><br><span class=\"line\">          .attr(&quot;transform&quot;, &quot;translate(&quot; + x + &quot;,&quot; + y + &quot;)scale(&quot; + scale + &quot;)&quot;);</span><br><span class=\"line\">      this.zoomListener.scale(scale);</span><br><span class=\"line\">      this.zoomListener.translate([x, y]);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    //点击事件</span><br><span class=\"line\">    click(d)&#123;</span><br><span class=\"line\">      if (d.children)&#123;</span><br><span class=\"line\">        d._children=d.children;</span><br><span class=\"line\">        d.children = null</span><br><span class=\"line\">      &#125;else&#123;</span><br><span class=\"line\">        d.children = d._children</span><br><span class=\"line\">        if (d.children === [] || d.children == null)&#123;</span><br><span class=\"line\">          return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        d.children.forEach(this.collapse)</span><br><span class=\"line\">        d._children = null;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      let depths = this.treeDepths(this.treeData);</span><br><span class=\"line\">      this.viewerHeight = depths.length * 100;</span><br><span class=\"line\">      if (this.viewerHeight &lt; this.minHeight)</span><br><span class=\"line\">        this.viewerHeight = this.minHeight;</span><br><span class=\"line\">      this.tree = d3.layout.tree()</span><br><span class=\"line\">          .size([this.viewerHeight, this.viewerWidth]);</span><br><span class=\"line\">      this.update(d)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">circle &#123;</span><br><span class=\"line\">  fill: #ccc;</span><br><span class=\"line\">  stroke: #000;</span><br><span class=\"line\">  stroke-width: 1px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">text &#123;</span><br><span class=\"line\">  font-size: 12px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">path.link &#123;</span><br><span class=\"line\">  fill: none;</span><br><span class=\"line\">  stroke: #ccc;</span><br><span class=\"line\">  stroke-width: 1.5px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\r\n",
            "tags": [
                "前端",
                "D3.js"
            ]
        },
        {
            "id": "http://example.com/2024/07/05/post/springboot/03-Mybatis-Plus%20@SqlParser%E6%B3%A8%E8%A7%A3/",
            "url": "http://example.com/2024/07/05/post/springboot/03-Mybatis-Plus%20@SqlParser%E6%B3%A8%E8%A7%A3/",
            "title": "03-Mybatis-Plus @SqlParser注解",
            "date_published": "2024-07-05T08:33:29.699Z",
            "content_html": "<h1 id=\"mybatis-plus-sqlparser注解\">Mybatis-Plus <span class=\"citation\"\r\ndata-cites=\"SqlParser注解\">@SqlParser注解</span></h1>\r\n<p><span class=\"citation\" data-cites=\"SqlParser\">@SqlParser</span>\r\n注解在<a\r\nhref=\"https://so.csdn.net/so/search?q=多租户&amp;spm=1001.2101.3001.7020\">多租户</a>的模式下，用来过滤的注解，在最新的\r\nMybatis Plus 中这个 <span class=\"citation\"\r\ndata-cites=\"SqlParser1\">@SqlParser1</span> 注解已经过时。</p>\r\n<h4 id=\"那什么是多租户模式\">那什么是多租户模式？</h4>\r\n<p>MyBatis\r\n的多租户模式是指在数据库设计和应用程序开发中，针对需要支持多个独立用户群体（如企业客户A、B、C等，每个都有各自的业务数据）的情况，通过一些特定的技术手段来处理。在这种模式下，我们通常会做以下几个步骤：</p>\r\n<ol type=\"1\">\r\n<li><strong>数据库表设计</strong>：为每个租户创建单独的数据表空间或者隔离区，比如添加一个<code>tenant_id</code>字段用于标识租户。</li>\r\n<li><strong>Mapper配置</strong>：在MyBatis的mapper\r\nXML文件中，通过<code>where</code>条件基于<code>tenant_id</code>动态过滤查询结果，只返回对应租户的数据。</li>\r\n<li><strong>事务管理</strong>：在多租户环境下，可能需要为每个租户维护单独的数据库连接或事务，避免数据交叉污染。</li>\r\n<li><strong>服务层封装</strong>：在业务层，使用工厂模式或者策略模式，为每个租户创建对应的Service实例，调用对应的Mapper。</li>\r\n<li><strong>安全访问控制</strong>：除了数据库层面，还需要在应用层对租户进行权限验证和访问控制。</li>\r\n</ol>\r\n<h4 id=\"替代注解\">替代注解</h4>\r\n<p>当我们的需要过滤多租户，我们就需要用 <span class=\"citation\"\r\ndata-cites=\"InterceptorIgnore\">@InterceptorIgnore</span>(tenantLine =\r\n“1”) 注解来代替。</p>\r\n<p>拦截忽略注解 <span class=\"citation\"\r\ndata-cites=\"InterceptorIgnore\">@InterceptorIgnore</span></p>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 24%\" />\r\n<col style=\"width: 9%\" />\r\n<col style=\"width: 9%\" />\r\n<col style=\"width: 56%\" />\r\n</colgroup>\r\n<thead>\r\n<tr>\r\n<th style=\"text-align: center;\">属性名</th>\r\n<th style=\"text-align: center;\">类型</th>\r\n<th style=\"text-align: center;\">默认值</th>\r\n<th style=\"text-align: center;\">描述</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: center;\">tenantLine</td>\r\n<td style=\"text-align: center;\">String</td>\r\n<td style=\"text-align: center;\">\"\"</td>\r\n<td style=\"text-align: center;\">行级租户</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">dynamicTableName</td>\r\n<td style=\"text-align: center;\">String</td>\r\n<td style=\"text-align: center;\">\"\"</td>\r\n<td style=\"text-align: center;\">动态表名</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">blockAttack</td>\r\n<td style=\"text-align: center;\">String</td>\r\n<td style=\"text-align: center;\">\"\"</td>\r\n<td\r\nstyle=\"text-align: center;\">攻击SQL阻断解析器，防止全表更新与删除</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">iillegeSql</td>\r\n<td style=\"text-align: center;\">String</td>\r\n<td style=\"text-align: center;\">\"\"</td>\r\n<td style=\"text-align: center;\">垃圾SQL拦截</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>该注解作用于 xxMapper.java 方法之上 各属性代表对应的插件\r\n各属性不给值则默认为 false 设置为 true 忽略拦截 更多说明详见源码注释</p>\r\n<p><span class=\"citation\"\r\ndata-cites=\"SqlParser\">@SqlParser</span>(filter = true) 与 <span\r\nclass=\"citation\"\r\ndata-cites=\"InterceptorIgnore\">@InterceptorIgnore</span>(tenantLine =\r\n“1”) 等价</p>\r\n",
            "tags": [
                "后端",
                "Mybatis-Plus"
            ]
        },
        {
            "id": "http://example.com/2024/07/05/post/springboot/02-String%E3%80%81Date%E3%80%81LocalDate%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/",
            "url": "http://example.com/2024/07/05/post/springboot/02-String%E3%80%81Date%E3%80%81LocalDate%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/",
            "title": "02-String、Date、LocalDate之间的转换",
            "date_published": "2024-07-05T07:17:27.134Z",
            "content_html": "<h1\r\nid=\"stringdatelocaldate之间的转换\">String、Date、LocalDate之间的转换</h1>\r\n<h3 id=\"一date和string\">一、Date和String</h3>\r\n<blockquote>\r\n<p>使用SimpleDateFormat对象指定目标日期格式</p>\r\n</blockquote>\r\n<h4 id=\"date转string\">1、Date转String</h4>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//主要根据&quot;yyyy-MM-dd HH:mm:ss&quot;进行格式的变换</span></span><br><span class=\"line\"><span class=\"type\">Date</span> <span class=\"variable\">date</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">\t<span class=\"type\">SimpleDateFormat</span> <span class=\"variable\">formatter</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class=\"line\">\tSystem.out.println(formatter.format(date));</span><br></pre></td></tr></table></figure>\r\n<h4 id=\"string转date\">2、String转Date</h4>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">date</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;2023-05-31 22:41:21&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">SimpleDateFormat</span> <span class=\"variable\">formatter</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class=\"line\">    System.out.println(formatter.parse(date));</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"二date和localdate\">二、Date和LocalDate</h3>\r\n<blockquote>\r\n<p>转变为中间对象Instant，都需要用到ZoneId时区</p>\r\n</blockquote>\r\n<h4 id=\"date转localdate\">1、Date转LocalDate</h4>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;====LocalDate====&quot;</span></span><br><span class=\"line\"><span class=\"type\">Date</span> <span class=\"variable\">date</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\"><span class=\"type\">LocalDate</span> <span class=\"variable\">localDate</span> <span class=\"operator\">=</span> date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();</span><br><span class=\"line\">System.out.println(localDate);</span><br><span class=\"line\"><span class=\"string\">&quot;====LocalDateTime====&quot;</span></span><br><span class=\"line\"><span class=\"type\">LocalDateTime</span> <span class=\"variable\">localDateTime</span> <span class=\"operator\">=</span> date.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();</span><br><span class=\"line\">System.out.println(localDateTime);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<h4 id=\"localdate转date\">2、LocalDate转Date</h4>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">ZoneId</span> <span class=\"variable\">zone</span> <span class=\"operator\">=</span> ZoneId.systemDefault();</span><br><span class=\"line\"><span class=\"string\">&quot;====LocalDate====&quot;</span></span><br><span class=\"line\">    <span class=\"type\">LocalDate</span> <span class=\"variable\">localDate</span> <span class=\"operator\">=</span> LocalDate.of(<span class=\"number\">2023</span>, <span class=\"number\">5</span>, <span class=\"number\">31</span>);</span><br><span class=\"line\">    <span class=\"type\">Instant</span> <span class=\"variable\">instant</span> <span class=\"operator\">=</span> localDate.atStartOfDay().atZone(zone).toInstant();</span><br><span class=\"line\">    System.out.println(Date.from(instant));</span><br><span class=\"line\"></span><br><span class=\"line\"> \t<span class=\"type\">LocalDate</span> <span class=\"variable\">date2</span> <span class=\"operator\">=</span> LocalDate.parse(<span class=\"string\">&quot;2023-05-13&quot;</span>, DateTimeFormatter.ISO_LOCAL_DATE);</span><br><span class=\"line\">    <span class=\"type\">Instant</span> <span class=\"variable\">instant2</span> <span class=\"operator\">=</span> date2.atStartOfDay().atZone(zone).toInstant();</span><br><span class=\"line\">    System.out.println(Date.from(instant2));</span><br><span class=\"line\"><span class=\"string\">&quot;====LocalDateTime====&quot;</span></span><br><span class=\"line\">    <span class=\"type\">LocalDateTime</span> <span class=\"variable\">localDateTime2</span> <span class=\"operator\">=</span> LocalDateTime.of(<span class=\"number\">2023</span>, <span class=\"number\">5</span>, <span class=\"number\">31</span>, <span class=\"number\">23</span>, <span class=\"number\">13</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"type\">Instant</span> <span class=\"variable\">instant3</span> <span class=\"operator\">=</span> localDateTime2.atZone(zone).toInstant();</span><br><span class=\"line\">    System.out.println(Date.from(instant3));</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"三localdate和string\">三、LocalDate和String</h3>\r\n<blockquote>\r\n<p>使用DateTimeFormatter指定目标日期格式</p>\r\n</blockquote>\r\n<h4 id=\"localdate转string\">1、LocalDate转String</h4>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;====LocalDate====&quot;</span></span><br><span class=\"line\">\t<span class=\"type\">DateTimeFormatter</span> <span class=\"variable\">df</span> <span class=\"operator\">=</span> DateTimeFormatter.ofPattern(<span class=\"string\">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class=\"line\">\t<span class=\"type\">LocalDate</span> <span class=\"variable\">localDate</span> <span class=\"operator\">=</span> LocalDate.of(<span class=\"string\">&quot;2020-2-5&quot;</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//LocalDate localDate = LocalDate.of(2020, 2, 5);</span></span><br><span class=\"line\">    System.out.println(localDate.format(df));</span><br><span class=\"line\"><span class=\"string\">&quot;====LocalDateTime====&quot;</span></span><br><span class=\"line\">    <span class=\"type\">DateTimeFormatter</span> <span class=\"variable\">df3</span> <span class=\"operator\">=</span> DateTimeFormatter.ofPattern(YYYY_MM_DD_HH_MM_SS_12);</span><br><span class=\"line\">\t<span class=\"comment\">//DateTimeFormatter df3 = DateTimeFormatter.ofPattern(&quot;yyyy-MM-dd HH:mm:ss&quot;);</span></span><br><span class=\"line\">    <span class=\"type\">LocalDateTime</span> <span class=\"variable\">localDateTime</span> <span class=\"operator\">=</span> LocalDateTime.of(<span class=\"number\">2020</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">14</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\">    System.out.println(df3.format(localDateTime));</span><br></pre></td></tr></table></figure>\r\n<h4 id=\"string转localdate\">2、String转LocalDate</h4>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;====LocalDate====&quot;</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">dateStr</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;2023-05-31&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">DateTimeFormatter</span> <span class=\"variable\">df</span> <span class=\"operator\">=</span> DateTimeFormatter.ofPattern(<span class=\"string\">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class=\"line\">    System.out.println(LocalDate.parse(dateStr, df));</span><br><span class=\"line\"><span class=\"string\">&quot;====LocalDateTime====&quot;</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">timeStr</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;2023-05-31 16:41:21&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">DateTimeFormatter</span> <span class=\"variable\">df3</span> <span class=\"operator\">=</span> DateTimeFormatter.ofPattern(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class=\"line\">    System.out.println(LocalDateTime.parse(timeStr, df3));</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"四localdate日期判断\">四、LocalDate日期判断</h3>\r\n<p>例子：</p>\r\n<h4 id=\"判断月份与时间\">1、判断月份与时间</h4>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">DateTimeFormatter</span> <span class=\"variable\">df</span> <span class=\"operator\">=</span> DateTimeFormatter.ofPattern(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">LocalDateTime</span> <span class=\"variable\">time</span> <span class=\"operator\">=</span> LocalDateTime.parse(TimeStr,df);</span><br><span class=\"line\"><span class=\"comment\">//判断是这个月的最后一天且 时间没有过中午十二点</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(time.getDayOfMonth()==time.getMonth().maxLength() &amp;&amp; sj.getHour()&lt;<span class=\"number\">12</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">//判断日期小于24号，如果为24号，也小于下午四点</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(time.getDayOfMonth()&lt;<span class=\"number\">24</span> || (time.getDayOfMonth()==<span class=\"number\">24</span> &amp;&amp; time.getHour()&lt;<span class=\"number\">16</span>)</span><br></pre></td></tr></table></figure>\r\n<h4 id=\"设置时间\">2、设置时间</h4>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//比time 多一个月，设1日  00:00:00</span></span><br><span class=\"line\"><span class=\"type\">LocalDateTime</span> <span class=\"variable\">transDate</span> <span class=\"operator\">=</span> time.plusMonths(<span class=\"number\">1</span>).withDayOfMonth(<span class=\"number\">1</span>).withHour(<span class=\"number\">0</span>).withMinute(<span class=\"number\">0</span>).withSecond(<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\r\n",
            "tags": [
                "后端",
                "Java",
                "数据类型"
            ]
        },
        {
            "id": "http://example.com/2024/07/04/post/hexo/01-Hexo%E4%B8%AD%E6%94%AF%E6%8C%81Latex%E5%85%AC%E5%BC%8F/",
            "url": "http://example.com/2024/07/04/post/hexo/01-Hexo%E4%B8%AD%E6%94%AF%E6%8C%81Latex%E5%85%AC%E5%BC%8F/",
            "title": "Hexo中支持Latex公式",
            "date_published": "2024-07-04T00:40:36.865Z",
            "content_html": "<h1 id=\"hexo中支持latex公式\">Hexo中支持Latex公式</h1>\r\n<h2 id=\"关于hexo和主题\">关于Hexo和主题</h2>\r\n<p>这个问题实际<strong>与主题无关</strong>。</p>\r\n<p>我用的是hexo和shoka截止目前的最新版本：</p>\r\n<p>hexo：6.3.0</p>\r\n<p>shoka：0.2.5</p>\r\n<h3 id=\"让hexo支持数学公式\">让Hexo支持数学公式</h3>\r\n<p>其实要做的步骤很少：</p>\r\n<p>1.首先卸载hexo-math和hexo-renderer-marked。然而hexo应该是没有自带hexo-math的，所以只需要卸载第二个就行。以防万一还是可以直接执行：</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm un hexo-math</span><br><span class=\"line\">npm un hexo-renderer-marked</span><br></pre></td></tr></table></figure>\r\n<p>​ 2.安装hexo-renderer-pandoc渲染器</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i hexo-renderer-pandoc</span><br></pre></td></tr></table></figure>\r\n<p>​ 好，到此为止，需要的包就迭代好了。</p>\r\n<p>3.然后是配置主题配置下的mathjax设置。我用的是butterfly，那么对应路径是： _config.yml</p>\r\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># MathJax</span></span><br><span class=\"line\"><span class=\"attr\">mathjax:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">per_page:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\r\n<h3 id=\"pandoc报错\">Pandoc报错</h3>\r\n<p>理论上到这一步就可以用了对吧，一般的教程也都这样。就算再外加一步，我学习的那篇文章里提到，接下来还应该去Pandoc官网下载最新版本pandoc：<a\r\nhref=\"https://pandoc.org/index.html\">Pandoc - About pandoc</a></p>\r\n<p>关于pandoc下载安装教程随便查一下就有，这里就不说明了。然后再在环境配置配置了pandoc路径，直到你可以在cmd输入以下命令查看它的版本：</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pandoc -v</span><br></pre></td></tr></table></figure>\r\n<p>我的输出：</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pandoc 2.19.2</span><br><span class=\"line\">Compiled with pandoc-types 1.22.2.1, texmath 0.12.5.2, skylighting 0.13,</span><br><span class=\"line\">citeproc 0.8.0.1, ipynb 0.2, hslua 2.2.1</span><br><span class=\"line\">Scripting engine: Lua 5.4</span><br></pre></td></tr></table></figure>\r\n<p>​ 有的朋友可能到这一步就发现不对了，不要慌，接下来才是重点。</p>\r\n<h3 id=\"注意都有可能出现的错误\">注意：都有可能出现的错误</h3>\r\n<p>先回到hexo目录，执行hexo -s,如果你没有出现这个报错：</p>\r\n<p><span class=\"red\"><strong>pandoc exited with code 9: pandoc: Unknown\r\nextension: smart</strong></span></p>\r\n<p>找到了这篇文章：<a\r\nhref=\"https://www.cnblogs.com/diralpo/p/12542450.html\">配置hexo时遇到的问题\r\n- diralpo - 博客园 (cnblogs.com)</a></p>\r\n<p>从这篇文章得知，导致该报错的原因是pandoc版本过低\r\n，而且还不是一般原因引起的版本过低，因为前面我们已经安装了最新版本的pandoc。但是最新版本的没起作用。于是我打开了everything查找电脑上存在的pandoc。然后发现位于Anaconda，真正问题也出在这儿。</p>\r\n<p>是因为Anaconda安装的pandoc版本过低，而且hexo默认使用的是Anaconda的pandoc。</p>\r\n<p>不信的话你去找找，那个pandoc居然是2017年的。在某一篇文章得知，pandoc版本应该在2.0以上，但那个pandoc好像是1.9。那接下来的就简单了，直接把新下载的pandoc.exe替换Anaconda里的pandoc.exe。</p>\r\n<p>可以用everything工具查询pandoc.exe将新安装好替换掉Anaconda里的pandoc.exe。</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\006V2BDqly8hrbpura5igj30kb03jwf8.jpg\"\r\nalt=\"image-20240704084915745\" />\r\n<figcaption aria-hidden=\"true\">image-20240704084915745</figcaption>\r\n</figure>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\006V2BDqly8hrbptog7pfj30ma0bmjtp.jpg\"\r\nalt=\"alt\" />\r\n<figcaption aria-hidden=\"true\">alt</figcaption>\r\n</figure>\r\n<p>然后你在回去hexo -s，就没问题了。</p>\r\n<h3 id=\"换行问题\">换行问题</h3>\r\n<p>​\r\n其实做到上一步，换行问题也已经随之解决了。不过这里还是提一下关于这个换行。</p>\r\n<p>首先，想直接通过 ，end这种写法是做不到换行的，我最开始就是纠结于这个，然而这写法本来也不规范，例如：A\r\n  B\r\n是不能达到换行的。但是在加上规范的begin和end就可以了。其次，换行公式应该写成行间公式而非行内公式。</p>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$A \\\\ B$  错误写法</span><br><span class=\"line\">\\begin&#123;split&#125; A\\\\B \\end&#123;split&#125; 写在行内错误，写在行间正确。</span><br></pre></td></tr></table></figure>\r\n",
            "tags": [
                "博客",
                "hexo",
                "Latex"
            ]
        },
        {
            "id": "http://example.com/2024/07/03/post/biao/cryptology/Exercise%202/",
            "url": "http://example.com/2024/07/03/post/biao/cryptology/Exercise%202/",
            "title": "Exercise 2",
            "date_published": "2024-07-03T09:34:49.804Z",
            "content_html": "<h1 id=\"exercise-2\">Exercise 2</h1>\r\n<h4 id=\"section\">2.1</h4>\r\n<p> Let <span class=\"math inline\">\\(f(x)=(x-a_1)(x-a_2)(x-a_3)\\)</span>\r\nbe a monic cubic polynomial with roots <span class=\"math inline\">\\(a_1,\r\na_2, a_3\\)</span>, then the constant term of <span\r\nclass=\"math inline\">\\(f\\)</span> is <span\r\nclass=\"math inline\">\\(-a_1a_2a_3\\)</span>.</p>\r\n<p> Let <span class=\"math inline\">\\(E\\)</span> be an elliptic curve\r\ndefined by <span class=\"math inline\">\\(y^2=x^3+Ax+B\\)</span>. Let <span\r\nclass=\"math inline\">\\(P_1=(x_1,y_1)\\)</span> and <span\r\nclass=\"math inline\">\\(P_2=(x_2,y_2)\\)</span> be points on <span\r\nclass=\"math inline\">\\(E\\)</span> with <span\r\nclass=\"math inline\">\\(P_1,P_2\\neq \\infty\\)</span> and define <span\r\nclass=\"math inline\">\\(P_1+P_2=P_3=(x_3,y_3)\\)</span>. Define a\r\npolynomial <span class=\"math inline\">\\(F(x,y)=x^3+Ax+B-y^2=0\\)</span>\r\nbased on the equation of <span class=\"math inline\">\\(E\\)</span>. Let the\r\nline through <span class=\"math inline\">\\(P_1\\)</span> and <span\r\nclass=\"math inline\">\\(P_2\\)</span> is <span\r\nclass=\"math inline\">\\(y=l(x)=m(x-x_1)+y_1\\)</span>, where <span\r\nclass=\"math inline\">\\(m=(y_2-y_1)/(x_2-x_1)\\)</span>. Then we have <span\r\nclass=\"math display\">\\[\r\nF(x,y)=F\\left(x,l(x)\\right)=x^3+Ax+B-(mx+y_1-mx_1)^2=(x-x_1)(x-x_2)(x-x_3).\r\n\\]</span> Thus, <span\r\nclass=\"math display\">\\[x_3=\\frac{(x_1y_2-x_2y_1)^2-B(x_1-x_2)^2}{x_1x_2(x_1-x_2)^2},\\quad\r\ny_3=m(x_1-x_3)-y_1.\\]</span></p>\r\n<p>​</p>\r\n<p> Direct calculations can prove that <span\r\nclass=\"math inline\">\\(x_3=m^2-x_1-x_2\\)</span>.</p>\r\n<h4 id=\"section-1\">2.2</h4>\r\n<p>Let <span class=\"math inline\">\\(P_1=(3,5)\\)</span>, then <span\r\nclass=\"math inline\">\\(2P_1=\\left(129/100,-383/1000\\right)\\)</span>.</p>\r\n<h4 id=\"section-2\">2.3</h4>\r\n<p> <span class=\"math inline\">\\(P+Q=(-4,-3) \\text{ and }\r\n(P+Q)+R=(72,611).\\)</span></p>\r\n<p> <span class=\"math inline\">\\(Q+R=(218/49, -4353/343) \\text{ and }\r\nP+(Q+R)=(72,611).\\)</span> We have <span\r\nclass=\"math inline\">\\((P+Q)+R=P+(Q+R).\\)</span></p>\r\n<h4 id=\"section-3\">2.4</h4>\r\n<p> <span class=\"math inline\">\\(P+Q=(-6,5).\\)</span></p>\r\n<p> We can calculate that <span\r\nclass=\"math inline\">\\(2P=(929/16,28175/64),\\)</span> then <span\r\nclass=\"math inline\">\\(2P\\)</span> on <span\r\nclass=\"math inline\">\\(E\\)</span> mod 5 is <span\r\nclass=\"math inline\">\\((4,0).\\)</span> Similarly, we have <span\r\nclass=\"math inline\">\\(P+Q=(-6,5),\\)</span> then <span\r\nclass=\"math inline\">\\(P+Q\\)</span> on <span\r\nclass=\"math inline\">\\(E\\)</span> mod 5 is also <span\r\nclass=\"math inline\">\\((4,0).\\)</span></p>\r\n<h4 id=\"section-4\">2.5</h4>\r\n<p>The point <span class=\"math inline\">\\((x,0)\\)</span> is nonsingular\r\nif and only if <span class=\"math inline\">\\(\\partial f/\\partial\r\nx=3x^2+A\\neq 0.\\)</span></p>\r\n<h4 id=\"section-5\">2.6</h4>\r\n<p><span class=\"math inline\">\\(P+Q+R=\\infty \\Longleftrightarrow P+Q=-R\r\n\\Longleftrightarrow P, Q, R\\)</span> are collinear.</p>\r\n<h4 id=\"section-6\">2.7</h4>\r\n<p>The point <span class=\"math inline\">\\((0,c)\\)</span> is the identity\r\nfor the group law on <span class=\"math inline\">\\(C\\)</span>, the\r\naddition law is <span class=\"math display\">\\[\r\n(u_1,v_1)+(u_2,v_2)=\\left(\\frac{u_1v_2+u_2v_1}{c(1+du_1u_2v_1v_2)},\\frac{v_1v_2-u_1u_2}{c(1-du_1u_2v_1v_2)}\\right).\r\n\\]</span> Since <span class=\"math inline\">\\((c,0)+(c,0)=(0,-c)\\)</span>\r\nand <span class=\"math inline\">\\((0,-c)+(0,-c)=(0,c)\\)</span>, 4 is the\r\nsmallest positive integer such that <span\r\nclass=\"math inline\">\\(n(c,0)=\\infty\\)</span>, thus the point <span\r\nclass=\"math inline\">\\((c,0)\\)</span> has order 4.</p>\r\n<h4 id=\"section-7\">2.8</h4>\r\nLet <span\r\nclass=\"math inline\">\\(k=k_0+2k_1+4k_2+\\cdots+2^{n}a_{n}\\)</span> with\r\n<span class=\"math inline\">\\(k_i\\in\\{0,1\\}(i=0,1,\\cdots,n).\\)</span>\\\r\nWhen <span class=\"math inline\">\\(n=0\\)</span>,that is <span\r\nclass=\"math inline\">\\(k=k_0\\)</span>, it is obvious. Suppose the\r\nconclusion holds for <span class=\"math inline\">\\(n={\\ell-1}\\)</span>,\r\nlet's show that the conclusion is also true for <span\r\nclass=\"math inline\">\\(n=\\ell\\)</span>.\r\n<p>We are done.</p>\r\n<h4 id=\"section-8\">2.9</h4>\r\n<p><span class=\"math inline\">\\(E\\)</span> is an elliptic curve defined\r\nby <span\r\nclass=\"math inline\">\\(y^2+a_1xy+a_3y=x^3+a_2x^2+a_4x+a_6\\)</span>, the\r\nvertical line through <span class=\"math inline\">\\(P=(x_0,y_0)\\)</span>\r\nis <span class=\"math inline\">\\(x=x_0\\)</span>. The line and curve\r\nintersect at <span class=\"math inline\">\\(P=(x_0,y_0)\\)</span> and <span\r\nclass=\"math inline\">\\(-P=(x_0,y_1)\\)</span>, substituting <span\r\nclass=\"math inline\">\\(x=x_0\\)</span> into the equation of elliptic\r\ncurve. We have <span class=\"math inline\">\\(y_0+y_1=-a_1x_0-a_3\\)</span>,\r\nthus <span class=\"math inline\">\\(-P=(x_0,-a_1x_0-a_3-y_0)\\)</span>.</p>\r\n<h4 id=\"section-9\">2.10</h4>\r\n<p>It is obvious that <span class=\"math inline\">\\((x,y,z), (-x,-y,-z)\\in\r\n\\mathbf{R}^3\\)</span> map into <span class=\"math inline\">\\((x:y:z)\\in\r\n\\mathbf{P^2_R}\\)</span>.</p>\r\n<h4 id=\"section-10\">2.11</h4>\r\n<p> If the line <span class=\"math inline\">\\(a_1x+b_1y+c_1z=0\\)</span> is\r\nparallel with the line <span\r\nclass=\"math inline\">\\(a_2x+b_2y+c_2z=0\\)</span>, then they intersect at\r\npoint <span class=\"math inline\">\\((b_1:-a_1:0)=(b_2:-a_2:0)\\)</span>.\r\nOtherwise, they intersect at point <span\r\nclass=\"math inline\">\\((b_2c_1-b_1c_2:a_1c_2-a_2c_1:a_2b_1-a_1b_2)\\)</span>.</p>\r\n<p> Let <span class=\"math inline\">\\(P_1, P_2\\)</span> be two distinct\r\npoints on <span class=\"math inline\">\\(P(K)\\)</span> and <span\r\nclass=\"math inline\">\\(u,v\\)</span> be representative vectors. Then <span\r\nclass=\"math inline\">\\(u,v\\)</span> are linearly independent for\r\notherwise <span class=\"math inline\">\\(u=\\lambda v\\)</span> and <span\r\nclass=\"math inline\">\\(P_1=P_2\\)</span>.\\ Let <span\r\nclass=\"math inline\">\\(U\\in K\\)</span> be the 2-dimensional vector space\r\nspanned by <span class=\"math inline\">\\(u\\)</span> and <span\r\nclass=\"math inline\">\\(v\\)</span>, then <span\r\nclass=\"math inline\">\\(P(U)\\in P(K)\\)</span> is a line containing <span\r\nclass=\"math inline\">\\(P_1\\)</span> and <span\r\nclass=\"math inline\">\\(P_2\\)</span>.\\ Suppose <span\r\nclass=\"math inline\">\\(P(U^{\\prime})\\)</span> is another such line\r\ncontaining <span class=\"math inline\">\\(P_1\\)</span> and <span\r\nclass=\"math inline\">\\(P_2\\)</span>, then <span\r\nclass=\"math inline\">\\(u,v\\in U^{\\prime}\\)</span> and so the space\r\nspanned by <span class=\"math inline\">\\(u,v\\)</span> (namely <span\r\nclass=\"math inline\">\\(U\\)</span>) is the subspace of <span\r\nclass=\"math inline\">\\(U^{\\prime}\\)</span>. But <span\r\nclass=\"math inline\">\\(U\\)</span> and <span\r\nclass=\"math inline\">\\(U^{\\prime}\\)</span> are 2-dimensional so <span\r\nclass=\"math inline\">\\(U=U^{\\prime}\\)</span> and the line is thus\r\nunique.</p>\r\n<h4 id=\"section-11\">2.12</h4>\r\n<p>Since <span class=\"math inline\">\\((a,b,c)M=(a,b,c)\r\n\\left(\r\n\\begin{array}{c c}\r\n    a_1  &amp; b_1\\\\\r\n    a_2  &amp; b_2\\\\\r\n    a_3  &amp; b_3\r\n\\end{array}\r\n\\right)=\\left(aa_1+ba_2+ca_3,ab_1+bb_2+cb_3\\right)=(0,0)\\)</span>, then\r\n<span\r\nclass=\"math inline\">\\(ax+by+cz=a(a_1u+b_1v)+b(a_2u+b_2v)+c(a_3u+b_3v)=(aa_1+ba_2+ca_3)u+(ab_1+bb_2+cb_3)v=0\\)</span>.</p>\r\n<h4 id=\"section-12\">2.13</h4>\r\n<p> Legendre equation is <span\r\nclass=\"math inline\">\\(y^2=x(x-1)(x-\\lambda)=y^2=x^3-(\\lambda+1)x^2+\\lambda\r\nx\\)</span>, where <span class=\"math display\">\\[\r\n\\begin{aligned}\r\n    b_2&amp;=a^2_1+4a_2=-4(\\lambda+1),\\\\\r\n    b_4&amp;=2a_4+a_1a_3=2\\lambda,\\\\\r\n    b_6&amp;=a^2_3+4a_6=0,\\\\\r\n    b_8&amp;=a^2_1a_6+4a_2a_6-a_1a_3a_4+a_2a^2_3-a^2_4=-\\lambda^2,\\\\\r\n    c_4&amp;=b^2_2-24b_4=16(\\lambda+1)^2-48\\lambda=2^4(\\lambda^2-\\lambda+1),\\\\\r\n    \\Delta&amp;=-b^2_2b_8-8b^3_4-27b^2_6+9b_2b_4b_6=2^4\\lambda^2(\\lambda+1)^2-2^6\\lambda^3=2^4\\lambda^2(\\lambda-1)^2.\r\n\\end{aligned}\r\n\\]</span> Thus, the <span class=\"math inline\">\\(j\\)</span>-invariant is\r\n<span class=\"math display\">\\[\r\nj=\\frac{c^3_4}{\\Delta}=2^8\\frac{(\\lambda^2-\\lambda+1)^3}{\\lambda^2(\\lambda-1)^2}.\r\n\\]</span></p>\r\n<p> Directly calculate.</p>\r\n<p> Calculated directly from (a).</p>\r\n<h4 id=\"section-13\">2.14</h4>\r\n<p> Let <span class=\"math inline\">\\(u=1+t, v=mt\\)</span> for some <span\r\nclass=\"math inline\">\\(m\\)</span>, then <span\r\nclass=\"math inline\">\\(u^2-v^2=(1+t)^2-(mt)^2=(1-m^2)t^2+2t=0\\)</span>.\r\nDiscarding the solution <span class=\"math inline\">\\(t=0\\)</span>, we\r\nobtain <span class=\"math inline\">\\(t=2/(m^2-1)\\)</span>, hence <span\r\nclass=\"math display\">\\[\r\nu=1+t=\\frac{m^2+1}{m^2-1},\\quad v=mt=\\frac{2m}{m^2-1}.\r\n\\]</span></p>\r\n<p> Let <span class=\"math inline\">\\(w=0\\)</span>, then <span\r\nclass=\"math inline\">\\(u^2-v^2=w^2=0\\)</span>, hence <span\r\nclass=\"math inline\">\\(u=\\pm v\\)</span>. Thus, the projective curve has\r\ntwo point at infinity, <span class=\"math inline\">\\((1:1:0)\\)</span> and\r\n<span class=\"math inline\">\\((1:-1:0)\\)</span>.</p>\r\n<p> Since the parameterization obtained in (a) can be written in\r\nprojective coordinates as <span\r\nclass=\"math inline\">\\((u:v:w)=(m^2+1:2m:m^2-1)\\)</span>, then the values\r\n<span class=\"math inline\">\\(m=\\pm 1\\)</span> correspond to points <span\r\nclass=\"math inline\">\\((1:\\pm 1:0)\\)</span>, that is, correspond to the\r\npoints at infinity. In the graph, we can find that <span\r\nclass=\"math inline\">\\(u=\\pm v\\)</span> is asymptote to hyperbola <span\r\nclass=\"math inline\">\\(u^2-v^2=1\\)</span>, they intersect at\r\ninfinity.</p>\r\n<h4 id=\"section-14\">2.15</h4>\r\n<p> Let <span class=\"math inline\">\\(L\\)</span> be the line through <span\r\nclass=\"math inline\">\\((u_0,0,0)\\)</span> with slope <span\r\nclass=\"math inline\">\\(m\\)</span>: <span class=\"math display\">\\[\r\nu=u_0+t,\\qquad v=mt.\r\n\\]</span> This yields <span\r\nclass=\"math inline\">\\(a(u_0+t)^2+bm^2t^2=e\\)</span>, which yields <span\r\nclass=\"math inline\">\\((a+bm^2)t^2+2au_0t=0\\)</span>. Discarding the\r\nsolution <span class=\"math inline\">\\(t=0\\)</span>, we obtain <span\r\nclass=\"math inline\">\\(t=-2au_0/(a+bm^2)\\)</span>. Substitute the\r\nexpression just obtained for <span class=\"math inline\">\\(u\\)</span> to\r\nobtain <span class=\"math display\">\\[\r\ndw^2=f-(\\frac{bu_0m^2-au_0}{a+bm^2})^2.\r\n\\]</span> This may be rewritten as <span class=\"math display\">\\[\r\n\\begin{aligned}\r\n    (a+bm^2)^2w^2&amp;=\\frac{(a+bm^2)^2}{d}f-\\frac{c(au_0-bu_0m^2)^2}{d}\\\\\r\n    &amp;=(\\frac{b^2f}{d}-\\frac{b^2u_0^2c}{d})m^4+\\cdots\r\n\\end{aligned}\r\n\\]</span> Let <span class=\"math inline\">\\(r=(a+bm^2)w\\)</span>, then we\r\nobtain <span class=\"math inline\">\\(r^2=2ab(f+u_0^2c)/d\r\nm^2+k_2m+k_3\\)</span> for some <span\r\nclass=\"math inline\">\\(k_2,k_3\\)</span>, which has the form\r\n\"square=degree2 polynomial in <span\r\nclass=\"math inline\">\\(m\\)</span>\".</p>\r\n<p> The Jacobian matrix <span class=\"math inline\">\\(\\left(\r\n\\begin{array}{c c c}\r\n    F_u &amp; F_v &amp; F_w\\\\\r\n    G_u &amp; G_v &amp; G_w\r\n\\end{array}\r\n\\right)_{(u_0,0,0)}=\r\n\\left(\r\n\\begin{array}{c c c}\r\n    2au_0 &amp; 0 &amp; 0\\\\\r\n    2cu_0 &amp; 0 &amp; 0\r\n\\end{array}\r\n\\right)\\)</span>, hence the Jacobian matrix at <span\r\nclass=\"math inline\">\\((u_0,0,0)\\)</span> has rank 1. Since the rank is\r\nless than 2, this means that the point is a singular point.</p>\r\n<h4 id=\"section-15\">2.16</h4>\r\n<p>Let <span class=\"math display\">\\[\r\nx_1=\\frac{12d}{x+y}\\qquad\\text{and}\\qquad y_1=36d\\frac{x-y}{x+y}.\r\n\\]</span></p>\r\n<h4 id=\"section-16\">2.17</h4>\r\n<p> <span\r\nclass=\"math inline\">\\(\\alpha(P_1+P_2)=-(P_1+P_2)=(-P_1)+(-P_2)=\\alpha(P_1)+\\alpha(P_2).\\)</span></p>\r\n<p> The map is clearly bijective and homomorphic by direct calculation.\\\r\nWe can also show that the map is a isogeny, then it is homorphic.</p>\r\n<p> It is similar as (b).</p>\r\n<h4 id=\"section-17\">2.18</h4>\r\n<p> If <span class=\"math inline\">\\(a_2=a_4=0\\)</span>, then the equation\r\nof elliptic curve is <span\r\nclass=\"math inline\">\\(f=y^2-x^3-a_6=0\\)</span>. We obtain <span\r\nclass=\"math inline\">\\(\\partial f/\\partial y=2y, \\partial f/\\partial\r\nx=-3x^2\\)</span> and <span class=\"math inline\">\\(\\partial f/\\partial y,\r\n\\partial f/\\partial x\\)</span> vanish at <span\r\nclass=\"math inline\">\\(P\\in E[2]\\)</span>, which is not allowed.</p>\r\n<p> The change of variables <span\r\nclass=\"math inline\">\\(x=x_1+(a_4/a_2)\\)</span> yields the equation <span\r\nclass=\"math display\">\\[y_1^2=\\left(x_1+\\frac{a_4}{a_2}\\right)^3+a_2\\left(x_1+\\frac{a_4}{a_2}\\right)^2+a_4\\left(x_1+\\frac{a_4}{a_2}\\right)+a_6.\\]</span>\r\nThe coefficient of <span class=\"math inline\">\\(x\\)</span> is <span\r\nclass=\"math inline\">\\(3a^2_4/a^2_2+3a_4=0\\)</span>, hence the equation\r\nhas the form <span\r\nclass=\"math inline\">\\(y^2_1=x^3_1+a_2^{\\prime}x^2_1+a_6^{\\prime}\\)</span>.</p>\r\n<p> The <span class=\"math inline\">\\(j\\)</span>-invariant of elliptic\r\ncurve <span class=\"math inline\">\\(y^2=x^3+a_2x^2+a_6\\)</span> is <span\r\nclass=\"math display\">\\[\r\nj=-\\frac{a^3_2}{a_6}.\r\n\\]</span> If <span\r\nclass=\"math inline\">\\(-a^3_2/a_6=-(a^{\\prime}_2)^3/a^{\\prime}_6\\)</span>,\r\nthen <span\r\nclass=\"math inline\">\\((a^{\\prime}_2)^3/a^3_2=a^{\\prime}_6/a_6\\)</span>,\r\nhence there exists <span class=\"math inline\">\\(\\mu\\in \\bar{K}^*\\)</span>\r\nsuch that <span class=\"math inline\">\\(a_2^{\\prime}=\\mu^2a_2\\)</span> and\r\n<span class=\"math inline\">\\(a_6^{\\prime}=\\mu^6a_6\\)</span>.</p>\r\n<p> </p>\r\n<p> If <span class=\"math inline\">\\(j=0\\)</span>, we use the curve <span\r\nclass=\"math inline\">\\(E:y^2=x^3+x\\)</span>. Otherwise, we consider the\r\ncurve <span class=\"math display\">\\[\r\ny^2+xy=x^3-\\frac{1}{j_0}.\r\n\\]</span></p>\r\n<p> Let elliptic curve <span class=\"math inline\">\\(E\\)</span> and <span\r\nclass=\"math inline\">\\(E^{\\prime}\\)</span> have the same <span\r\nclass=\"math inline\">\\(j-\\)</span> invariant. Consider the following two\r\ncases:</p>\r\n<p>Case I. <span class=\"math inline\">\\(j(E)\\neq0\\)</span>. In this case\r\n<span class=\"math inline\">\\(E\\)</span> and <span\r\nclass=\"math inline\">\\(E^{\\prime}\\)</span> have Weierstrass equations of\r\nthe form <span class=\"math display\">\\[\r\ny^2=x^3+a_2x^2+a_6.\r\n\\]</span> The only substitutions preserving this type of equation are\r\n<span class=\"math display\">\\[\r\nx=u^2x^\\prime \\qquad \\text{and} \\qquad y=u^3y^{\\prime}.\r\n\\]</span></p>\r\n<p>Case II. <span class=\"math inline\">\\(j(E)=0\\)</span>. In this case\r\n<span class=\"math inline\">\\(E\\)</span> and <span\r\nclass=\"math inline\">\\(E^{\\prime}\\)</span> have Weierstrass equations of\r\nthe form <span class=\"math display\">\\[\r\ny^2=x^3+a_4x+a_6.\r\n\\]</span> The substitutions preserving this form look like <span\r\nclass=\"math display\">\\[\r\nx=u^2x^{\\prime}+r \\qquad \\text{and} \\qquad y=u^3y^{\\prime}.\r\n\\]</span> An isomorphism from <span class=\"math inline\">\\(E\\)</span> to\r\n<span class=\"math inline\">\\(E^{\\prime}\\)</span> is obtained by choosing\r\n<span class=\"math inline\">\\(u\\)</span> and <span\r\nclass=\"math inline\">\\(r\\)</span> to satisfy <span\r\nclass=\"math display\">\\[\r\nu^4=a_4^{\\prime} \\qquad \\text{and} \\qquad\r\nr^3+a_4r+a_6-u^6a_6^{\\prime}=0.\r\n\\]</span></p>\r\n<h4 id=\"section-18\">2.19</h4>\r\n<p> Since <span class=\"math inline\">\\((x,y)\\)</span> and <span\r\nclass=\"math inline\">\\(\\alpha(x,y)\\)</span> lie on <span\r\nclass=\"math inline\">\\(E\\)</span>, then <span class=\"math display\">\\[\r\n\\frac{(x^3+Ax+B)s(x)^2}{t(x)^2}=\\frac{p(x)^3+Ap(x)q(x)^2+Bq(x)^3}{q(x)^3}.\r\n\\]</span> Let <span\r\nclass=\"math inline\">\\(u(x)=p(x)^3+Ap(x)q(x)^2+Bq(x)^3\\)</span>, if <span\r\nclass=\"math inline\">\\(q\\)</span> and <span\r\nclass=\"math inline\">\\(u\\)</span> have common root, then <span\r\nclass=\"math inline\">\\(p\\)</span> and <span\r\nclass=\"math inline\">\\(q\\)</span> have common root, which is not\r\nallowed.</p>\r\n<p> From (a), we obtain <span class=\"math display\">\\[\r\n(x^3+Ax+B)s(x)^2q(x)^3=u(x)t(x)^2.\r\n\\]</span> Since <span class=\"math inline\">\\(t(x_0)=0\\)</span>, so the\r\nmultiplicity of <span class=\"math inline\">\\(x_0\\)</span> over <span\r\nclass=\"math inline\">\\(u(x)t(x)^2\\)</span> at least 2. Notice that <span\r\nclass=\"math inline\">\\(x^3+Ax+B\\)</span> has no multiple roots and <span\r\nclass=\"math inline\">\\(s(x_0)\\neq 0\\)</span>, hence <span\r\nclass=\"math inline\">\\(x_0\\)</span> is a root of <span\r\nclass=\"math inline\">\\(q(x)\\)</span>, that is <span\r\nclass=\"math inline\">\\(q(x_0)=0\\)</span>.</p>\r\n<h4 id=\"section-19\">2.20</h4>\r\n<p>Let <span class=\"math inline\">\\(f(x,y)=x^3+ax^2-y^2=0\\)</span>\r\ndescribe a curve <span class=\"math inline\">\\(C\\)</span> in the affine\r\nplane and let <span class=\"math display\">\\[\r\nx=t,\\qquad y=mt\r\n\\]</span> be a line <span class=\"math inline\">\\(L\\)</span> written in\r\nterms of the parameter <span class=\"math inline\">\\(t\\)</span>. Let <span\r\nclass=\"math inline\">\\(\\tilde{f}(t)=f(t,mt)=t^3+(a-m^2)t^2\\)</span> and\r\n<span class=\"math inline\">\\(t=0\\)</span> correspond to point <span\r\nclass=\"math inline\">\\((0,0)\\)</span>, thus 2 is the highest power of\r\n<span class=\"math inline\">\\(t\\)</span> that divides <span\r\nclass=\"math inline\">\\(\\tilde{f}(t)\\)</span>, hence <span\r\nclass=\"math inline\">\\(L\\)</span> always intersects the curve to order at\r\nleast 2. If the order is 3, then <span class=\"math inline\">\\(t^3\\mid\r\nt^3+(a-m^2)t^2\\)</span>, that is exactly when <span\r\nclass=\"math inline\">\\(a=m^2\\)</span>.</p>\r\n<h4 id=\"section-20\">2.21</h4>\r\n<p> Let the line through the point <span\r\nclass=\"math inline\">\\((-1,0)\\)</span> with slope <span\r\nclass=\"math inline\">\\(m\\)</span>: <span class=\"math inline\">\\(u=-1+m,\r\nv=tm\\)</span>. Substitute the equations into circle equation, this\r\nyields <span class=\"math inline\">\\((t^2+1)m^2-2m=0\\)</span>. Discarding\r\nthe solution <span class=\"math inline\">\\(m=0\\)</span>, then we obtain\r\n<span class=\"math inline\">\\(m=2/(t^2+1)\\)</span>. Thus, <span\r\nclass=\"math display\">\\[\r\nu=-1+\\frac{2}{t^2+1}=\\frac{t^2-1}{t^2+1},\\qquad v=\\frac{2t}{1+t^2}.\r\n\\]</span></p>\r\n<p> Let <span class=\"math inline\">\\(t=m/n\\)</span> in the expression of\r\n<span class=\"math inline\">\\(u\\)</span> and <span\r\nclass=\"math inline\">\\(v\\)</span> by the parameter <span\r\nclass=\"math inline\">\\(t\\)</span>, then <span class=\"math display\">\\[\r\nu=\\frac{t^2-1}{t^2+1}=\\frac{m^2-n^2}{m^2+n^2},\\qquad\r\nv=\\frac{2mn}{m^2+n^2}.\r\n\\]</span> Let <span class=\"math inline\">\\(u=y/z\\)</span> and <span\r\nclass=\"math inline\">\\(v=x/z\\)</span>, thus there are integers <span\r\nclass=\"math inline\">\\(m,n\\)</span> such that <span\r\nclass=\"math display\">\\[\r\nx=2mn,\\qquad y=m^2-n^2,\\qquad z=m^2+n^2.\r\n\\]</span> If <span class=\"math inline\">\\(\\gcd(m,n)=k\\neq 1\\)</span>,\r\nthen <span class=\"math inline\">\\(k^2\\mid \\gcd(x,y,z)\\neq1\\)</span>,\r\nwhich is not allowed, thus <span\r\nclass=\"math inline\">\\(\\gcd(m,n)=1\\)</span>. If <span\r\nclass=\"math inline\">\\(m\\equiv n\\pmod 2\\)</span>, then there exists\r\ninteger <span class=\"math inline\">\\(q\\)</span> such that <span\r\nclass=\"math inline\">\\(m=n+2q\\)</span>, this leads to <span\r\nclass=\"math inline\">\\(2\\mid \\gcd(x,y,z)\\)</span>, which is a\r\ncontradiction, hence <span class=\"math inline\">\\(m\\not\\equiv n \\pmod\r\n2\\)</span>.</p>\r\n<h4 id=\"section-21\">2.22</h4>\r\n<p>Notice that <span class=\"math display\">\\[\r\n\\frac{d}{dx}\\left(\\frac{p(x)}{q(x)}\\right)=\\frac{p^{\\prime}(x)q(x)-q^{\\prime}(x)p(x)}{q^2(x)}.\r\n\\]</span> 1. If <span\r\nclass=\"math inline\">\\(p^{\\prime}(x)=q^{\\prime}(x)=0\\)</span>, it is\r\nobvious that <span\r\nclass=\"math inline\">\\(\\frac{d}{dx}\\left(\\frac{p(x)}{q(x)}\\right)=0\\)</span>.</p>\r\n<ol start=\"2\" type=\"1\">\r\n<li>If <span\r\nclass=\"math inline\">\\(\\frac{d}{dx}\\left(\\frac{p(x)}{q(x)}\\right)=0\\)</span>,\r\nthen we obtain <span class=\"math display\">\\[\r\n\\frac{p^{\\prime}(x)}{q^\\prime(x)}=\\frac{p(x)}{q(x)}=h(x).\r\n\\]</span> The equation is equivalent to <span class=\"math display\">\\[\r\np^\\prime(x)=h(x)q^\\prime(x)\\qquad\\text{and}\\qquad p(x)=h(x)q(x),\r\n\\]</span> this yields <span class=\"math inline\">\\(h(x)=e^x\\)</span>. If\r\n<span class=\"math inline\">\\(p^\\prime(x)\\neq 0\\)</span>, then <span\r\nclass=\"math inline\">\\(q^\\prime(x)\\neq 0\\)</span>. But <span\r\nclass=\"math inline\">\\(e^xq(x)\\)</span> is not a polynomial, it is\r\nimpossible. Thus <span class=\"math inline\">\\(p^\\prime(x)=0\\)</span>,\r\nthen <span class=\"math inline\">\\(q^\\prime(x)=0\\)</span>.</li>\r\n</ol>\r\n<h4 id=\"section-22\">2.23</h4>\r\n<p> <span class=\"math display\">\\[\r\nj(E^{(d)})=108\\frac{(4Ad^2)^3}{4(Ad^2)^3+27(Bd^3)^2}=108\\frac{(4A)^3}{4A^3+27B^2}=j(E).\r\n\\]</span></p>\r\n<p> The change of variables <span class=\"math inline\">\\(x=dx_1, y=\\pm\r\nd\\sqrt{d}y_1\\)</span> transform <span class=\"math inline\">\\(E^{(d)}:\r\ny^2=x^3+Ad^2x+Bd^3\\)</span> into <span class=\"math inline\">\\(E:\r\ny_1^2=x_1^3+Ax_1+B\\)</span>.</p>\r\n<p> The change of variables <span class=\"math inline\">\\(x=dx_1, y=\\pm\r\nd^2y_1\\)</span> transform <span class=\"math inline\">\\(E^{(d)}:\r\ny^2=x^3+Ad^2x+Bd^3\\)</span> into the form <span\r\nclass=\"math inline\">\\(dy_1^2=x_1^3+Ax_1+B\\)</span>.</p>\r\n<h4 id=\"section-23\">2.24</h4>\r\n<p> Since <span class=\"math inline\">\\(\\gcd(\\alpha,\\beta)=1\\)</span>, so\r\nthere exist integers <span class=\"math inline\">\\(p,q\\)</span> such that\r\n<span class=\"math inline\">\\(p\\alpha+q\\beta=1\\)</span>. If cubic\r\npolynomial <span class=\"math inline\">\\(x(x-\\alpha)(x-\\beta)\\)</span>\r\nhave a triple root, then <span class=\"math inline\">\\(p\\mid\r\n\\alpha\\)</span> and <span class=\"math inline\">\\(p\\mid \\beta\\)</span>.\r\nThis yields <span class=\"math inline\">\\(p\\mid p\\alpha+q\\beta=1\\)</span>,\r\nwhich is not allowed.</p>\r\n<p> Directly calculate.</p>\r\n<p> Since <span class=\"math inline\">\\(\\beta \\equiv 0\\pmod {32}\\)</span>,\r\nthen <span class=\"math inline\">\\(\\alpha\\beta/16 \\equiv 0 \\pmod\r\n2\\)</span>. Thus <span class=\"math inline\">\\(E_1\\)</span> has the form\r\n<span class=\"math inline\">\\(y_1^2+x_1y_1=x_1^3+ex_1^2\\)</span> for some\r\n<span class=\"math inline\">\\(e\\in\\mathbf{F}_2\\)</span>. This curve is\r\nsingular at <span class=\"math inline\">\\((0,0)\\)</span>.</p>\r\n<p> Let <span class=\"math inline\">\\(\\tilde{f}(x_1,\\gamma\r\nx_1)=x_1^3+(e-\\gamma^2-\\gamma)x_1^2\\)</span> and notice that the line\r\n<span class=\"math inline\">\\(y_1=\\gamma x_1\\)</span> intersect <span\r\nclass=\"math inline\">\\(E_1\\)</span> at <span\r\nclass=\"math inline\">\\((0,0)\\)</span>. It is easy to see that if <span\r\nclass=\"math inline\">\\(\\gamma^2+\\gamma=e\\)</span>, then the line\r\nintersects in part (c) to order 3, and if <span\r\nclass=\"math inline\">\\(\\gamma^2+\\gamma \\neq e\\)</span>, then the line\r\nintersects in part (c) to order 2.</p>\r\n<p> The equation <span\r\nclass=\"math inline\">\\(\\gamma^2+\\gamma-e=0\\)</span> has two solutions\r\n<span class=\"math inline\">\\(x_1,x_2\\)</span> in <span\r\nclass=\"math inline\">\\(\\mathbf{\\overline{F}}_2\\)</span>, if <span\r\nclass=\"math inline\">\\(x_1=x_2\\)</span>, then <span\r\nclass=\"math inline\">\\((\\gamma-x_1)^2=\\gamma^2+\\gamma-e\\)</span>. But\r\n<span class=\"math display\">\\[\r\n\\frac{d}{d\\gamma}(\\gamma-x_1)^2=0, \\qquad\r\n\\frac{d}{d\\gamma}(\\gamma^2+\\gamma-e)=1\\neq 0,\r\n\\]</span> which is not allowed, hence <span\r\nclass=\"math inline\">\\(x_1\\neq x_2\\)</span>.</p>\r\n",
            "tags": [
                "标标备忘录",
                "密码学中的椭圆曲线",
                "标标备忘录",
                "密码学"
            ]
        },
        {
            "id": "http://example.com/2024/07/03/post/sql/01-sql/",
            "url": "http://example.com/2024/07/03/post/sql/01-sql/",
            "title": "数据库",
            "date_published": "2024-07-03T08:07:19.424Z",
            "content_html": "<h1 id=\"数据库小记\">数据库小记</h1>\r\n<h3 id=\"字符串排序转类型\">1、字符串排序，转类型</h3>\r\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在这个查询中，<span class=\"built_in\">CAST</span>(j.ops_jl_start <span class=\"keyword\">AS</span> <span class=\"type\">INTEGER</span>) 将 j.ops_jl_start 字符串转换为整数，然后按整数值进行排序，从而确保排序顺序为 <span class=\"number\">1</span>、<span class=\"number\">2</span>、<span class=\"number\">3</span>、<span class=\"number\">5</span>。</span><br><span class=\"line\"></span><br><span class=\"line\">如果你的数据库系统不支持 CAST 函数（例如在某些数据库系统中，可能需要使用 <span class=\"keyword\">CONVERT</span> 函数），你可以根据具体的数据库系统语法进行调整。例如，在 MySQL 中，可以使用：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">sql</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"built_in\">CAST</span>(j.ops_jl_start <span class=\"keyword\">AS</span> <span class=\"type\">INTEGER</span>);</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">CONVERT</span>(j.ops_jl_start, SIGNED <span class=\"type\">INTEGER</span>);</span><br></pre></td></tr></table></figure>\r\n<h3\r\nid=\"左连接按照某种条件只保留一条\">2、左连接按照某种条件只保留一条</h3>\r\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  (<span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span>,</span><br><span class=\"line\">          <span class=\"built_in\">ROW_NUMBER</span>() <span class=\"keyword\">OVER</span> (<span class=\"keyword\">PARTITION</span> <span class=\"keyword\">BY</span> supplier_id</span><br><span class=\"line\">                               <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> approve_date <span class=\"keyword\">DESC</span>) num</span><br><span class=\"line\">   <span class=\"keyword\">FROM</span> black_vl</span><br><span class=\"line\">   <span class=\"keyword\">WHERE</span> status <span class=\"operator\">=</span> <span class=\"string\">&#x27;XX&#x27;</span></span><br><span class=\"line\">     <span class=\"keyword\">AND</span> mean <span class=\"operator\">=</span> <span class=\"string\">&#x27;XXX&#x27;</span>) h</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> num <span class=\"operator\">=</span> <span class=\"number\">1</span>) h <span class=\"keyword\">ON</span> h.supplier_id <span class=\"operator\">=</span> cps.supplier_id</span><br><span class=\"line\">这边就是按照有多条按照approve_date最大值保存</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"数据库查询优化\">3、数据库查询优化</h3>\r\n<p>1、视图过大，新建视图，只取出自己要的值</p>\r\n",
            "tags": [
                "数据库"
            ]
        },
        {
            "id": "http://example.com/2024/07/01/post/job/06-%E7%8F%A0%E5%95%A4%E5%BC%80%E5%8F%91%E4%BB%BB%E5%8A%A1%E5%B0%8F%E8%AE%B0/",
            "url": "http://example.com/2024/07/01/post/job/06-%E7%8F%A0%E5%95%A4%E5%BC%80%E5%8F%91%E4%BB%BB%E5%8A%A1%E5%B0%8F%E8%AE%B0/",
            "title": "06-珠啤开发任务小记",
            "date_published": "2024-07-01T10:55:20.257Z",
            "content_html": "<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"抱歉，这个密码看着不太对，请再试试。\" data-whm=\"抱歉，这个文章不能被校验，不过您还是能看看解密后的内容。\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"03f7ebd5a66c7b860ba782858ddd32af7943a6976d2687becb4fa4271872ff03\"></script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">您好，这里需要输入密码查看。</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">",
            "tags": [
                "工作日志",
                "job"
            ]
        },
        {
            "id": "http://example.com/2024/07/01/post/job/05-%E6%B7%B1%E8%83%BD%E5%BC%80%E5%8F%91%E4%BB%BB%E5%8A%A1%E5%B0%8F%E8%AE%B0/",
            "url": "http://example.com/2024/07/01/post/job/05-%E6%B7%B1%E8%83%BD%E5%BC%80%E5%8F%91%E4%BB%BB%E5%8A%A1%E5%B0%8F%E8%AE%B0/",
            "title": "05-深能开发任务小记",
            "date_published": "2024-07-01T10:53:17.270Z",
            "content_html": "<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"抱歉，这个密码看着不太对，请再试试。\" data-whm=\"抱歉，这个文章不能被校验，不过您还是能看看解密后的内容。\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"407d842ba09f6da4af45ca7fd47065935a0d72f0d158ac3e243339b0b83937dc\"></script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">您好，这里需要输入密码查看。</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">",
            "tags": [
                "工作日志",
                "job"
            ]
        },
        {
            "id": "http://example.com/2024/07/01/post/job/04-%E5%9B%BD%E9%99%85%E5%8C%96%E6%93%8D%E4%BD%9Ci18n/",
            "url": "http://example.com/2024/07/01/post/job/04-%E5%9B%BD%E9%99%85%E5%8C%96%E6%93%8D%E4%BD%9Ci18n/",
            "title": "04-国际化操作i18n",
            "date_published": "2024-07-01T10:45:56.545Z",
            "content_html": "<h1 id=\"vue-i18n-国际化教程\">vue i18n 国际化教程</h1>\r\n<h2 id=\"国际化介绍\">1、国际化介绍</h2>\r\n<p>对于一些跨国项目来说，国际化是尤为重要的，那么什么要国际化呢?国际化的意思就是将我们写的项目，能够根据不同国家的语言，进行翻译，进行切换，方便不同国家的客户使用</p>\r\n<p>基本思路如下</p>\r\n<p>① 定义语言包：需要几种语言展示，就定义几个语言包</p>\r\n<p>② 创建对象，对语言包进行整合，对象的 key\r\n为语言包的引用，值为语言包对象</p>\r\n<p>③ 创建 vue-i18n 类的对象，同时为其 messages\r\n属性为第②步创建的对象，为其 locale 属性赋值为第②步中语言对象对应的\r\nkey</p>\r\n<p>④ 在创建 Vue 实例对象时，挂载 vue-i18n 类的对象</p>\r\n<p>下面具体讲解</p>\r\n<h2 id=\"简单使用\">2、简单使用</h2>\r\n<p><strong>1、安装插件 vue-i18n</strong></p>\r\n<p><code>i18n</code>是<code>internationalization</code>这个单词的缩写，取了首字母<code>i</code>和结尾字母<code>n</code>，中间一用有18个字母，所以组合起来就所写成<code>i18n</code>，这是一个用于给vue国际化的插件，\r\n它可以轻松地将一些本地化功能集成到你的 Vue.js 应用程序中</p>\r\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">css</span><br><span class=\"line\"></span><br><span class=\"line\">复制代码npm <span class=\"selector-tag\">i</span> vue-i18n</span><br></pre></td></tr></table></figure>\r\n<p>在 main.js 中导入并作为插件使用</p>\r\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"keyword\">import</span> <span class=\"title class_\">VueI18</span>n <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-i18n&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">use</span>(<span class=\"title class_\">VueI18</span>n)</span><br></pre></td></tr></table></figure>\r\n<p><strong>2、创建语言包对象</strong></p>\r\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arduino复制代码<span class=\"comment\">// 1、创建中文语言包对象</span></span><br><span class=\"line\"><span class=\"type\">const</span> zh = &#123;</span><br><span class=\"line\">  username: <span class=\"string\">&#x27;用户名&#x27;</span>,</span><br><span class=\"line\">  email: <span class=\"string\">&#x27;邮箱&#x27;</span>,</span><br><span class=\"line\">  mobile: <span class=\"string\">&#x27;手机&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 2、创建英文语言包对象</span></span><br><span class=\"line\"><span class=\"type\">const</span> en = &#123;</span><br><span class=\"line\">  username: <span class=\"string\">&#x27;Username&#x27;</span>,</span><br><span class=\"line\">  email: <span class=\"string\">&#x27;Email&#x27;</span>,</span><br><span class=\"line\">  mobile: <span class=\"string\">&#x27;Mobile&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p>两个第项中的键是一样的，后面在组件中要使用</p>\r\n<p><strong>3、组合对象</strong></p>\r\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arduino复制代码<span class=\"comment\">// 3、组合语言包对象</span></span><br><span class=\"line\"><span class=\"type\">const</span> messages = &#123;</span><br><span class=\"line\">  zh,</span><br><span class=\"line\">  en</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p><strong>4、创建 i18n 实例</strong></p>\r\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arduino复制代码<span class=\"comment\">// 4、创建 VueI18n 实例，并为 messages 和 locale 属性赋值</span></span><br><span class=\"line\"><span class=\"type\">const</span> i18n = <span class=\"keyword\">new</span> <span class=\"built_in\">VueI18n</span>(&#123;</span><br><span class=\"line\">  messages,</span><br><span class=\"line\">  locale: <span class=\"string\">&#x27;en&#x27;</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\r\n<ul>\r\n<li>messages 属性要设置为第3步中组合的修啊ing</li>\r\n<li>locale：的值为 messages 对象中的某个 key 的值，如果设置为\r\nen，则组件中使用 第1步中创建的 英文语言中包中的对应属性的值，如果设置为\r\nzh，则使用 中文语言包中的属性的只</li>\r\n</ul>\r\n<p><strong>5、挂载对象</strong></p>\r\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"comment\">// 5、挂载 i18n</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">  i18n,</span><br><span class=\"line\">  <span class=\"attr\">render</span>: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> <span class=\"title function_\">h</span>(<span class=\"title class_\">App</span>)</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>\r\n<p><strong>6、完整代码</strong></p>\r\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"keyword\">import</span> <span class=\"title class_\">Vue</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">VueI18</span>n <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-i18n&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">use</span>(<span class=\"title class_\">VueI18</span>n)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1、创建中文语言包对象</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> zh = &#123;</span><br><span class=\"line\">  <span class=\"attr\">username</span>: <span class=\"string\">&#x27;用户名&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">email</span>: <span class=\"string\">&#x27;邮箱&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">mobile</span>: <span class=\"string\">&#x27;手机&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 2、创建英文语言包对象</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> en = &#123;</span><br><span class=\"line\">  <span class=\"attr\">username</span>: <span class=\"string\">&#x27;Username&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">email</span>: <span class=\"string\">&#x27;Email&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">mobile</span>: <span class=\"string\">&#x27;Mobile&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 3、组合语言包对象</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> messages = &#123;</span><br><span class=\"line\">  zh,</span><br><span class=\"line\">  en</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 4、创建 VueI18n 实例，并为 messages 和 locale 属性赋值</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> i18n = <span class=\"keyword\">new</span> <span class=\"title class_\">VueI18</span>n(&#123;</span><br><span class=\"line\">  messages,</span><br><span class=\"line\">  <span class=\"attr\">locale</span>: <span class=\"string\">&#x27;en&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\">config</span>.<span class=\"property\">productionTip</span> = <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\">// 5、挂载 i18n</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">  i18n,</span><br><span class=\"line\">  <span class=\"attr\">render</span>: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> <span class=\"title function_\">h</span>(<span class=\"title class_\">App</span>)</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<p><strong>7、组件中使用</strong></p>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash复制代码&lt;template&gt;</span><br><span class=\"line\">  &lt;div <span class=\"built_in\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span><br><span class=\"line\">    &lt;p&gt;&#123;&#123; <span class=\"variable\">$t</span>(<span class=\"string\">&#x27;username&#x27;</span>) &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;&#123;&#123; <span class=\"variable\">$t</span>(<span class=\"string\">&#x27;email&#x27;</span>) &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;&#123;&#123; <span class=\"variable\">$t</span>(<span class=\"string\">&#x27;mobile&#x27;</span>) &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\r\n<h2 id=\"扩展语言包对象\">3、扩展语言包对象</h2>\r\n<p>真实的项目中，可能很多地方都需要国际化，比如表格的表头、tab\r\n栏、导航菜单等，我们可以在语言包中创建多个键，分别存储这些模块的语言</p>\r\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">css复制代码// <span class=\"number\">1</span>、创建中文语言包对象</span><br><span class=\"line\">const zh = &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">table</span>: &#123;</span><br><span class=\"line\">    username: <span class=\"string\">&#x27;用户名&#x27;</span>,</span><br><span class=\"line\">    email: <span class=\"string\">&#x27;邮箱&#x27;</span>,</span><br><span class=\"line\">    mobile: <span class=\"string\">&#x27;手机&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  menus: &#123;</span><br><span class=\"line\">    home: <span class=\"string\">&#x27;首页&#x27;</span>,</span><br><span class=\"line\">    download: <span class=\"string\">&#x27;下载&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  tabs: &#123;</span><br><span class=\"line\">    info: <span class=\"string\">&#x27;商品描述&#x27;</span>,</span><br><span class=\"line\">    comment: <span class=\"string\">&#x27;评价&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// <span class=\"number\">2</span>、创建英文语言包对象</span><br><span class=\"line\">const en = &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">table</span>: &#123;</span><br><span class=\"line\">    username: <span class=\"string\">&#x27;Username&#x27;</span>,</span><br><span class=\"line\">    email: <span class=\"string\">&#x27;Email&#x27;</span>,</span><br><span class=\"line\">    mobile: <span class=\"string\">&#x27;Mobile&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  menus: &#123;</span><br><span class=\"line\">    home: <span class=\"string\">&#x27;Home&#x27;</span>,</span><br><span class=\"line\">    download: <span class=\"string\">&#x27;DownLoad&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  tabs: &#123;</span><br><span class=\"line\">    info: <span class=\"string\">&#x27;Describe&#x27;</span>,</span><br><span class=\"line\">    comment: <span class=\"string\">&#x27;Comment On&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p>组件中使用</p>\r\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xml复制代码<span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 模拟表格中使用 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; $t(&#x27;table.username&#x27;) &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; $t(&#x27;table.email&#x27;) &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; $t(&#x27;table.mobile&#x27;) &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 模拟导航菜单中使用 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; $t(&#x27;menus.home&#x27;) &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; $t(&#x27;menus.download&#x27;) &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 模拟tabs 选项卡中使用 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; $t(&#x27;tabs.info&#x27;) &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; $t(&#x27;tabs.comment&#x27;) &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\r\n<p>此时，如果将 locale 的值切换为 zh</p>\r\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arduino复制代码<span class=\"comment\">// 4、创建 VueI18n 实例，并为 messages 和 locale 属性赋值</span></span><br><span class=\"line\"><span class=\"type\">const</span> i18n = <span class=\"keyword\">new</span> <span class=\"built_in\">VueI18n</span>(&#123;</span><br><span class=\"line\">  messages,</span><br><span class=\"line\">  locale: <span class=\"string\">&#x27;zh&#x27;</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\r\n<blockquote>\r\n<p>实际开发中，多个组件中可能存在多个表格、导航菜单等，每个表格的表头、菜单的描述信息可能都不尽相同</p>\r\n<p>该如何处理呢？</p>\r\n<p>以表格的表头为例</p>\r\n<p>我们可以在语言包对象中，定义多个 table，如\r\nuserTable、roleTable等，每个当中存储自己的字段和对应的语言，也可以在一个\r\ntable 对象中，定义多个字段，把所有表格用到的表头信息全都定义在一个 table\r\n对象中</p>\r\n</blockquote>\r\n<h2 id=\"单独的语言包文件\">4、单独的语言包文件</h2>\r\n<p>语言包对象\r\n最后可能会比较大，属性比较多，所以最好的办法是将其定义成单独的 js\r\n文件，然后再进行整合</p>\r\n<p><strong>1、创建语言包文件</strong></p>\r\n<p>src 目录下新建 langurage 目录，在其中新建 zh.js 和 en.js\r\n文件，然后将上面的语言包代码拷贝进来，因为一会要使用语言包对象，所以要导出</p>\r\n<p>zh.js</p>\r\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">css复制代码// <span class=\"number\">1</span>、创建中文语言包对象</span><br><span class=\"line\">export default&#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">table</span>: &#123;</span><br><span class=\"line\">      username: <span class=\"string\">&#x27;用户名&#x27;</span>,</span><br><span class=\"line\">      email: <span class=\"string\">&#x27;邮箱&#x27;</span>,</span><br><span class=\"line\">      mobile: <span class=\"string\">&#x27;手机&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    menus: &#123;</span><br><span class=\"line\">      home: <span class=\"string\">&#x27;首页&#x27;</span>,</span><br><span class=\"line\">      download: <span class=\"string\">&#x27;下载&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    tabs: &#123;</span><br><span class=\"line\">      info: <span class=\"string\">&#x27;商品描述&#x27;</span>,</span><br><span class=\"line\">      comment: <span class=\"string\">&#x27;评价&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\r\n<p>en.js</p>\r\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">css复制代码// <span class=\"number\">2</span>、创建英文语言包对象</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">table</span>: &#123;</span><br><span class=\"line\">        username: <span class=\"string\">&#x27;Username&#x27;</span>,</span><br><span class=\"line\">        email: <span class=\"string\">&#x27;Email&#x27;</span>,</span><br><span class=\"line\">        mobile: <span class=\"string\">&#x27;Mobile&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    menus: &#123;</span><br><span class=\"line\">        home: <span class=\"string\">&#x27;Home&#x27;</span>,</span><br><span class=\"line\">        download: <span class=\"string\">&#x27;DownLoad&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    tabs: &#123;</span><br><span class=\"line\">        info: <span class=\"string\">&#x27;Describe&#x27;</span>,</span><br><span class=\"line\">        comment: <span class=\"string\">&#x27;Comment On&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p><strong>2、整合语言包文件</strong></p>\r\n<p>我们将整合语言包对象和创建 VueI18n 实例并配置的过程写到一个 js\r\n文件中，然后在 main.js 中导入</p>\r\n<p>这样 main.js 中代码就会简练很多，毕竟 main.js 中只是最后需要一个\r\nVueI18n 的实例即可![]</p>\r\n<p>langurage 目录中新建 index.js，代码如下</p>\r\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"keyword\">import</span> <span class=\"title class_\">Vue</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">VueI18</span>n <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-i18n&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 从语言包文件中导入语言包对象</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> zh <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./zh&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> en <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./en&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">use</span>(<span class=\"title class_\">VueI18</span>n)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> messages = &#123;</span><br><span class=\"line\">  zh,</span><br><span class=\"line\">  en</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> i18n = <span class=\"keyword\">new</span> <span class=\"title class_\">VueI18</span>n(&#123;</span><br><span class=\"line\">  messages,</span><br><span class=\"line\">  <span class=\"attr\">locale</span>: <span class=\"string\">&#x27;en&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> i18n</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<p><strong>3、main.js 中引入</strong></p>\r\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"keyword\">import</span> <span class=\"title class_\">Vue</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> i18n <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./langurage&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\">config</span>.<span class=\"property\">productionTip</span> = <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\">// 5、挂载 i18n</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">  i18n,</span><br><span class=\"line\">  <span class=\"attr\">render</span>: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> <span class=\"title function_\">h</span>(<span class=\"title class_\">App</span>)</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<h2 id=\"切换语言\">5、切换语言</h2>\r\n<p>当前切换语言，需要修改如下代码中的 locale 的值</p>\r\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arduino复制代码<span class=\"type\">const</span> i18n = <span class=\"keyword\">new</span> <span class=\"built_in\">VueI18n</span>(&#123;</span><br><span class=\"line\">  messages,</span><br><span class=\"line\">  locale: <span class=\"string\">&#x27;en&#x27;</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\r\n<p>手动切换当然不行了，页面中可以提供一个按钮，点击时，动态改变这里的值</p>\r\n<p>通过 navigator.language\r\n方法可以获取浏览器当前使用的语言，基本就代表了用户所使用的语言</p>\r\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arduino复制代码<span class=\"comment\">// 获取浏览器当前使用的语言，并进行处理</span></span><br><span class=\"line\"><span class=\"type\">const</span> i18n = <span class=\"keyword\">new</span> <span class=\"built_in\">VueI18n</span>(&#123;</span><br><span class=\"line\">  messages,</span><br><span class=\"line\">  locale: navigator.language <span class=\"comment\">// 获取浏览器的语言</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\r\n<p>组件中加入语言切换按钮</p>\r\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ini复制代码    &lt;button @<span class=\"attr\">click</span>=<span class=\"string\">&quot;translate(&#x27;zh&#x27;)&quot;</span>&gt;切换为中文&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @<span class=\"attr\">click</span>=<span class=\"string\">&quot;translate(&#x27;en&#x27;)&quot;</span>&gt;切换为英文&lt;/button&gt;</span><br><span class=\"line\">javascript复制代码  methods: &#123;</span><br><span class=\"line\">    translate(lang) &#123;</span><br><span class=\"line\">      this.$<span class=\"attr\">i18n.locale</span> = lang</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\r\n<p>这样，我们就实现了语言的切换了</p>\r\n<h2 id=\"动态菜单如何处理\">6、动态菜单如何处理</h2>\r\n<p>如下面的导航菜单是请求后台数据，然后借用 element-ui 中的 menu\r\n组件动态渲染的</p>\r\n<p>返回的菜单名称字段（authName）的值都是中文，此时该如何处理呢？</p>\r\n<p>很简单，语言包中定义相关数据</p>\r\n<p>zh.js</p>\r\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arduino复制代码<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  menus: &#123;</span><br><span class=\"line\">    用户管理: <span class=\"string\">&#x27;用户管理&#x27;</span>,</span><br><span class=\"line\">    用户列表: <span class=\"string\">&#x27;用户列表&#x27;</span>,</span><br><span class=\"line\">    角色列表: <span class=\"string\">&#x27;角色列表&#x27;</span>,</span><br><span class=\"line\">    权限管理: <span class=\"string\">&#x27;权限管理&#x27;</span>,</span><br><span class=\"line\">    权限列表: <span class=\"string\">&#x27;权限列表&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p>en.js</p>\r\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arduino复制代码<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  menus: &#123;</span><br><span class=\"line\">    用户管理: <span class=\"string\">&#x27;User Manager&#x27;</span>,</span><br><span class=\"line\">    用户列表: <span class=\"string\">&#x27;User List&#x27;</span>,</span><br><span class=\"line\">    角色列表: <span class=\"string\">&#x27;Role List&#x27;</span>,</span><br><span class=\"line\">    权限管理: <span class=\"string\">&#x27;Rights Manager&#x27;</span>,</span><br><span class=\"line\">    权限列表: <span class=\"string\">&#x27;Rights List&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p>menu 组件渲染时，加入如下代码</p>\r\n<p>在 methods 中定义方法 menusTitle</p>\r\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kotlin复制代码  menusTitle(item) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.$te(<span class=\"string\">&#x27;menus.&#x27;</span> + item)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.$t(<span class=\"string\">&#x27;menus.&#x27;</span> + item)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> item</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\r\n<p>现在我们实现翻译功能</p>\r\n<p>头部加上一个 switch 进行语言切换</p>\r\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ini复制代码&lt;el-switch</span><br><span class=\"line\">    <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;langValue&quot;</span></span><br><span class=\"line\">    :<span class=\"attr\">active-text</span>=<span class=\"string\">&quot;active_text&quot;</span></span><br><span class=\"line\">    :<span class=\"attr\">inactive-text</span>=<span class=\"string\">&quot;inactive_text&quot;</span></span><br><span class=\"line\">    @<span class=\"attr\">change</span>=<span class=\"string\">&quot;translate&quot;</span></span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\r\n<p>data 中的数据</p>\r\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">yaml复制代码</span> <span class=\"attr\">langValue:</span> <span class=\"literal\">false</span><span class=\"string\">,</span></span><br><span class=\"line\"> <span class=\"attr\">lang:</span> <span class=\"string\">&#x27;&#x27;</span><span class=\"string\">,</span></span><br><span class=\"line\"> <span class=\"attr\">active_text:</span> <span class=\"string\">&#x27;&#x27;</span><span class=\"string\">,</span></span><br><span class=\"line\"> <span class=\"attr\">inactive_text:</span> <span class=\"string\">&#x27;&#x27;</span><span class=\"string\">,</span></span><br></pre></td></tr></table></figure>\r\n<p>组件初始化时对上面的值进行初始化设置</p>\r\n<p>methods 中定义此方法，并在 created 钩子函数中调用</p>\r\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ini复制代码 setSwitch() &#123;</span><br><span class=\"line\">     <span class=\"attr\">this.active_text</span> = navigator.language === <span class=\"string\">&#x27;zh&#x27;</span> ? <span class=\"string\">&#x27;英文&#x27;</span> : <span class=\"string\">&#x27;中文&#x27;</span></span><br><span class=\"line\">     <span class=\"attr\">this.inactive_text</span> = navigator.language === <span class=\"string\">&#x27;zh&#x27;</span> ? <span class=\"string\">&#x27;中文&#x27;</span> : <span class=\"string\">&#x27;英文&#x27;</span></span><br><span class=\"line\">     <span class=\"attr\">this.lang</span> = navigator.language</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\r\n<p>switch 的 change 事件处理程序</p>\r\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kotlin复制代码translate() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.lang = <span class=\"keyword\">this</span>.lang === <span class=\"string\">&#x27;zh&#x27;</span> ? <span class=\"string\">&#x27;en&#x27;</span> : <span class=\"string\">&#x27;zh&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.$i18n.locale = <span class=\"keyword\">this</span>.lang</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\r\n<h2 id=\"如何调整语言设置\">7、如何调整语言设置</h2>\r\n<p>在浏览器的语言设置中，可以调整语言，然后刷新页面，浏览器就会采用最新的语言设置</p>\r\n<p>VoerkaI18n：https://zhangfisher.github.io/voerka-i18n/#/</p>\r\n",
            "tags": [
                "工作日志",
                "job",
                "vue.js",
                "国际化"
            ]
        },
        {
            "id": "http://example.com/2024/06/28/post/utils/utils/",
            "url": "http://example.com/2024/06/28/post/utils/utils/",
            "title": "实用小工具",
            "date_published": "2024-06-28T01:37:25.457Z",
            "content_html": "<h1 id=\"实用小工具\">实用小工具</h1>\r\n<h2 id=\"windows系统\">Windows系统</h2>\r\n<h4 id=\"geek软件卸载工具\">1、Geek：软件卸载工具</h4>\r\n<p><strong>简介</strong>：GeekUninstaller正式版是一款相当不错的单文件绿色卸载软件，它体积轻巧，反映迅速，并且完全免费，支持多国语言，完美支持支持32位与64位系统，并且它只有一个exe文件\r\n(软件大小不到2M)，你不需要安装即可直接卸载软件、强制彻底清除软件残留垃圾文件或是查看某软件的注册表项目等等，让你的系统瞬间变得高速流畅。</p>\r\n<p>果核剥壳链接：https://www.ghxi.com/geek.html</p>\r\n<p>网盘分享链接：</p>\r\n<h4 id=\"everything数据检索工具\">2、Everything：数据检索工具</h4>\r\n<p><strong>简介</strong>：Everything是速度最快的文件搜索软件，可以瞬间搜索到你需要的文件。如果你用过Windows自Everything是速度最快的文件搜索软件，可以瞬间搜索到你需要的文件。如果你用过Windows自带的搜索工具、Total\r\nCommander的搜索、Google\r\n桌面搜索或百度硬盘搜索，都因为速度或其他原因而不满意；或者用了Locate32也不满意（或满意），推荐这款体积小巧、免安装、免费、速度极快（比Locate32更快）的文件搜索工具Everything！</p>\r\n<p>果核剥壳链接：https://www.ghxi.com/everything.html</p>\r\n<h4\r\nid=\"formatfactory格式工厂格式转换工具\">3、FormatFactory格式工厂：格式转换工具</h4>\r\n<p><strong>简介</strong>：格式工厂是套万能的多媒体格式转换器，提供以下功能：所有类型视频转到MP4/3GP/MPG/AVI/WMV/FLV/SWF。所有类型音频转到MP3/WMA/MMF/AMR/OGG/M4A/WAV。你可以在格式工厂中文版界面的左侧列表中看到软件提供的主要功能，如视频转换、音频转换、图片转换、DVD/CD/ISO转换，以及视频合并、音频合并、混流等高级功能。格式工厂强大的格式转换功能和友好的操作性，无疑使格式工厂成为同类软件中的佼者。</p>\r\n<p>果核剥壳链接：https://www.ghxi.com/formatfactory-2.html</p>\r\n<h4 id=\"timesync系统时间校准工具\">4、Timesync：系统时间校准工具</h4>\r\n<p><strong>简介</strong>：<strong>TimeSync</strong>\r\n是一款由德国知名自由软件开发工程师 <strong>Horst Schaeffer</strong>\r\n精心设计与荣誉出品的可用于获取来自 <strong>NIST</strong>\r\n标准互联网时间服务的当前时间并在必要时校准与同步用户计算机时钟时间的实用管理工具。尽管当前系统的确切时间可以由较新版本的微软\r\nWindows\r\n平台的官方服务器或者您的路由器提供，然而在特定需要时您可能希望拥有这样一款额外的时间校准同步助手随叫随到。</p>\r\n<p>下载地址：</p>\r\n<p>【网站】<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGFuem91eC5jb20vYjA1YW8xYTRm\">蓝奏云</span> <a\r\nhref=\"https://www.90pan.com/o143870\">90网盘</a> <a\r\nhref=\"https://cloud.degoo.com/share/rbCgElQIOSaJMY\">Degoo网盘</a></p>\r\n<h4\r\nid=\"contextmenumanager.net.3.5-右键管理工具\">5、ContextMenuManager.NET.3.5\r\n： 右键管理工具</h4>\r\n<p><strong>简介</strong>：ContextMenuManager是一款C#开发的Windows10右键菜单管理软件，软件小巧，功能强大，使用起来非常方便。遗憾的是软件只支持Windows10。</p>\r\n<p>果核剥壳链接：https://www.ghxi.com/contextmenumanager.html</p>\r\n<h4 id=\"iobit-unlocker文件文件夹解锁工具\">6、IObit\r\nUnlocker：文件/文件夹解锁工具</h4>\r\n<p><strong>简介</strong>：Obit Unlocker\r\n是一款小巧、易用和免费的文件/文件夹解锁工具，您可通过拖放或点击添加按钮对目标文件/文件夹进行删除、重命名、移动和复制等操作，解决无法删除或访问被拒绝等问题。</p>\r\n<p>使用 IObit\r\nUnlocker，您不会再收到“无法删除文件”、“访问被拒绝”、“文件未删除”、“该文件正被另一个程序或用户使用”或“共享冲突”等提示消息。它是一个强大的工具，通过终止所有阻止您删除或访问文件/文件夹的相关进程解决这些问题。</p>\r\n<p>通过“解锁 &amp; 删除”、“解锁 &amp; 重命名”、“解锁 &amp; 移动”和“解锁\r\n&amp;\r\n复制”功能，为您提供了一种安全的方法修改您计算机上的文件和文件夹，以确保您的数据安全和磁盘的稳定性。</p>\r\n<p>果核剥壳链接：https://www.ghxi.com/iobitunlocker.html</p>\r\n<h4 id=\"spacesniffer磁盘分析工具\">7、SpaceSniffer：磁盘分析工具</h4>\r\n<p><strong>简介</strong>：有时候我们在整理磁盘时，想知道磁盘中哪些文件或文件夹占用了多少空间，要是一个个文件夹点进去看，那岂不是非常浪费时间，对整体也没有一个很直观的印象。\r\nSpaceSniffer 可让您了解文件夹和文件在磁盘上的结构。通过使用可视化布局,\r\n您可以立即看到某个文件在磁盘中到底有“多大”！看看是哪个文件夹或文件占用了大量空间，以便迅速一键删除。</p>\r\n<p>果核剥壳链接：https://www.ghxi.com/spacesniffer.html</p>\r\n<h2 id=\"开发工具\">开发工具</h2>\r\n<h4 id=\"idea-jrebel热部署插件\">1、idea-&gt;JRebel热部署插件</h4>\r\n<h4 id=\"datagrip-数据库jetbrains系列工具\">2、DataGrip\r\n数据库jetbrains系列工具</h4>\r\n",
            "tags": [
                "实用小工具",
                "tools"
            ]
        },
        {
            "id": "http://example.com/2024/06/27/post/cloud/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E5%9F%BA%E7%A1%80%E7%89%88%EF%BC%89/",
            "url": "http://example.com/2024/06/27/post/cloud/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E5%9F%BA%E7%A1%80%E7%89%88%EF%BC%89/",
            "title": "云服务器部署-基础版本（前后端）",
            "date_published": "2024-06-27T09:49:15.300Z",
            "content_html": "<h1 id=\"云服务器\">云服务器</h1>\r\n<p>基础版本（前后端），部署毕设时所用</p>\r\n<h2 id=\"服务器\">1.服务器</h2>\r\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lY3MuY29uc29sZS5hbGl5dW4uY29tL3NlcnZlci9yZWdpb24vY24taGV5dWFu\">https://ecs.console.aliyun.com/server/region/cn-heyuan</span></p>\r\n<p>操作系统 CentOs 7.9 Linux</p>\r\n<p>重置密码**********</p>\r\n<h4 id=\"添加安全组-开启端口号\">添加安全组 开启端口号</h4>\r\n<pre><code>Mysql 3306\r\nhttp 80\r\nspringboot 8084\r\nvue 5173</code></pre>\r\n<h4 id=\"工具\">工具</h4>\r\n<p>xshell：linux终端连接</p>\r\n<p>xftp：文件传输</p>\r\n<h2 id=\"常用命令\">2.常用命令</h2>\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">free -h 查看内存</span><br><span class=\"line\">df-h  查看存储</span><br><span class=\"line\">top  运行软件</span><br><span class=\"line\"></span><br><span class=\"line\">根据端口号查看进程</span><br><span class=\"line\">kill &lt;PID&gt;杀死进程</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//如果 lsof 命令未找到，则可能是因为它没有安装在您的系统上。lsof 是一个用于列出打开文件的工具，可以用于查看正在使用指定端口的进程。在大多数 Linux 发行版中，lsof 可能不会预装，您需要手动安装它。</span><br><span class=\"line\">sudo yum install lsof</span><br><span class=\"line\">sudo lsof -i :8084</span><br><span class=\"line\">//检查防火墙规则以确保 8084 端口被允许通过</span><br><span class=\"line\">sudo netstat -tuln | grep 8084</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<h2 id=\"jdk\">JDK</h2>\r\n<p>下载链接：<a\r\nhref=\"https://www.oracle.com/cn/java/technologies/downloads/#java17\"\r\nclass=\"uri\">https://www.oracle.com/cn/java/technologies/downloads/#java17</a></p>\r\n<p>命令</p>\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.安装jdk</span><br><span class=\"line\">tar -zxvf jdk-*.tar.gz</span><br><span class=\"line\">2.重命名</span><br><span class=\"line\"> mv jdk-17.0.10 jdk17</span><br><span class=\"line\">3.移动</span><br><span class=\"line\">mv jdk17 /usr/local/</span><br><span class=\"line\">4.修改配置文件</span><br><span class=\"line\">cd /usr/local/</span><br><span class=\"line\">vim /etc/profile</span><br><span class=\"line\">(按a或者i 进去编译模式  :wq保存退出)</span><br><span class=\"line\">5.添加配置</span><br><span class=\"line\">export JAVA_HOME=/usr/local/jdk17</span><br><span class=\"line\">export CLASSPATH=$:CLASSPATH:$JAVA_HOME/lib/</span><br><span class=\"line\">export PATH=$PATH:$JAVA_HOME/bin</span><br><span class=\"line\">cat /etc/profile（查看是否更改成功）</span><br><span class=\"line\">6.刷新配置</span><br><span class=\"line\">source /etc/profile</span><br><span class=\"line\">7.检查是否安装成功</span><br><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\r\n<h2 id=\"docker\">docker</h2>\r\n<p>菜鸟教程：<a\r\nhref=\"https://www.runoob.com/docker/centos-docker-install.html\"\r\nclass=\"uri\">https://www.runoob.com/docker/centos-docker-install.html</a></p>\r\n<h4 id=\"手动安装\">1.手动安装</h4>\r\n<p>1.卸载旧版本</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum remove docker \\</span><br><span class=\"line\">                  docker-client \\</span><br><span class=\"line\">                  docker-client-latest \\</span><br><span class=\"line\">                  docker-common \\</span><br><span class=\"line\">                  docker-latest \\</span><br><span class=\"line\">                  docker-latest-logrotate \\</span><br><span class=\"line\">                  docker-logrotate \\</span><br><span class=\"line\">                  docker-engine</span><br></pre></td></tr></table></figure>\r\n<p>2.安装所需软件包</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install -y yum-utils \\</span><br><span class=\"line\">  device-mapper-persistent-data \\</span><br><span class=\"line\">  lvm2</span><br></pre></td></tr></table></figure>\r\n<p>3.设置仓库 阿里云</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum-config-manager \\</span><br><span class=\"line\">    --add-repo \\</span><br><span class=\"line\">    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>\r\n<p>4.安装 Docker Engine-Community</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install docker-ce docker-ce-cli containerd.io docker-compose-plugin</span><br></pre></td></tr></table></figure>\r\n<h4 id=\"启动docker\">2.启动docker</h4>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl start docker</span><br><span class=\"line\">docker version 验证成功</span><br></pre></td></tr></table></figure>\r\n<p>用户设置Docker需要用户具有sudo权限，为了避免每次命令都输入sudo，可以把用户加入到Dokcer用户组</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo usermod -aG docker <span class=\"variable\">$USER</span></span><br></pre></td></tr></table></figure>\r\n<p>查看镜像文件</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker images</span><br><span class=\"line\">docker ps 查看所有进程</span><br></pre></td></tr></table></figure>\r\n<p>设置开机自启</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">enable</span> docker</span><br></pre></td></tr></table></figure>\r\n<p>镜像加速</p>\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /etc/docker</span><br><span class=\"line\">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;registry-mirrors&quot;: [&quot;https://3n4m4jry.mirror.aliyuncs.com&quot;]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\r\n<h4 id=\"卸载docker\">卸载docker</h4>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">删除安装包：</span><br><span class=\"line\">yum remove docker-ce</span><br><span class=\"line\">删除镜像、容器、配置文件等内容：</span><br><span class=\"line\"><span class=\"built_in\">rm</span> -rf /var/lib/docker</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"docker-安装mysql\">docker 安装mysql</h3>\r\n<p>安装mysql</p>\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull mysql:8.0</span><br></pre></td></tr></table></figure>\r\n<p>启动mysql</p>\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -p 3306:3306 --name mysql \\</span><br><span class=\"line\">-v /mydata/mysql/log:/var/log/mysql \\</span><br><span class=\"line\">-v /mydata/mysql/data:/var/lib/mysql \\</span><br><span class=\"line\">-v /mydata/mysql/conf:/etc/mysql \\</span><br><span class=\"line\">-e MYSQL_ROOT_PASSWORD=root \\</span><br><span class=\"line\">-d mysql:8.0</span><br><span class=\"line\"></span><br><span class=\"line\">docker run -p 3309:3306 --name mysql \\</span><br><span class=\"line\">-e MYSQL_ROOT_PASSWORD=root \\</span><br><span class=\"line\">-d mysql:8.0</span><br><span class=\"line\"></span><br><span class=\"line\">docker run -p 3309:3306 --name mysql3309 \\</span><br><span class=\"line\">-v /mydata/mysql3309/log:/var/log/mysql \\</span><br><span class=\"line\">-v /mydata/mysql3309/data:/var/lib/mysql \\</span><br><span class=\"line\">-v /mydata/mysql3309/conf:/etc/mysql \\</span><br><span class=\"line\">-e MYSQL_ROOT_PASSWORD=root \\</span><br><span class=\"line\">-d mysql:8.0</span><br><span class=\"line\"></span><br><span class=\"line\">//用这个就可以</span><br><span class=\"line\">docker run -p 3306:3306 --name mysql -e MYSQL_ROOT_PASSWORD=cyx -d mysql:8.0</span><br><span class=\"line\"></span><br><span class=\"line\">docker start mysql</span><br></pre></td></tr></table></figure>\r\n<p>进入容器命令</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\image-20240408222327539.png\"\r\nalt=\"image-20240408222327539\" />\r\n<figcaption aria-hidden=\"true\">image-20240408222327539</figcaption>\r\n</figure>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//进入mysql容器</span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> -it 8388d7a823cb /bin/bash</span><br><span class=\"line\">//登录mysql</span><br><span class=\"line\">mysql -uroot -pcyx123(账号密码)</span><br><span class=\"line\">//修改权限</span><br><span class=\"line\">ALTER USER <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class=\"string\">&#x27;cyx123&#x27;</span>;</span><br><span class=\"line\">//修改密码</span><br><span class=\"line\">ALTER USER <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span>  IDENTIFIED BY <span class=\"string\">&quot;cyx123&quot;</span>;</span><br></pre></td></tr></table></figure>\r\n<p>然后可以用Navicat 直接连接mysql拷贝数据库数据</p>\r\n<p>数据库授权</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//先进入mysql</span><br><span class=\"line\">-- 查询mysql用于</span><br><span class=\"line\"><span class=\"keyword\">select</span> user,host,authentication_string from mysql.user;</span><br><span class=\"line\">--授权</span><br><span class=\"line\">GRANT ALL PRIVILEGES ON TO *.* <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span>;</span><br><span class=\"line\">--刷新</span><br><span class=\"line\">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>\r\n<p>容器</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、停止容器</span><br><span class=\"line\">docker stop 容器<span class=\"built_in\">id</span></span><br><span class=\"line\">2、开启容器</span><br><span class=\"line\">docker start 容器<span class=\"built_in\">id</span></span><br><span class=\"line\">3、查看所有容器</span><br><span class=\"line\">docker ps -a 查看</span><br></pre></td></tr></table></figure>\r\n<h2 id=\"springboot项目打包\">springboot项目打包</h2>\r\n<p>参考连接：<a\r\nhref=\"https://blog.csdn.net/qq_34491508/article/details/91490434\"\r\nclass=\"uri\">https://blog.csdn.net/qq_34491508/article/details/91490434</a></p>\r\n<p>把所有本地的地址改成服务器上的</p>\r\n<p>mysql端口连接</p>\r\n<p>图片路径</p>\r\n<p>打包命令：</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean package -DskipTests</span><br></pre></td></tr></table></figure>\r\n<h4 id=\"idea打包\">idea打包：</h4>\r\n<p>1、pom文件引入插件</p>\r\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\r\n<p>2、打包 <img\r\nsrc=\"D:\\Pictures\\typore\\watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0NDkxNTA4,size_16,color_FFFFFF,t_70.png\"\r\nalt=\"img\" /></p>\r\n<p>3、jar包运行</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//指定java17的版本</span><br><span class=\"line\">D:\\Iot\\jdk17\\jdk-17.0.7\\bin\\java -jar tobacco-0.0.1-SNAPSHOT.jar</span><br><span class=\"line\"></span><br><span class=\"line\">java -jar tobacco-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>\r\n<p>设置权限</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> 777 tobacco-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>\r\n<p>后台启动</p>\r\n<pre><code>nohup java -jar tobacco-0.0.1-SNAPSHOT.jar &amp;</code></pre>\r\n<p>java 有没有启动</p>\r\n<pre><code>ps -ef grep java\r\nkill -9(进程号)</code></pre>\r\n<h3 id=\"vue项目打包\">VUE项目打包</h3>\r\n<p>端口5173</p>\r\n<p>1、请求路径更改axios</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\image-20240409212908376.png\"\r\nalt=\"image-20240409212908376\" />\r\n<figcaption aria-hidden=\"true\">image-20240409212908376</figcaption>\r\n</figure>\r\n<p>2、动态路由修改</p>\r\n<p>3、打开package.json 点击运行</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\image-20240409213009017.png\"\r\nalt=\"image-20240409213009017\" />\r\n<figcaption aria-hidden=\"true\">image-20240409213009017</figcaption>\r\n</figure>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run build   （X）</span><br><span class=\"line\"></span><br><span class=\"line\">packagejson中运行<span class=\"built_in\">test</span></span><br><span class=\"line\">vue-tsc是代码检查，别加</span><br><span class=\"line\">    <span class=\"string\">&quot;test&quot;</span>: <span class=\"string\">&quot;vite build&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build&quot;</span>: <span class=\"string\">&quot;vue-tsc &amp;&amp; vite build&quot;</span>,</span><br></pre></td></tr></table></figure>\r\n<p>项目上云</p>\r\n<p>1.安装 Node.js 16 和 npm</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装 Node.js 的安装包</span><br><span class=\"line\">curl -fsSL https://rpm.nodesource.com/setup_16.x | sudo bash -</span><br><span class=\"line\"> 安装Node.js 和 npm</span><br><span class=\"line\">sudo yum install -y nodejs</span><br><span class=\"line\">确认安装成功</span><br><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\r\n<p>2.在node环境下安装 <code>http-server</code></p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g http-server</span><br></pre></td></tr></table></figure>\r\n<p>3.启动http服务器</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http-server -p 5173 </span><br><span class=\"line\">将 http-server 在后台运行</span><br><span class=\"line\"><span class=\"built_in\">nohup</span> http-server -p 5173 &gt; /dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>\r\n<p>sh启动脚本，所有放在一个压缩包里，放在云服务器上，运行启动脚本，一减部署</p>\r\n",
            "tags": [
                "微服务框架",
                "Spring Cloud",
                "云服务"
            ]
        },
        {
            "id": "http://example.com/2024/06/27/post/cloud/%E5%88%86%E5%B8%83%E5%BC%8FSpringCloud%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4/",
            "url": "http://example.com/2024/06/27/post/cloud/%E5%88%86%E5%B8%83%E5%BC%8FSpringCloud%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4/",
            "title": "分布式Spring Cloud阿里巴巴-理论",
            "date_published": "2024-06-27T09:42:00.255Z",
            "content_html": "<h1 id=\"分布式spring-cloud阿里巴巴\">分布式Spring Cloud阿里巴巴</h1>\r\n<p>（图片还未上传云）</p>\r\n<h1 id=\"spring-cloud\">---01-Spring Cloud</h1>\r\n<h2 id=\"一微服务架构\">一、微服务架构</h2>\r\n<h4 id=\"什么是微服务架构\">1、什么是微服务架构</h4>\r\n<p>分布式强调系统的拆分，微服务也是强调系统的拆分，微服务架构属于分布式架构的范畴；</p>\r\n<p>并且到目前为止，微服务并没有一个统一的标准的定义，那么微服务究竟是什么？</p>\r\n<p>微服务一词源于Martin Fowler（马丁.福勒）的名为 Microservices 的博文，\r\n可以在他的官方博客上找到这篇文章：\r\nhttp://martinfowler.com/articles/microservices.html</p>\r\n<p>中文翻译版本：</p>\r\n<p>https://www.martinfowler.cn/articles/microservices.html</p>\r\n<p>简单地说， 微服务是系统架构上的一种设计风格，\r\n它的主旨是将一个原本独立的系统拆分成多个小型服务，这些小型服务都在各自独立的进程中运行，服务之间通过基于HTTP的RESTful\r\nAPI进行通信协作；</p>\r\n<p>被拆分后的每一个小型服务都围绕着系统中的某一项业务功能进行构建，\r\n并且每个服务都是一个独立的项目，可以进行独立的测试、开发和部署等；</p>\r\n<p>由于各个独立的服务之间使用的是基于HTTP的作为数据通信协作的基础，所以这些微服务可以使用不同的语言来开发；</p>\r\n<h4 id=\"微服务架构的优缺点\">2、微服务架构的优缺点</h4>\r\n<p>优：</p>\r\n<ol type=\"1\">\r\n<li>微服务架构是将系统中的不同功能模块拆分成多个不同的服务，这些服务进行独立地开发和部署，每个服务都运行在自己的进程内，这样每个服务的更新都不会影响其他服务的运行；</li>\r\n<li>由于每个服务是独立部署的，所以我们可以更准确地监控每个服务的资源消耗情况，进行性能容量的评估，通过压力测试，也很容易发现各个服务间的性能瓶颈所在；</li>\r\n<li>由于每个服务都是独立开发，项目的开发也比较方便，减少代码的冲突、代码的重复，逻辑处理流程也更加清晰，让后续的维护与扩展更加容易；</li>\r\n<li>微服务可以使用不同的编程语言进行开发；</li>\r\n</ol>\r\n<p>缺：</p>\r\n<ol type=\"1\">\r\n<li><p>微服务架构增加了系统维护、部署的难度，导致一些功能模块或代码无法复用；</p></li>\r\n<li><p>随着系统规模的日渐增长，微服务在一定程度上也会导致系统变得越来越复杂，增加了集成测试的复杂度；</p></li>\r\n<li><p>随着微服务的增多，数据的一致性问题，服务之间的通信成本等都凸显了出来；</p>\r\n<p>所以在系统架构时也要提醒自己：不要为了微服务而微服务</p></li>\r\n</ol>\r\n<h4 id=\"为什么选择spring-cloud-来构建微服务\">3、为什么选择Spring Cloud\r\n来构建微服务</h4>\r\n<p>我们国内的互联网企业也有一些著名的框架和方案；</p>\r\n<p>整个微服务架构是由大量的技术框架和方案构成，比如：</p>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 18%\" />\r\n<col style=\"width: 81%\" />\r\n</colgroup>\r\n<thead>\r\n<tr>\r\n<th>服务基础开发</th>\r\n<th>Spring MVC、Spring、SpringBoot</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>服务注册与发现</td>\r\n<td>Netflix的Eureka、Apache的ZooKeeper等</td>\r\n</tr>\r\n<tr>\r\n<td>服务调用</td>\r\n<td>RPC调用有阿里巴巴的Dubbo，Rest方式调用有当当网Dubbo基础上扩展的Dubbox、还有其他方式实现的Rest，比如Ribbon、Feign</td>\r\n</tr>\r\n<tr>\r\n<td>分布式配置管理</td>\r\n<td>百度的Disconf、360的QConf、淘宝的Diamond、Netflix的Archaius等</td>\r\n</tr>\r\n<tr>\r\n<td>负载均衡</td>\r\n<td>Ribbon</td>\r\n</tr>\r\n<tr>\r\n<td>服务熔断</td>\r\n<td>Hystrix</td>\r\n</tr>\r\n<tr>\r\n<td>API网关</td>\r\n<td>Zuul</td>\r\n</tr>\r\n<tr>\r\n<td>批量任务</td>\r\n<td>当当网的Elastic-Job、Linkedln的Azkaban</td>\r\n</tr>\r\n<tr>\r\n<td>服务跟踪</td>\r\n<td>京东的Hydra、Twitter的Zipkin等</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"二spring-cloud\">二、Spring Cloud</h3>\r\n<p>官网：http://spring.io</p>\r\n<h4 id=\"spring-cloud是什么\">1、Spring Cloud是什么</h4>\r\n<ol type=\"1\">\r\n<li>Spring\r\nCloud是一个一站式的开发分布式系统的框架，为开发者提供了一系列的构建分布式系统的工具集；</li>\r\n<li>Spring\r\nCloud为开发人员提供了快速构建分布式系统中一些常见模式的工具（比如：配置管理，服务发现，断路器，智能路由、微代理、控制总线、全局锁、决策竞选、分布式会话和集群状态管理等）；</li>\r\n<li>开发分布式系统都需要解决一系列共同关心的问题，而使用Spring\r\nCloud可以快速地实现这些分布式开发共同关心的问题，并能方便地在任何分布式环境中部署与运行。</li>\r\n<li>Spring\r\nCloud这个一站式地分布式开发框架，被近年来流行的“微服务”架构所大力推崇，成为目前进行微服务架构的优先选择工具；</li>\r\n<li>Spring Cloud基于Spring Boot框架构建微服务架构，学习Spring\r\nCloud需要先学习Spring Boot；</li>\r\n</ol>\r\n<h4 id=\"整体框架\">2、整体框架</h4>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\image-20240507092722104.png\"\r\nalt=\"image-20240507092722104\" />\r\n<figcaption aria-hidden=\"true\">image-20240507092722104</figcaption>\r\n</figure>\r\n<p>Service Provider： 暴露服务的服务提供方。</p>\r\n<p>Service Consumer：调用远程服务的服务消费方。</p>\r\n<p>EureKa Server： 服务注册中心和服务发现中心。</p>\r\n<h3 id=\"三服务注册中心eureka\">三、服务注册中心Eureka</h3>\r\n<h4 id=\"走进服务中心eureka\">1、走进服务中心Eureka</h4>\r\n<p>在微服务架构中，<strong>服务注册与发现是核心组件之一</strong>，手动指定每个服务是很低效的，Spring\r\nCloud提供了多种服务注册与发现的实现方式，例如：Eureka、Zookeeper。</p>\r\n<p>Spring Cloud支持得最好的是Eureka，其次是Zookeeper。</p>\r\n<p>1、什么是服务注册</p>\r\n<p>服务注册：将服务所在主机、端口、版本号、通信协议等信息登记到注册中心上。</p>\r\n<p>2、什么是服务发现</p>\r\n<p>服务发现：服务消费者向注册中心请求已经登记的服务列表，然后得到某个服务的主机、端口、版本号、通信协议等信息，从而实现对具体服务的调用。</p>\r\n<p>3、Eureka是什么</p>\r\n<p>Eureka是一个服务治理组件，它主要包括服务注册和服务发现，主要用来搭建服务注册中心。</p>\r\n<p>Eureka 是一个基于 REST\r\n的服务，用来定位服务，进行中间层服务器的负载均衡和故障转移；</p>\r\n<p>Eureka\r\n采用了C-S（客户端/服务端）的设计架构，也就是Eureka由两个组件组成：Eureka服务端和Eureka客户端。Eureka\r\nServer\r\n作为服务注册的服务端，它是服务注册中心，而系统中的其他微服务，使用\r\nEureka 的客户端连接到 Eureka\r\nServer服务端，并维持心跳连接，Eureka客户端是一个Java客户端，用来简化与服务器的交互、负载均衡，服务的故障切换等；</p>\r\n<p>有了Eureka注册中心，系统的维护人员就可以通过 Eureka Server\r\n来监控系统中各个微服务是否正常运行。</p>\r\n<h4 id=\"eureka与zookeeper的比较\">2、Eureka与Zookeeper的比较</h4>\r\n<p>著名的CAP理论指出，一个分布式系统不可能同时满足C(一致性)、A(可用性)和P(分区容错性)。</p>\r\n<p>由于分区容错性在是分布式系统中必须要保证的，因此我们只能在A和C之间进行权衡，在此Zookeeper保证的是CP,\r\n而Eureka则是AP。</p>\r\n<p><strong>1、Zookeeper保证CP</strong></p>\r\n<p>在ZooKeeper中，当master节点因为网络故障与其他节点失去联系时，剩余节点会重新进行leader选举，但是问题在于，选举leader需要一定时间,\r\n且选举期间整个ZooKeeper集群都是不可用的，这就导致在选举期间注册服务瘫痪。在云部署的环境下，因网络问题使得ZooKeeper集群失去master节点是大概率事件，虽然服务最终能够恢复，但是在选举时间内导致服务注册长期不可用是难以容忍的。</p>\r\n<p><strong>2、Eureka保证AP</strong></p>\r\n<p>Eureka优先保证可用性，Eureka各个节点是平等的，某几个节点挂掉不会影响正常节点的工作，剩余的节点依然可以提供注册和查询服务。而Eureka的客户端在向某个Eureka注册或时如果发现连接失败，则会自动切换至其它节点，只要有一台Eureka还在，就能保证注册服务可用(保证可用性)，只不过查到的信息可能不是最新的(不保证强一致性)。</p>\r\n<p>所以Eureka在网络故障导致部分节点失去联系的情况下，只要有一个节点可用，那么注册和查询服务就可以正常使用，而不会像zookeeper那样使整个注册服务瘫痪，Eureka优先保证了可用性。</p>\r\n<h3 id=\"四客户端负载均衡ribbon\">四、客户端负载均衡Ribbon</h3>\r\n<h4 id=\"负载均衡\">1、负载均衡</h4>\r\n<p>负载均衡：<strong>指将一个请求均匀地分摊到不同的节点单元上执行，负载均和分为硬件负载均衡和软件负载均衡</strong>：</p>\r\n<p><strong>硬件负载均衡</strong>：比如 F5、深信服、Array 等</p>\r\n<p><strong>软件负载均衡</strong>：比如 Nginx、LVS、HAProxy 等</p>\r\n<p>硬件负载均衡或是软件负载均衡，他们都会维护一个可用的服务端清单，通过心跳检测来剔除故障的服务端节点以保证清单中都是可以正常访问的服务端节点。当客户端发送请求到负载均衡设备的时候，该设备按某种算法（比如轮询、权重、\r\n最小连接数等）从维护的可用服务端清单中取出一台服务端的地址，然后进行转发。</p>\r\n<h4 id=\"ribbon介绍\">2、Ribbon介绍</h4>\r\n<p>Ribbon是Netflix发布的开源项目，<strong>主要功能</strong>是<u>提供客户端的软件负载均衡算法，是一个基于HTTP和TCP的客户端负载均衡工具</u>。</p>\r\n<p>Spring\r\nCloud对Ribbon做了二次封装，可以让我们使用<strong>RestTemplate</strong>的服务请求，自动转换成客户端负载均衡的服务调用。</p>\r\n<p>Ribbon支持多种负载均衡算法，还支持自定义的负载均衡算法。</p>\r\n<p>Ribbon只是一个工具类框架，比较小巧，Spring\r\nCloud对它封装后使用也非常方便，它不像服务注册中心、配置中心、API网关那样需要独立部署，<strong>Ribbon只需要在代码直接使用即可</strong>；</p>\r\n<h4 id=\"ribbon-与-nginx-的区别\">3、Ribbon 与 Nginx 的区别</h4>\r\n<p>Ribbon是客户端的负载均衡工具，而客户端负载均衡和服务端负载均衡最大的区别在于服务清单所存储的位置不同，在客户端负载均衡中，所有客户端节点下的服务端清单，需要自己从服务注册中心上获取，比如Eureka服务注册中心。同服务端负载均衡的架构类似，在客户端负载均衡中也需要心跳去维护服务端清单的健康性，只是这个步骤需要与服务注册中心配合完成。在Spring\r\nCloud中，由于Spring\r\nCloud对Ribbon做了二次封装，所以默认会创建针对Ribbon的自动化整合配置</p>\r\n<h4 id=\"使用\">4、使用</h4>\r\n<p>在Spring\r\nCloud中，Ribbon主要与RestTemplate对象配合起来使用，Ribbon会自动化配置RestTemplate对象，通过@LoadBalanced开启RestTemplate对象调用时的负载均衡。</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\image-20240507093858824.png\"\r\nalt=\"image-20240507093858824\" />\r\n<figcaption aria-hidden=\"true\">image-20240507093858824</figcaption>\r\n</figure>\r\n<h3 id=\"五resttemplate模板\">五、RestTemplate模板</h3>\r\n<p>当我们从服务消费端去调用服务提供者的服务的时候，使用了一个极其方便的对象叫RestTemplate，当时我们只使用了RestTemplate中最简单的一个功能getForEntity发起了一个get请求去调用服务端的数据，同时，我们还通过配置@LoadBalanced注解开启客户端负载均衡，RestTemplate的功能非常强大，那么接下来我们就来详细的看一下RestTemplate中几种常见请求方法的使用。</p>\r\n<p>在日常操作中，基于Rest的方式通常是四种情况，它们分表是：</p>\r\n<p><strong>GET请求 --查询数据</strong></p>\r\n<p><strong>POST请求 –添加数据</strong></p>\r\n<p><strong>PUT请求 – 修改数据</strong></p>\r\n<p><strong>DELETE请求 –删除数据</strong></p>\r\n<p>下面我们逐一解读。</p>\r\n<h3 id=\"六服务熔断hystrix\">六、服务熔断Hystrix</h3>\r\n<h4 id=\"hystrix是什么\">1、Hystrix是什么</h4>\r\n<p>​\r\n在微服务架构中，我们是将一个<strong>单体应用拆分成多个服务单元</strong>，各个服务单元之间通过注册中心彼此发现和消费对方提供的服务，每个服务单元都是单独部署，在各自的服务进程中运行，服务之间通过远程调用实现信息交互，那么当某个服务的响应太慢或者故障，又或者因为网络波动或故障，则会造成调用者延迟或调用失败，当大量请求到达，则会造成请求的堆积，导致调用者的线程挂起，从而引发调用者也无法响应，调用者也发生故障。</p>\r\n<p>EG：电商中的用户下订单，我们有两个服务，一个下订单服务，一个减库存服务，当用户下订单时调用下订单服务，然后下订单服务又调用减库存服务，如果减库存服务响应延迟或者没有响应，则会造成下订单服务的线程挂起等待，如果大量的用户请求下订单，或导致大量的请求堆积，引起下订单服务也不可用，如果还有另外一个服务依赖于订单服务，比如用户服务，它需要查询用户订单，那么用户服务查询订单也会引起大量的延迟和请求堆积，导致用户服务也不可用。</p>\r\n<p>所以在微服务架构中，很容易造成服务故障的蔓延，引发整个微服务系统瘫痪不可用。为了解决此问题，微服务架构中引入了一种叫熔断器的服务保护机制。</p>\r\n<p>微服务架构中的熔断器，就是<strong>当被调用方没有响应，调用方直接返回一个错误响应即可，而不是长时间的等待</strong>，这样避免调用时因为等待而线程一直得不到释放，避免故障在分布式系统间蔓延；</p>\r\n<p>用法：</p>\r\n<ol type=\"1\">\r\n<li>异常熔断</li>\r\n<li>超时熔断</li>\r\n<li>Hystrix的服务降级</li>\r\n<li>Hystrix的异常处理</li>\r\n<li>异常忽略</li>\r\n<li>自定义熔断处理</li>\r\n</ol>\r\n<p>3.Hystrix的服务降级</p>\r\n<p>有了服务的熔断，随之就会有服务的降级，所谓服务降级，就是当某个服务熔断之后，服务端提供的服务将不再被调用，此时由客户端自己准备一个本地的fallback回调，返回一个默认值来代表服务端的返回；</p>\r\n<p>这种做法，虽然不能得到正确的返回结果，但至少保证了服务的可用，比直接抛出错误或服务不可用要好很多，当然这需要根据具体的业务场景来选择；</p>\r\n<p>6.自定义熔断处理</p>\r\n<p>我们也可以自定义类继承自HystrixCommand来实现自定义的Hystrix请求，在getFallback方法中调用getExecutionException方法来获取服务抛出的异常，这种熔断主要针对于远程服务的异常处理。</p>\r\n<h3 id=\"七声明式服务消费feign\">七、声明式服务消费Feign</h3>\r\n<h4 id=\"fegin介绍\">1、Fegin介绍</h4>\r\n<p>Feign是Netflix公司开发的一个声明式的<strong>REST调用客户端</strong>；</p>\r\n<p>Ribbon负载均衡、Hystrix服务熔断是我们Spring\r\nCloud中进行微服务开发非常基础的组件，在使用的过程中我们也发现它们一般都是同时出现的，而且配置也都非常相似，每次开发都有很多相同的代码，<strong>因此Spring\r\nCloud基于Netflix\r\nFeign整合了Ribbon和Hystrix两个组件</strong>，让我们的开发工作变得更加简单，就像Spring\r\nBoot是对Spring+SpringMVC的简化一样，Spring Cloud\r\nFeign对Ribbon负载均衡、Hystrix服务熔断进行简化，在其基础上进行了进一步的封装，不仅在配置上大大简化了开发工作，同时还提供了一种声明式的Web服务客户端定义方式；</p>\r\n<h1 id=\"nacos\">----02-Nacos</h1>\r\n<h3 id=\"一springcloudalibab简介\">一、springCloudAlibab简介</h3>\r\n<p>Spring Cloud Alibaba\r\n是阿里巴巴提供的微服务开发一站式解决方案，是<strong>阿里巴巴开源中间件与\r\nSpring Cloud 体系的融合</strong>。</p>\r\n<p>同 Spring Cloud 一样，Spring Cloud Alibaba\r\n也是一套微服务解决方案，包含开发分布式应用微服务的必需组件，方便开发者通过\r\nSpring Cloud 编程模型轻松使用这些组件来开发分布式应用服务。</p>\r\n<p>依托 Spring Cloud Alibaba，您只需要添加一些注解和少量配置，就可以将\r\nSpring Cloud\r\n应用接入阿里微服务解决方案，通过阿里中间件来迅速搭建分布式应用系统。</p>\r\n<p>作为 Spring Cloud 体系下的新实现，Spring Cloud Alibaba\r\n跟官方的组件或其它的第三方实现如 Netflix, Consul，Zookeeper\r\n等对比，具备了更多的功能:</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\image-20240507094612394.png\"\r\nalt=\"image-20240507094612394\" />\r\n<figcaption aria-hidden=\"true\">image-20240507094612394</figcaption>\r\n</figure>\r\n<p>https://spring-cloud-alibaba-group.github.io/github-pages/hoxton/en-us/index.html</p>\r\n<h3 id=\"二nacos\">二、Nacos</h3>\r\n<h4 id=\"什么是nacos\">1、什么是nacos</h4>\r\n<p>https://nacos.io/zh-cn/docs/what-is-nacos.html</p>\r\n<p>Nacos 致力于帮助您发现、配置和管理微服务。Nacos\r\n提供了一组简单易用的特性集，帮助您快速实现动态服务发现、服务配置、服务元数据及流量管理。</p>\r\n<p>Nacos 帮助您更敏捷和容易地构建、交付和管理微服务平台。 Nacos\r\n是构建以“服务”为中心的现代应用架构 (例如微服务范式、云原生范式)\r\n的服务基础设施。</p>\r\n<h4 id=\"使用-1\">2、使用</h4>\r\n<ol type=\"1\">\r\n<li>Nacos下载和安装</li>\r\n<li>服务注册和发现</li>\r\n<li>分布式配置中心</li>\r\n<li>数据持久化\r\n<ol type=\"1\">\r\n<li>配置数据源（数据库-表）</li>\r\n</ol></li>\r\n<li>Nacos集群配置</li>\r\n</ol>\r\n<h1 id=\"sentinel\">----03-Sentinel</h1>\r\n<h3 id=\"一sentinel\">一、Sentinel</h3>\r\n<h4 id=\"sentinel是什么\">1、Sentinel是什么</h4>\r\n<p>随着微服务的流行，服务和服务之间的稳定性变得越来越重要。</p>\r\n<p>Sentinel\r\n:以流量为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。</p>\r\n<p>主要特征：</p>\r\n<ol type=\"1\">\r\n<li><strong>丰富的应用场景</strong></li>\r\n<li><strong>完备的实时监控</strong></li>\r\n<li><strong>广泛的开源生态</strong></li>\r\n<li><strong>完善的 SPI 扩展机制</strong></li>\r\n</ol>\r\n<p>主要特性：</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\image-20240507095123148.png\"\r\nalt=\"image-20240507095123148\" />\r\n<figcaption aria-hidden=\"true\">image-20240507095123148</figcaption>\r\n</figure>\r\n<h4 id=\"主要功能\">2、主要功能</h4>\r\n<p>1、流量控制</p>\r\n<p>​ <strong>流量控制</strong>（flow control），其原理是监控应用流量的\r\nQPS\r\n或并发线程数等指标，当达到指定的阈值时对流量进行控制，以避免被瞬时的流量高峰冲垮，从而保障应用的高可用性。</p>\r\n<p>2、熔断降级</p>\r\n<p>​\r\n除了流量控制以外，对调用链路中不稳定的资源进行熔断降级也是保障高可用的重要措施之一。一个服务常常会调用别的模块，可能是另外的一个远程服务、数据库，或者第三方\r\nAPI 等。例如，支付的时候，可能需要远程调用银联提供的\r\nAPI；查询某个商品的价格，可能需要进行数据库查询。然而，这个被依赖服务的稳定性是不能保证的。如果依赖的服务出现了不稳定的情况，请求的响应时间变长，那么调用服务的方法的响应时间也会变长，线程会产生堆积，最终可能耗尽业务自身的线程池，服务本身也变得不可用。</p>\r\n<p>3、热点参数限流</p>\r\n<p>​\r\n何为热点？热点即经常访问的数据。很多时候我们希望统计某个热点数据中访问频次最高的\r\nTop K 数据，并对其访问进行限制。比如：</p>\r\n<ul>\r\n<li>商品 ID 为参数，统计一段时间内最常购买的商品 ID 并进行限制</li>\r\n<li>用户 ID 为参数，针对一段时间内频繁访问的用户 ID 进行限制</li>\r\n</ul>\r\n<p>热点参数限流会统计传入参数中的热点参数，并根据配置的限流阈值与模式，对包含热点参数的资源调用进行限流。热点参数限流可以看做是一种特殊的流量控制，仅对包含热点参数的资源调用生效。</p>\r\n<p>4、黑白名单控制</p>\r\n<p>​\r\n很多时候，我们需要根据调用来源来判断该次请求是否允许放行，这时候可以使用\r\nSentinel\r\n的来源访问控制（黑白名单控制）的功能。来源访问控制根据资源的请求来源（origin）限制资源是否通过，若配置白名单则只有请求来源位于白名单内时才可通过；若配置黑名单则请求来源位于黑名单时不通过，其余的请求通过。</p>\r\n<p>5、系统自适应限流</p>\r\n<p>​ 系统保护规则是从应用级别的入口流量进行控制，从单台机器的 load、CPU\r\n使用率、平均 RT、入口 QPS\r\n和并发线程数等几个维度监控应用指标，让系统尽可能跑在最大吞吐量的同时保证系统整体的稳定性。</p>\r\n<p>系统保护规则是应用整体维度的，而不是资源维度的，并且<strong>仅对入口流量生效</strong>。入口流量指的是进入应用的流量（EntryType.IN），比如\r\nWeb 服务或 Dubbo 服务端接收的请求，都属于入口流量。</p>\r\n<h1 id=\"gateway\">---04-GateWay</h1>\r\n<h3 id=\"一认识gateway\">一、认识GateWay</h3>\r\n<h4 id=\"spring-cloud的gateway\">1、 Spring Cloud的Gateway</h4>\r\n<p>1、Spring Cloud的Gateway是什么</p>\r\n<p>首先来看一个微服务架构图：</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\image-20240507095522777.png\"\r\nalt=\"image-20240507095522777\" />\r\n<figcaption aria-hidden=\"true\">image-20240507095522777</figcaption>\r\n</figure>\r\n<p>在上面的架构图中，我们的服务包括：内部服务Service A和内部服务Service\r\nB，这两个服务都是集群部署，每个服务部署了3个实例，他们都会通过Eureka\r\nServer注册中心注册与订阅服务，而Open\r\nService是一个对外的服务，也是集群部署，外部调用方通过负载均衡设备调用Open\r\nService服务，比如负载均衡使用Nginx，这样的实现是否合理，或者是否有更好的实现方式呢？接下来我们主要围绕该问题展开讨论。</p>\r\n<p>1、如果我们的微服务中有很多个独立服务都要对外提供服务，那么我们要如何去管理这些接口？特别是当项目非常庞大的情况下要如何管理？</p>\r\n<p>2、在微服务中，一个独立的系统被拆分成了很多个独立的服务，为了确保安全，权限管理也是一个不可回避的问题，如果在每一个服务上都添加上相同的权限验证代码来确保系统不被非法访问，那么工作量也就太大了，而且维护也非常不方便。</p>\r\n<p>为了解决上述问题，微服务架构中提出了API网关的概念，它就像一个安检站一样，所有外部的请求都需要经过它的调度与过滤，然后API网关来实现请求路由、负载均衡、权限验证等功能；</p>\r\n<p>那么Spring Cloud这个一站式的微服务开发框架基于Netflix\r\nZuul实现了Spring Cloud Zuul，采用Spring Cloud\r\nZuul即可实现一套API网关服务。</p>\r\n<p>2、Spring Cloud Gateway简介</p>\r\n<p><strong>你们项目里面 用的什么网关？ gateway zuul</strong></p>\r\n<p>它是Spring\r\nCloud<strong>官方</strong>提供的用来取代<strong>zuul（netflix）</strong>的新一代网关组件</p>\r\n<p>（zuul：1.0 , 2.0\r\n，zuul的本质，<strong>一组过滤器，根据自定义的过滤器顺序来执行，本质就是web组件</strong>）</p>\r\n<p>Zuul1.0 使用的是BIO（Blocking IO） tomcat7.0以前都是BIO 性能一般</p>\r\n<p>Zuul2.0 性能好NIO</p>\r\n<p>它基于spring5.x，springboot2.x和ProjectReactor等技术。</p>\r\n<p>它的目地是让<strong>路由更加简单，灵活，还提供了一些强大的过滤器功能</strong>，例如：熔断、限流、重试,自义定过滤器等\r\ntoken校验ip黑名单等</p>\r\n<p>SpringCloud Gateway作为Spring\r\nCloud生态的网关，目标是替代Zuul，在SpringCloud2.0以上的版本中，没有对新版本的zuul2.0以上的最新高性能版本进行集成，仍然还是使用的zuul1.x[可以看项目依赖找到]非Reactor模式的老版本。而为了提升网关的性能，SpringCloud\r\nGateway是基于webFlux\r\n框架实现的，而webFlux框架底层则使用了高性能的Reactor模式通信框架的Netty</p>\r\n<p>NIO(非阻塞式io) BIO 你只需要了解网关能做什么？ 网关里面写什么代码\r\n就可以了</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\image-20240507095601997.png\"\r\nalt=\"image-20240507095601997\" />\r\n<figcaption aria-hidden=\"true\">image-20240507095601997</figcaption>\r\n</figure>\r\n<p>3、工作流程</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\image-20240507095704824.png\"\r\nalt=\"image-20240507095704824\" />\r\n<figcaption aria-hidden=\"true\">image-20240507095704824</figcaption>\r\n</figure>\r\n<p>客户端向springcloud Gateway 发出请求</p>\r\n<p>然后在 Gateway Handler Mapping 中找到与请求相匹配的路由，将其发送到\r\nGateway Web Handler。</p>\r\n<p>Handler\r\n再通过指定的过滤器来将请求发送到我们实际的服务的业务逻辑，然后返回。</p>\r\n<p>过滤器之间用虚线分开是因为过滤器可能会在发送请求之前【pre】或之后【post】执行业务逻辑，对其进行加强或处理。</p>\r\n<p>Filter在 【pre】\r\n类型的过滤器可以做参数校验、权限校验、流量监控、日志输出、协议转换等</p>\r\n<p>在【post】\r\n类型的过滤器中可以做响应内容、响应头的修改、日志的输出，流量监控等有着非常重要的作用。</p>\r\n<p><strong>总结：Gateway 的核心逻辑也就是 路由转发 +\r\n执行过滤器链</strong></p>\r\n<p>4、三大核心概念</p>\r\n<p><strong>Route（路由）</strong></p>\r\n<p>路由信息的组成：</p>\r\n<p>由一个ID、一个目的URL、一组断言工厂、一组Filter组成。</p>\r\n<p>如果路由断言为真，说明请求URL和配置路由匹配。</p>\r\n<p><strong>Predicate（断言）</strong></p>\r\n<p>Java 8中的断言函数。 lambda 四大接口\r\n供给形，消费性，函数型，断言型</p>\r\n<p>Spring Cloud Gateway中的断言函数输入类型是Spring\r\n5.0框架中的ServerWebExchange。Spring Cloud\r\nGateway的断言函数允许开发者去定义匹配来自于Http\r\nRequest中的任何信息比如请求头和参数。</p>\r\n<p><strong>Filter（过滤）</strong></p>\r\n<p>一个标准的Spring WebFilter。 Web三大组件(servlet listener filter) mvc\r\ninterceptor</p>\r\n<p>Spring Cloud Gateway中的Filter分为两种类型的Filter，分别是Gateway\r\nFilter和Global Filter。过滤器Filter将会对请求和响应进行修改处理。</p>\r\n<p>一个是针对某一个路由的filter 对某一个接口做限流</p>\r\n<p>一个是针对全局的filter token ip黑名单</p>\r\n<h1 id=\"rocketmq\">---05-RocketMQ</h1>\r\n<h3 id=\"一rocketmq概述\">一、RocketMQ概述</h3>\r\n<h4 id=\"什么是消息队列\">1、什么是消息队列</h4>\r\n<h4 id=\"为什么要使用消息队列\">2、为什么要使用消息队列</h4>\r\n<h4 id=\"rocketmq基本概念16条\">3、RocketMQ基本概念（16条）</h4>\r\n<ol type=\"1\">\r\n<li><p>消息模型（Message Model）</p>\r\n<p>​ RocketMQ主要由 Producer、Broker、Consumer 三部分组成，其中Producer\r\n负责生产消息，Consumer 负责消费消息，Broker 负责存储消息。Broker\r\n在实际部署过程中对应一台服务器，每个 Broker\r\n可以存储多个Topic的消息，每个Topic的消息也可以分片存储于不同的\r\nBroker。Message Queue\r\n用于存储消息的物理地址，每个Topic中的消息地址存储于多个 Message Queue\r\n中。ConsumerGroup 由多个Consumer 实例构成。</p></li>\r\n<li><p>消息生产者（Producer）</p>\r\n<p>​\r\n负责生产消息，一般由业务系统负责生产消息。一个消息生产者会把业务应用系统里产生的消息发送到broker服务器。RocketMQ提供多种发送方式，同步发送、异步发送、顺序发送、单向发送。同步和异步方式均需要Broker返回确认信息，单向发送不需要。</p></li>\r\n<li><p>消息消费者（Consumer）</p>\r\n<p>​\r\n负责消费消息，一般是后台系统负责异步消费。一个消息消费者会从Broker服务器拉取消息、并将其提供给应用程序。从用户应用的角度而言提供了两种消费形式：拉取式消费、推动式消费。</p></li>\r\n<li><p>主题（Topic）</p>\r\n<p>​\r\n表示一类消息的集合，每个主题包含若干条消息，每条消息只能属于一个主题，是RocketMQ进行消息订阅的基本单位。</p></li>\r\n<li><p>代理服务器（Broker Server）</p>\r\n<p>​\r\n消息中转角色，负责存储消息、转发消息。代理服务器在RocketMQ系统中负责接收从生产者发送来的消息并存储、同时为消费者的拉取请求作准备。代理服务器也存储消息相关的元数据，包括消费者组、消费进度偏移和主题和队列消息等。</p></li>\r\n<li><p>名字服务（Name Server）</p>\r\n<p>​\r\n名称服务充当路由消息的提供者。生产者或消费者能够通过名字服务查找各主题相应的Broker\r\nIP列表。多个Namesrv实例组成集群，但相互独立，没有信息交换。</p></li>\r\n<li><p>拉取式消费（Pull Consumer）</p>\r\n<p>​\r\nConsumer消费的一种类型，应用通常主动调用Consumer的拉消息方法从Broker服务器拉消息、主动权由应用控制。一旦获取了批量消息，应用就会启动消费过程。</p></li>\r\n<li><p>推动式消费（Push Consumer）</p>\r\n<p>​\r\nConsumer消费的一种类型，该模式下Broker收到数据后会主动推送给消费端，该消费模式一般实时性较高。</p></li>\r\n<li><p>生产者组（Producer Group）</p>\r\n<p>​\r\n同一类Producer的集合，这类Producer发送<strong>同一类消息且发送逻辑一致</strong>。如果发送的是事务消息且原始生产者在发送之后崩溃，则Broker服务器会联系同一生产者组的其他生产者实例以提交或回溯消费。</p></li>\r\n<li><p>消费者组（Consumer Group）</p>\r\n<p>​\r\n同一类Consumer的集合，这类Consumer通常<strong>消费同一类消息且消费逻辑一致</strong>。消费者组使得在消息消费方面，实现负载均衡和容错的目标变得非常容易。要注意的是，<strong>消费者组的消费者实例必须订阅完全相同的Topic</strong>。RocketMQ\r\n支持两种消息模式：集群消费（Clustering）和广播消费（Broadcasting）。</p></li>\r\n<li><p>集群消费（Clustering）</p>\r\n<p>​ 集群消费模式下,相同Consumer\r\nGroup的每个Consumer实例平均分摊消息。</p></li>\r\n<li><p>广播消费（Broadcasting）</p>\r\n<p>​ 广播消费模式下，相同Consumer\r\nGroup的每个Consumer实例都接收全量的消息。</p></li>\r\n<li><p>普通顺序消息（Normal Ordered Message）</p>\r\n<p>​ 普通顺序消费模式下，消费者通过同一个消息队列（ Topic 分区，称作\r\nMessage Queue）\r\n收到的消息是有顺序的，不同消息队列收到的消息则可能是无顺序的。</p></li>\r\n<li><p>严格顺序消息（Strictly Ordered Message）</p>\r\n<p>​ 严格顺序消息模式下，消费者收到的所有消息均是有顺序的。</p></li>\r\n<li><p>消息（Message）</p>\r\n<p>​\r\n消息系统所传输信息的物理载体，生产和消费数据的最小单位，每条消息必须属于一个主题。RocketMQ中每个消息拥有唯一的Message\r\nID，且可以携带具有业务标识的Key。系统提供了通过Message\r\nID和Key查询消息的功能。</p></li>\r\n<li><p>标签（Tag）</p>\r\n<p>​\r\n为消息设置的标志，用于同一主题下区分不同类型的消息。来自同一业务单元的消息，可以根据不同业务目的在同一主题下设置不同标签。标签能够有效地保持代码的清晰度和连贯性，并优化RocketMQ提供的查询系统。消费者可以根据Tag实现对不同子主题的不同消费逻辑，实现更好的扩展性。</p></li>\r\n</ol>\r\n<h4 id=\"rocketmq特性\">4、RocketMQ特性</h4>\r\n<ol type=\"1\">\r\n<li><p>订阅与发布</p>\r\n<p>​\r\n消息的发布是指某个生产者向某个topic发送消息；消息的订阅是指某个消费者关注了某个topic中带有某些tag的消息，进而从该topic消费数据。</p></li>\r\n<li><p>消息顺序</p>\r\n<p>​\r\n消息有序指的是一类消息消费时，能按照发送的顺序来消费。例如：一个订单产生了三条消息分别是订单创建、订单付款、订单完成。消费时要按照这个顺序消费才能有意义，但是同时订单之间是可以并行消费的。RocketMQ可以严格的保证消息有序。</p>\r\n<p>顺序消息分为<strong>全局顺序消息</strong>与<strong>分区顺序消息</strong>，全局顺序是指某个Topic下的所有消息都要保证顺序；部分顺序消息只要保证每一组消息被顺序消费即可。</p>\r\n<ul>\r\n<li>全局顺序 对于指定的一个\r\nTopic，所有消息按照严格的先入先出（FIFO）的顺序进行发布和消费。\r\n适用场景：性能要求不高，所有的消息严格按照 FIFO\r\n原则进行消息发布和消费的场景</li>\r\n<li>分区顺序 对于指定的一个 Topic，所有消息根据 sharding key\r\n进行区块分区。 同一个分区内的消息按照严格的 FIFO 顺序进行发布和消费。\r\nSharding key 是顺序消息中用来区分不同分区的关键字段，和普通消息的 Key\r\n是完全不同的概念。 适用场景：性能要求高，以 sharding key\r\n作为分区字段，在同一个区块中严格的按照 FIFO\r\n原则进行消息发布和消费的场景。</li>\r\n</ul></li>\r\n<li><p>消息过滤</p>\r\n<p>​\r\nRocketMQ的<strong>消费者可以根据Tag进行消息过滤</strong>，也支持<strong>自定义属性过滤</strong>。消息过滤目前是在Broker端实现的，优点是减少了对于Consumer无用消息的网络传输，缺点是增加了Broker的负担、而且实现相对复杂。</p></li>\r\n<li><p>消息可靠性</p>\r\n<p>​ RocketMQ支持消息的高可靠，影响消息可靠性的几种情况：</p>\r\n<ol type=\"1\">\r\n<li>Broker非正常关闭</li>\r\n<li>Broker异常Crash</li>\r\n<li>OS Crash</li>\r\n<li>机器掉电，但是能立即恢复供电情况</li>\r\n<li>机器无法开机（可能是cpu、主板、内存等关键设备损坏）</li>\r\n<li>磁盘设备损坏</li>\r\n</ol>\r\n<p>1)、2)、3)、4)\r\n四种情况都属于硬件资源可立即恢复情况，RocketMQ在这四种情况下能保证消息不丢，或者丢失少量数据（依赖刷盘方式是同步还是异步）。</p>\r\n<p>5)、6)属于单点故障，且无法恢复，一旦发生，在此单点上的消息全部丢失。RocketMQ在这两种情况下，通过异步复制，可保证99%的消息不丢，但是仍然会有极少量的消息可能丢失。通过同步双写技术可以完全避免单点，同步双写势必会影响性能，适合对消息可靠性要求极高的场合，例如与Money相关的应用。注：RocketMQ从3.0版本开始支持同步双写。</p></li>\r\n<li><p>至少一次</p>\r\n<p>​ 至少一次(At least\r\nOnce)指每个消息必须投递一次。Consumer先Pull消息到本地，消费完成后，才向服务器返回ack，如果没有消费一定不会ack消息，所以RocketMQ可以很好的支持此特性。</p></li>\r\n<li><p>回溯消费</p>\r\n<p>​\r\n回溯消费是指Consumer已经消费成功的消息，由于业务上需求需要重新消费，要支持此功能，Broker在向Consumer投递成功消息后，消息仍然需要保留。并且重新消费一般是按照时间维度，例如由于Consumer系统故障，恢复后需要重新消费1小时前的数据，那么Broker要提供一种机制，可以按照时间维度来回退消费进度。RocketMQ支持按照时间回溯消费，时间维度精确到毫秒。</p></li>\r\n<li><p>事务消息</p>\r\n<p>​ RocketMQ事务消息（Transactional\r\nMessage）是<strong>指应用本地事务和发送消息操作可以被定义到全局事务中，要么同时成功，要么同时失败。</strong>RocketMQ的事务消息提供类似\r\nX/Open XA\r\n的分布事务功能，通过事务消息能达到分布式事务的最终一致。</p></li>\r\n<li><p>定时消息</p>\r\n<p>​\r\n定时消息（延迟队列）是指消息发送到broker后，不会立即被消费，等待特定时间投递给真正的topic。\r\nbroker有配置项messageDelayLevel，默认值为“1s 5s 10s 30s 1m 2m 3m 4m 5m\r\n6m 7m 8m 9m 10m 20m 30m 1h\r\n2h”，18个level。可以配置自定义messageDelayLevel。注意，messageDelayLevel是broker的属性，不属于某个topic。发消息时，设置delayLevel等级即可：msg.setDelayLevel(level)。level有以下三种情况：</p>\r\n<ul>\r\n<li>level == 0，消息为非延迟消息</li>\r\n<li>1&lt;=level&lt;=maxLevel，消息延迟特定时间，例如level==1，延迟1s</li>\r\n<li>level &gt; maxLevel，则level== maxLevel，例如level==20，延迟2h</li>\r\n</ul>\r\n<p>定时消息会暂存在名为SCHEDULE_TOPIC_XXXX的topic中，并根据delayTimeLevel存入特定的queue，queueId\r\n= delayTimeLevel –\r\n1，即一个queue只存相同延迟的消息，保证具有相同发送延迟的消息能够顺序消费。broker会调度地消费SCHEDULE_TOPIC_XXXX，将消息写入真实的topic。</p>\r\n<p>需要注意的是，定时消息会在第一次写入和调度写入真实topic时都会计数，因此发送数量、tps都会变高。</p></li>\r\n<li><p>消息重试</p>\r\n<p>​\r\nConsumer消费消息失败后，要提供一种重试机制，令消息再消费一次。Consumer消费消息失败通常可以认为有以下几种情况：</p>\r\n<ul>\r\n<li>由于消息本身的原因，例如反序列化失败，消息数据本身无法处理（例如话费充值，当前消息的手机号被注销，无法充值）等。这种错误通常需要跳过这条消息，再消费其它消息，而这条失败的消息即使立刻重试消费，99%也不成功，所以最好提供一种定时重试机制，即过10秒后再重试。</li>\r\n<li>由于依赖的下游应用服务不可用，例如db连接不可用，外系统网络不可达等。遇到这种错误，即使跳过当前失败的消息，消费其他消息同样也会报错。这种情况建议应用sleep\r\n30s，再消费下一条消息，这样可以减轻Broker重试消息的压力。</li>\r\n</ul>\r\n<p>RocketMQ会为每个消费组都设置一个Topic名称为“%RETRY%+consumerGroup”的重试队列（这里需要注意的是，这个Topic的重试队列是针对消费组，而不是针对每个Topic设置的），用于暂时保存因为各种异常而导致Consumer端无法消费的消息。考虑到异常恢复起来需要一些时间，会为重试队列设置多个重试级别，每个重试级别都有与之对应的重新投递延时，重试次数越多投递延时就越大。RocketMQ对于重试消息的处理是先保存至Topic名称为“SCHEDULE_TOPIC_XXXX”的延迟队列中，后台定时任务按照对应的时间进行Delay后重新保存至“%RETRY%+consumerGroup”的重试队列中。</p></li>\r\n<li><p>消息重投</p>\r\n<p>​\r\n生产者在发送消息时，同步消息失败会重投，异步消息有重试，oneway没有任何保证。<strong>消息重投保证消息尽可能发送成功、不丢失，但可能会造成消息重复，消息重复在RocketMQ中是无法避免的问题。</strong>消息重复在一般情况下不会发生，当出现消息量大、网络抖动，消息重复就会是大概率事件。另外，生产者主动重发、consumer负载变化也会导致重复消息。如下方法可以设置消息重试策略：</p>\r\n<ul>\r\n<li>retryTimesWhenSendFailed:同步发送失败重投次数，默认为2，因此生产者会最多尝试发送retryTimesWhenSendFailed\r\n+\r\n1次。不会选择上次失败的broker，尝试向其他broker发送，最大程度保证消息不丢。超过重投次数，抛出异常，由客户端保证消息不丢。当出现RemotingException、MQClientException和部分MQBrokerException时会重投。</li>\r\n<li>retryTimesWhenSendAsyncFailed:异步发送失败重试次数，异步重试不会选择其他broker，仅在同一个broker上做重试，不保证消息不丢。</li>\r\n<li>retryAnotherBrokerWhenNotStoreOK:消息刷盘（主或备）超时或slave不可用（返回状态非SEND_OK），是否尝试发送到其他broker，默认false。十分重要消息可以开启。</li>\r\n</ul></li>\r\n<li><p>流量控制</p>\r\n<p>​\r\n生产者流控，因为broker处理能力达到瓶颈；消费者流控，因为消费能力达到瓶颈。</p>\r\n<p>生产者流控：</p>\r\n<ul>\r\n<li>commitLog文件被锁时间超过osPageCacheBusyTimeOutMills时，参数默认为1000ms，返回流控。</li>\r\n<li>如果开启transientStorePoolEnable ==\r\ntrue，且broker为异步刷盘的主机，且transientStorePool中资源不足，拒绝当前send请求，返回流控。</li>\r\n<li>broker每隔10ms检查send请求队列头部请求的等待时间，如果超过waitTimeMillsInSendQueue，默认200ms，拒绝当前send请求，返回流控。</li>\r\n<li>broker通过拒绝send 请求方式实现流量控制。</li>\r\n</ul>\r\n<p>注意，生产者流控，不会尝试消息重投。</p>\r\n<p>消费者流控：</p>\r\n<ul>\r\n<li>消费者本地缓存消息数超过pullThresholdForQueue时，默认1000。</li>\r\n<li>消费者本地缓存消息大小超过pullThresholdSizeForQueue时，默认100MB。</li>\r\n<li>消费者本地缓存消息跨度超过consumeConcurrentlyMaxSpan时，默认2000。</li>\r\n</ul>\r\n<p>消费者流控的结果是降低拉取频率。</p></li>\r\n<li><p>死信队列</p>\r\n<p>​\r\n死信队列用于<strong>处理无法被正常消费的消息</strong>。当一条消息初次消费失败，消息队列会自动进行消息重试；达到最大重试次数后，若消费依然失败，则表明消费者在正常情况下无法正确地消费该消息，此时，消息队列\r\n不会立刻将消息丢弃，而是将其发送到该消费者对应的特殊队列中。</p>\r\n<p>RocketMQ将这种正常情况下无法被消费的消息称为死信消息（Dead-Letter\r\nMessage），将存储死信消息的特殊队列称为死信队列（Dead-Letter\r\nQueue）。在RocketMQ中，可以通过使用console控制台对死信队列中的消息进行重发来使得消费者实例再次进行消费。</p></li>\r\n</ol>\r\n<h1 id=\"seata\">---06-Seata</h1>\r\n<h3 id=\"一分布式事务介绍\">一、分布式事务介绍</h3>\r\n<p>分布式事务是指事务的参与者、支持事务的服务器、资源服务器以及事务管理器分别位于不同的分布式系统的不同节点之上。</p>\r\n<p>例如订单服务添加订单后，需要调用远程商品服务完成减库存操作，这时如何确保添加订单和减少库存的2个SQL要么全部执行要么全部不执行？</p>\r\n<p>由于2个SQL写操作不在同一事务范围内，因此正常情况无法确保2个事务同时提交或同时回滚，这就会出现数据不一致的现象。这种情况就需要使用分布式事务框来解决这个问题。</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\image-20240507101415093.png\"\r\nalt=\"image-20240507101415093\" />\r\n<figcaption aria-hidden=\"true\">image-20240507101415093</figcaption>\r\n</figure>\r\n<h3 id=\"二seata介绍\">二、Seata介绍</h3>\r\n<p>Seata\r\n是一款开源的分布式事务解决方案，致力于提供高性能和简单易用的分布式事务服务。Seata\r\n将为用户提供了 AT、TCC、SAGA 和 XA\r\n事务模式，为用户打造一站式的分布式解决方案。</p>\r\n<p>官网地址<a\r\nhref=\"https://seata.io/zh-cn\">https://seata.io/zh-cn/</a></p>\r\n<h4 id=\"相关术语\">1、相关术语</h4>\r\n<p><strong>TC (Transaction Coordinator) -</strong>\r\n<strong>事务协调者</strong></p>\r\n<p>维护全局和分支事务的状态，驱动全局事务提交或回滚。</p>\r\n<p><strong>TM (Transaction Manager) -</strong>\r\n<strong>事务管理器</strong></p>\r\n<p>定义全局事务的范围：开始全局事务、提交或回滚全局事务。</p>\r\n<p><strong>RM (Resource Manager) -</strong>\r\n<strong>资源管理器</strong></p>\r\n<p>管理分支事务处理的资源，与TC交谈以注册分支事务和报告分支事务的状态，并驱动分支事务提交或回滚。</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\image-20240507101504277.png\"\r\nalt=\"image-20240507101504277\" />\r\n<figcaption aria-hidden=\"true\">image-20240507101504277</figcaption>\r\n</figure>\r\n<h4 id=\"at模式\">2、AT模式</h4>\r\n<p>1、前提</p>\r\n<ul>\r\n<li>基于支持本地 ACID 事务的关系型数据库。</li>\r\n<li>Java 应用，通过 JDBC 访问数据库。</li>\r\n</ul>\r\n<p>2、整体机制</p>\r\n<p>两阶段提交协议：</p>\r\n<p>一阶段：业务数据和回滚日志记录在同一个本地事务中提交，释放本地锁和连接资源。</p>\r\n<p>二阶段：</p>\r\n<ul>\r\n<li><ul>\r\n<li>提交异步化，非常快速地完成。</li>\r\n<li>回滚通过一阶段的回滚日志进行反向补偿。</li>\r\n</ul></li>\r\n</ul>\r\n<p>3、写隔离</p>\r\n<ul>\r\n<li>一阶段本地事务提交前，需要确保先拿到 <strong>全局锁</strong> 。</li>\r\n<li>拿不到 <strong>全局锁</strong> ，不能提交本地事务。</li>\r\n<li>拿 <strong>全局锁</strong>\r\n的尝试被限制在一定范围内，超出范围将放弃，并回滚本地事务，释放本地锁。</li>\r\n</ul>\r\n<p>以一个示例来说明：</p>\r\n<p>两个全局事务 tx1 和 tx2，分别对 a 表的 m 字段进行更新操作，m 的初始值\r\n1000。</p>\r\n<p>tx1 先开始，开启本地事务，拿到本地锁，更新操作 m = 1000 - 100 =\r\n900。本地事务提交前，先拿到该记录的 <strong>全局锁</strong>\r\n，本地提交释放本地锁。 tx2 后开始，开启本地事务，拿到本地锁，更新操作 m\r\n= 900 - 100 = 800。本地事务提交前，尝试拿该记录的\r\n<strong>全局锁</strong> ，tx1 全局提交前，该记录的全局锁被 tx1 持有，tx2\r\n需要重试等待 <strong>全局锁</strong> 。</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\image-20240507101742335.png\"\r\nalt=\"image-20240507101742335\" />\r\n<figcaption aria-hidden=\"true\">image-20240507101742335</figcaption>\r\n</figure>\r\n<p>tx1 二阶段全局提交，释放 <strong>全局锁</strong> 。tx2 拿到\r\n<strong>全局锁</strong> 提交本地事务。</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\image-20240507101755671.png\"\r\nalt=\"image-20240507101755671\" />\r\n<figcaption aria-hidden=\"true\">image-20240507101755671</figcaption>\r\n</figure>\r\n<p>如果 tx1 的二阶段全局回滚，则 tx1\r\n需要重新获取该数据的本地锁，进行反向补偿的更新操作，实现分支的回滚。</p>\r\n<p>此时，如果 tx2 仍在等待该数据的\r\n<strong>全局锁</strong>，同时持有本地锁，则 tx1\r\n的分支回滚会失败。分支的回滚会一直重试，直到 tx2 的\r\n<strong>全局锁</strong> 等锁超时，放弃 <strong>全局锁</strong>\r\n并回滚本地事务释放本地锁，tx1 的分支回滚最终成功。</p>\r\n<p>因为整个过程 <strong>全局锁</strong> 在 tx1 结束前一直是被 tx1\r\n持有的，所以不会发生 <strong>脏写</strong> 的问题。</p>\r\n<p>4、读隔离</p>\r\n<p>在数据库本地事务隔离级别 <strong>读已提交（Read Committed）</strong>\r\n或以上的基础上，Seata（AT 模式）的默认全局隔离级别是\r\n<strong>读未提交（Read Uncommitted）</strong> 。</p>\r\n<p>如果应用在特定场景下，必需要求全局的 <strong>读已提交</strong> ，目前\r\nSeata 的方式是通过 SELECT FOR UPDATE 语句的代理。</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\image-20240507101813112.png\"\r\nalt=\"image-20240507101813112\" />\r\n<figcaption aria-hidden=\"true\">image-20240507101813112</figcaption>\r\n</figure>\r\n<p>SELECT FOR UPDATE 语句的执行会申请 <strong>全局锁</strong> ，如果\r\n<strong>全局锁</strong> 被其他事务持有，则释放本地锁（回滚 SELECT FOR\r\nUPDATE 语句的本地执行）并重试。这个过程中，查询是被 block 住的，直到\r\n<strong>全局锁</strong> 拿到，即读取的相关数据是 <strong>已提交</strong>\r\n的，才返回。</p>\r\n<p>出于总体性能上的考虑，Seata 目前的方案并没有对所有 SELECT\r\n语句都进行代理，仅针对 FOR UPDATE 的 SELECT 语句。</p>\r\n<p>5、工作机制</p>\r\n<ul>\r\n<li><p>以一个示例来说明整个 AT 分支的工作过程。</p></li>\r\n<li><p>业务表：<code>product</code></p></li>\r\n<li><p>```</p>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- AT 事务的业务逻辑：</span><br><span class=\"line\"></span><br><span class=\"line\">- update` product `set` `name` = `&#x27;GTS&#x27;` `where` `name` = `&#x27;TXC&#x27;`;`</span><br><span class=\"line\"></span><br><span class=\"line\">- #### 1 一阶段</span><br><span class=\"line\"></span><br><span class=\"line\">- 过程：</span><br><span class=\"line\"></span><br><span class=\"line\">- \\1. 解析 SQL：得到 SQL 的类型（UPDATE），表（product），条件（where name = &#x27;TXC&#x27;）等相关的信息。</span><br><span class=\"line\"></span><br><span class=\"line\">- \\2. 查询前镜像：根据解析得到的条件信息，生成查询语句，定位数据。</span><br><span class=\"line\"></span><br><span class=\"line\">- select id, name, since from product where name = &#x27;TXC&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">- 得到前镜像：</span><br><span class=\"line\"></span><br><span class=\"line\">- `  ```</span><br><span class=\"line\"></span><br><span class=\"line\">- \\3. 执行业务 SQL：更新这条记录的 name 为 &#x27;GTS&#x27;。</span><br><span class=\"line\"></span><br><span class=\"line\">- \\4. 查询后镜像：根据前镜像的结果，通过 **主键** 定位数据。</span><br><span class=\"line\"></span><br><span class=\"line\">- ```</span><br><span class=\"line\">  select id, name, since from product where id = 1;</span><br></pre></td></tr></table></figure></li>\r\n<li><p>\\5. 插入回滚日志：把前后镜像数据以及业务 SQL\r\n相关的信息组成一条回滚日志记录，插入到 <code>UNDO_LOG</code>\r\n表中。</p></li>\r\n<li><p>`<code>&#123;</code> \"branchId\":\r\n641789253,<code>\"undoItems\": [&#123;</code> \"afterImage\":\r\n{<code>\"rows\": [&#123;</code> \"fields\": [{<code>\"name\": \"id\",</code> \"type\":\r\n4,<code>\"value\": 1</code> }, {<code>\"name\": \"name\",</code> \"type\":\r\n12,<code>\"value\": \"GTS\"</code> }, {<code>\"name\": \"since\",</code> \"type\":\r\n12,<code>\"value\": \"2014\"</code> }]<code>&#125;],</code> \"tableName\":\r\n\"product\"<code>&#125;,</code> \"beforeImage\": {<code>\"rows\": [&#123;</code>\r\n\"fields\": [{<code>\"name\": \"id\",</code> \"type\": 4,<code>\"value\": 1</code>\r\n}, {<code>\"name\": \"name\",</code> \"type\": 12,<code>\"value\": \"TXC\"</code>\r\n}, {<code>\"name\": \"since\",</code> \"type\":\r\n12,<code>\"value\": \"2014\"</code> }]<code>&#125;],</code> \"tableName\":\r\n\"product\"<code>&#125;,</code> \"sqlType\": \"UPDATE\"<code>&#125;],</code> \"xid\":\r\n\"xid:xxx\"``} <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- \\6. 提交前，向 TC 注册分支：申请 `product` 表中，主键值等于 1 的记录的 **全局锁** 。</span><br><span class=\"line\"></span><br><span class=\"line\">- \\7. 本地事务提交：业务数据的更新和前面步骤中生成的 UNDO LOG 一并提交。</span><br><span class=\"line\"></span><br><span class=\"line\">- \\8. 将本地事务提交的结果上报给 TC。</span><br><span class=\"line\"></span><br><span class=\"line\">- #### 2 二阶段-回滚</span><br><span class=\"line\"></span><br><span class=\"line\">- 1. 收到 TC 的分支回滚请求，开启一个本地事务，执行如下操作。</span><br><span class=\"line\">  2. 通过 XID 和 Branch ID 查找到相应的 UNDO LOG 记录。</span><br><span class=\"line\">  3. 数据校验：拿     UNDO LOG 中的后镜与当前数据进行比较，如果有不同，说明数据被当前全局事务之外的动作做了修改。这种情况，需要根据配置策略来做处理，详细的说明在另外的文档中介绍。</span><br><span class=\"line\">  4. 根据 UNDO     LOG 中的前镜像和业务 SQL 的相关信息生成并执行回滚的语句：</span><br><span class=\"line\"></span><br><span class=\"line\">- ```</span><br><span class=\"line\">          update product set name = &#x27;TXC&#x27; where id = 1;</span><br></pre></td></tr></table></figure></p></li>\r\n<li><ol type=\"1\">\r\n<li>提交本地事务。并把本地事务的执行结果（即分支事务回滚的结果）上报给\r\nTC</li>\r\n</ol></li>\r\n<li><h4 id=\"二阶段-提交\">3 二阶段-提交</h4></li>\r\n<li><ol type=\"1\">\r\n<li>收到 TC\r\n的分支提交请求，把请求放入一个异步任务的队列中，马上返回提交成功的结果给\r\nTC。</li>\r\n</ol></li>\r\n<li><p>异步任务阶段的分支提交请求将异步和批量地删除相应 UNDO LOG\r\n记录</p></li>\r\n</ul>\r\n<h4 id=\"tcc模式\">3、TCC模式</h4>\r\n<p>一个分布式的全局事务，整体是 <strong>两阶段提交</strong>\r\n的模型。全局事务是由若干分支事务组成的，分支事务要满足\r\n<strong>两阶段提交</strong>\r\n的模型要求，即需要每个分支事务都具备自己的：</p>\r\n<ul>\r\n<li>一阶段 prepare 行为</li>\r\n<li>二阶段 commit 或 rollback 行为</li>\r\n</ul>\r\n<h4 id=\"saga模式\">4、SAGA模式</h4>\r\n<p>Saga模式是SEATA提供的长事务解决方案，在Saga模式中，业务流程中每个参与者都提交本地事务，当出现某一个参与者失败则补偿前面已经成功的参与者，一阶段正向服务和二阶段补偿服务都由业务开发实现。</p>\r\n<h4 id=\"xa模式\">5、XA模式</h4>\r\n<p>前提</p>\r\n<ul>\r\n<li>支持XA 事务的数据库。</li>\r\n<li>Java 应用，通过 JDBC 访问数据库。</li>\r\n</ul>\r\n<p>整体机制</p>\r\n<p>在 Seata 定义的分布式事务框架内，利用事务资源（数据库、消息服务等）对\r\nXA 协议的支持，以 XA 协议的机制来管理分支事务的一种 事务模式。</p>\r\n<h1 id=\"sky-walking链式跟踪\">---07-Sky Walking链式跟踪</h1>\r\n<h3 id=\"一sky-walking简介\">一、Sky Walking简介</h3>\r\n<h4 id=\"主要功能-1\">1、主要功能</h4>\r\n<p>Sky Walking\r\n是针对<strong>分布式系统的APM（应用性能监控）系统</strong>，特别针对微服务、cloud\r\nnative 和容器化(Docker, Kubernetes, Mesos)架构，\r\n其核心是个<strong>分布式追踪系统</strong>。它通过探针自动收集所需的指标，且<strong>基于探针技术对应用零侵入零耦合</strong>。主要提供以下功能：</p>\r\n<p>\\1. 服务、服务实例和端点(如：单个HTTP URI）的性能指标分析</p>\r\n<p>\\2. 根本原因分析</p>\r\n<p>\\3. 服务拓扑图分析</p>\r\n<p>\\4. 服务和端点依赖分析</p>\r\n<p>\\5. 慢服务和慢端点检测</p>\r\n<p>\\6. 分布式追踪和上下文传播</p>\r\n<p>\\7. 告警</p>\r\n<h4 id=\"总体框架\">2、总体框架</h4>\r\n<p>\\1. collector：链路数据归集器，数据可以落地MySQL、Elastic\r\nSearch等</p>\r\n<p>\\2. agent：探针，使用Java\r\nagent做字节码植入，无侵入式的收集，并通过HTTP或者g\r\nRPC方式发送数据collector</p>\r\n<p>\\3. web ：web可视化平台，用来展示落地的数据</p>\r\n<h1 id=\"spring-security\">---08-Spring Security</h1>\r\n<h3 id=\"一认证授权的基础概念\">一、认证授权的基础概念</h3>\r\n<h4 id=\"什么是认证登录\">1、什么是认证（登录）</h4>\r\n<p>进入移动互联网时代，大家每天都在刷手机，常用的软件有微信、支付宝、头条等，下边拿微信来举例子说明认证相关的基本概念，在初次使用微信前需要注册成为微信用户，然后输入账号和密码即可登录微信，输入账号和密码登录微信的过程就是认证。</p>\r\n<p>系统为什么要认证？</p>\r\n<p>认证是为了保护系统的隐私数据与资源，用户的身份合法方可访问该系统的资源。</p>\r\n<p>认证\r\n：<strong>用户认证就是判断一个用户的身份是否合法的过程</strong>，用户去访问系统资源（url接口）时系统要求验证用户的身份信息，身份合法方可继续访问，不合法则拒绝访问。常见的用户身份认证方式有：用户名密码登录，二维码登录，手机短信登录，指纹认证等方式。</p>\r\n<p>user.getUserByUsername(“zhangsan”)</p>\r\n<h4 id=\"什么是会话\">2、什么是会话</h4>\r\n<p>用户认证通过后，为了避免用户的每次操作都进行认证可将用户的信息保证在会话中。会话就是系统为了保持当前用户的登录状态所提供的机制，<strong>常见的有基于session方式、基于token方式</strong>等。</p>\r\n<p>1 基于session的认证方式</p>\r\n<p>它的交互流程是，用户认证成功后，在服务端生成用户相关的数据保存在session(当前会话)中，发给客户端的sesssion_id\r\n存放到 cookie 中，这样用户客户端请求时带上 session_id\r\n就可以验证服务器端是否存在 session\r\n数据，以此完成用户的合法校验，当用户退出系统或session过期销毁时,客户端的session_id也就无效了</p>\r\n<p>2 基于token方式认证方式</p>\r\n<p>它的交互流程是，用户认证成功后，服务端生成一个token发给客户端，客户端可以放到\r\ncookie 或 local Storage等存储中，每次请求时带上\r\ntoken，服务端收到token通过验证后即可确认用户身份。Redis 存的用户信息\r\n<strong>共享session</strong> （分布式中）</p>\r\n<p>基于session的认证方式由Servlet规范定制，服务端要存储session信息需要占用内存资源，客户端需要支持cookie；基于token的方式则一般不需要服务端存储token，并且不限制客户端的存储方式。<strong>如今移动互联网时代更多类型的客户端需要接入系统，系统多是采用前后端分离的架构进行实现，所以基于token的方式更适合</strong>。</p>\r\n<h4 id=\"什么是授权给用户颁发权限\">3、什么是授权（给用户颁发权限）</h4>\r\n<p>还拿微信来举例子，微信登录成功后用户即可使用微信的功能，比如，发红包、发朋友圈、添加好友等，没有绑定银行卡的用户是无法发送红包的，绑定银行卡的用户才可以发红包，发红包功能、发朋友圈功能都是微信的资源即功能资源，用户拥有发红包功能的权限才可以正常使用发送红包功能，拥有发朋友圈功能的权限才可以使用发朋友圈功能，这个根据用户的权限来控制用户使用资源的过程就是授权。\r\n<strong>鉴权（判断用户是否有这个权限）</strong></p>\r\n<p>java应用中什么叫资源 url就是资源 （接口就是资源）</p>\r\n<h4 id=\"授权的数据模型rbac\">4、授权的数据模型（RBAC）</h4>\r\n<p>用户 角色 权限</p>\r\n<p>如何进行授权即如何对用户访问资源进行控制，首先需要学习授权相关的数据模型。</p>\r\n<p>授权可简单理解为<strong>Who对What(which)进行How操作</strong>，包括如下：</p>\r\n<p>Who，即主体（Subject），主体一般是指用户，也可以是程序，需要访问系统中的资源。\r\nWhat，即资源（Resource），如系统菜单、页面、按钮、代码方法、系统商品信息、系统订单信息等。系统菜单、页面、按钮、代码方法都属于系统功能资源，对于web系统每个功能资源通常对应一个URL；系统商品信息、系统订单信息都属于实体资源（数据资源），实体资源由资源类型和资源实例组成，比如商品信息为资源类型，商品编号\r\n为001的商品为资源实例。\r\nHow，权限/许可（Permission），规定了用户对资源的操作许可，权限离开资源没有意义，如用户查询权限、用户添加权限、某个代码方法的调用权限、编号为001的用户的修改权限等，通过权限可知用户对哪些资源都有哪些操作可。</p>\r\n<p>主体、资源、权限关系如下图：</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\clip_image002-17150487587261.jpg\"\r\nalt=\"IMG_256\" />\r\n<figcaption aria-hidden=\"true\">IMG_256</figcaption>\r\n</figure>\r\n<p>主体、资源、权限相关的数据模型如下：</p>\r\n<p>主体（用户id、账号、密码、...）</p>\r\n<p>资源（资源id、资源名称、访问地址、...）</p>\r\n<p>权限（权限id、权限标识、权限名称、资源id、...）</p>\r\n<p>角色（角色id、角色名称、...）</p>\r\n<p>角色和权限关系（角色 id、权限id、...）</p>\r\n<p>主体（用户）和角色关系（用户id、角色id、...）</p>\r\n<p>主体（用户）、资源、权限关系如下图：</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\clip_image002-17150487703522.jpg\"\r\nalt=\"IMG_257\" />\r\n<figcaption aria-hidden=\"true\">IMG_257</figcaption>\r\n</figure>\r\n<p>通常企业开发中将资源和权限表合并为一张权限表，如下：</p>\r\n<p>资源（资源id、资源名称、访问地址、...）</p>\r\n<p>权限（权限id、权限标识、权限名称、资源id、...）</p>\r\n<p>合并为：</p>\r\n<p>权限（权限id、权限标识、权限名称、资源名称、资源访问地址、...）</p>\r\n<p>修改后数据模型之间的关系如下图：</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\clip_image002-17150487790833.jpg\"\r\nalt=\"IMG_258\" />\r\n<figcaption aria-hidden=\"true\">IMG_258</figcaption>\r\n</figure>\r\n<h4 id=\"rbac\">5、RBAC</h4>\r\n<p>用户，角色，权限 本质：就是把权限打包给角色，分配给用户</p>\r\n<p><strong>RBAC一般指基于角色的访问控制</strong> 权限 五张表\r\n（最少五张表）</p>\r\n<p>基于角色的访问控制（RBAC）是实施面向企业安全策略的一种有效的访问控制方式。</p>\r\n<p>系统的资源访问级别会更加细化</p>\r\n<p><strong>1 基于角色的访问控制</strong></p>\r\n<p>RBAC基于角色的访问控制（Role-Based Access\r\nControl）是按角色进行授权，比如：主体的角色为总经理可以查询企业运营报表，查询员工工资信息等</p>\r\n<p>根据上图中的判断逻辑，授权代码可表示如下：</p>\r\n<p><strong>if(主体.hasRole(\"总经理角色id\")){</strong></p>\r\n<p><strong>查询工资</strong></p>\r\n<p><strong>}</strong></p>\r\n<p>如果上图中查询工资所需要的角色变化为总经理和部门经理，此时就需要修改判断逻辑为“判断用户的角色是否是总经理或部门经理”，修改代码如下：</p>\r\n<p><strong>if(主体.hasRole(\"总经理角色id\") ||</strong>\r\n<strong>主体.hasRole(\"部门经理角色id\")){</strong></p>\r\n<p><strong>查询工资</strong></p>\r\n<p><strong>}</strong></p>\r\n<p>根据上边的例子发现，当需要修改角色的权限时就需要修改授权的相关代码，系统可扩展性差。</p>\r\n<p><strong>2 基于权限的访问控制</strong></p>\r\n<p>RBAC基于资源的访问控制（Resource-Based Access\r\nControl）是按资源（或权限）进行授权，比如：用户必须具有查询工资权限才可以查询员工工资信息等，如下的判断</p>\r\n<p><strong>if(主体.hasPermission(\"查询工资\") ){</strong></p>\r\n<p><strong>查询工资</strong></p>\r\n<p><strong>}</strong></p>\r\n<p>优点：系统设计时定义好查询工资的权限标识，即使查询工资所需要的角色变化为总经理和部门经理也不需要修改授权代码，系统可扩展性强。</p>\r\n<h3 id=\"二spring-security简介\">二、Spring Security简介</h3>\r\n<p>官网： https://spring.io/projects/spring-security</p>\r\n<p>中文文档： https://www.springcloud.cc/spring-security.html</p>\r\n<h4 id=\"什么是spring-security\">1、什么是Spring Security</h4>\r\n<p>Spring\r\nSecurity是一个能够为基于Spring的企业应用系统提供<strong>声明式（注解）的安全访问控制解决方案的安全框架</strong>。它提供了一组可以在Spring应用上下文中配置的Bean，充分利用了Spring\r\nIoC，DI（控制反转Inversion of Control ,DI:Dependency Injection\r\n依赖注入）和AOP（面向切面编程）功能，为应用系统提供声明式的安全访问控制功能，减少了为企业系统安全控制编写大量重复代码的工作。</p>\r\n<p>以上解释来源于百度百科。可以一句话来概括，SpringSecurity\r\n是一个安全框架。</p>\r\n<h3 id=\"三jwt概述\">三、JWT概述</h3>\r\n<h4 id=\"什么是jwt\">1、什么是JWT</h4>\r\n<p><strong>Json web token (JWT)</strong>,\r\n是<strong>为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准</strong>（(RFC\r\n7519).该token被设计为<strong>紧凑且安全</strong>的，特别适用于<strong>分布式站点的单点登录（</strong>SSO）场景。JWT的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源，也可以增加一些额外的其它业务逻辑所必须的声明信息，该token也可直接被用于认证，也可被加密。</p>\r\n<p>官网： <a\r\nhref=\"https://jwt.io/\"><strong>https://jwt.io/</strong></a></p>\r\n<h4 id=\"跨域认证问题\">2、跨域认证问题</h4>\r\n<p>互联网服务离不开用户认证。一般流程是下面这样。</p>\r\n<p>l 用户向服务器发送用户名和密码。</p>\r\n<p>l\r\n服务器验证通过后，在当前对话（session）里面保存相关数据，比如用户角色、登录时间等等。</p>\r\n<p>l 服务器向用户返回一个 session_id，写入浏览器的\r\nCookie。（Cookie不能跨域携带）</p>\r\n<p>l 用户随后的每一次请求，都会通过 Cookie，将 session_id\r\n传回服务器。</p>\r\n<p>l 服务器收到 session_id，找到前期保存的数据，由此得知用户的身份。</p>\r\n<p>这种模式的问题在于，扩展性（scaling）不好。单机当然没有问题，如果是服务器集群，或者是跨域的服务导向架构，就要求\r\nsession 数据共享，每台服务器都能够读取 session。</p>\r\n<p>举例来说，A 网站和 B\r\n网站是同一家公司的关联服务。现在要求，用户只要在其中一个网站登录，再访问另一个网站就会自动登录，请问怎么实现？</p>\r\n<p><strong>一种解决方案是 session</strong>\r\n<strong>数据持久化</strong>，写入数据库或别的持久层。各种服务收到请求后，都向持久层请求数据。这种方案的优点是架构清晰，缺点是工程量比较大。另外，持久层万一挂了，就会单点失败。</p>\r\n<p><strong>另一种方案是服务器索性不保存 session</strong>\r\n<strong>数据了，所有数据都保存在客户端，每次请求都发回服务器</strong>。JWT\r\n就是这种方案的一个代表。 服务器不存数据，客户端存，服务器解析就行了</p>\r\n<h4 id=\"jwt原理\">3、JWT原理</h4>\r\n<p>JWT 的原理是，服务器认证以后，生成一个 JSON\r\n对象，发回给用户，就像下面这样。</p>\r\n<p>{ \"姓名\": \"张三\", \"角色\": \"管理员\", \"到期时间\": \"2018年7月1日0点0分\"\r\n}</p>\r\n<p>以后，用户与服务端通信的时候，都要发回这个 JSON\r\n对象。服务器完全只靠这个对象认定用户身份。为了防止用户篡改数据，服务器在生成这个对象的时候，会加<strong>上签名</strong>（详见后文）。</p>\r\n<p>服务器就不保存任何 session\r\n数据了，也就是说，服务器变成<strong>无状态</strong>了，从而比较容易实现扩展。</p>\r\n<h4 id=\"jwt数据结构\">4、JWT数据结构</h4>\r\n<p>实际的 JWT 大概就像下面这样。</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\clip_image002-17150492894634.png\"\r\nalt=\"IMG_256\" />\r\n<figcaption aria-hidden=\"true\">IMG_256</figcaption>\r\n</figure>\r\n<p>它是一个很长的字符串，中间用点（.）分隔成三个部分。注意，JWT\r\n内部是没有换行的，这里只是为了便于展示，将它写成了几行。</p>\r\n<p>JWT 的三个部分依次如下。</p>\r\n<p>面试问题： jwt知道吗？谈谈你的理解（由浅入深的聊）</p>\r\n<p>Ø Header（头部）</p>\r\n<p>Ø Payload（负载）</p>\r\n<p>Ø Signature（签名）</p>\r\n<p>写成一行，就是下面的样子。</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\clip_image002-17150492956465.png\"\r\nalt=\"IMG_257\" />\r\n<figcaption aria-hidden=\"true\">IMG_257</figcaption>\r\n</figure>\r\n<p><strong>1、Header</strong></p>\r\n<p>Header 部分是一个 JSON 对象，描述 JWT\r\n的元数据，通常是下面的样子。</p>\r\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"> <span class=\"attr\">&quot;alg&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;HS256&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"attr\">&quot;typ&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;JWT&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\r\n<p>上面代码中，alg属性表示签名的算法（algorithm），默认是 HMAC\r\nSHA256（写成 HS256）；typ属性表示这个令牌（token）的类型（type），JWT\r\n令牌统一写为JWT。</p>\r\n<p>最后，将上面的 JSON 对象使用 <strong>Base64URL</strong>\r\n<strong>算法转成字符串</strong>。</p>\r\n<p><strong>2、Payload</strong></p>\r\n<p>Payload 部分也是一个 JSON\r\n对象，用来存放<strong>实际需要传递的数据</strong>。JWT\r\n规定了7个官方字段，供选用。</p>\r\n<p>iss (issuer)：签发人</p>\r\n<p><strong>exp (expiration time)：过期时间</strong></p>\r\n<p>sub (subject)：主题</p>\r\n<p>aud (audience)：受众</p>\r\n<p>nbf (Not Before)：生效时间</p>\r\n<p><strong>iat (Issued At)：签发时间</strong></p>\r\n<p>jti (JWT ID)：编号</p>\r\n<p>除了官方字段，你还可以在这个部分定义私有字段，下面就是一个例子。</p>\r\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"> <span class=\"attr\">&quot;sub&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;1234567890&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;John Doe&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"attr\">&quot;admin&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\r\n<p>注意，JWT\r\n默认是不加密的，任何人都可以读到，所以不要把<strong>秘密信息（密码，手机号等）</strong>放在这个部分。</p>\r\n<p>这个 JSON 对象也要使用 Base64URL 算法转成字符串。</p>\r\n<p><strong>3、Signature（保证数据安全）</strong></p>\r\n<p>Signature 部分是对前两部分的签名，<strong>防止数据篡改</strong>。</p>\r\n<p>钥匙：一个字符串 秘钥 abcdefg 对称加密 非对称加密 A B</p>\r\n<p>首先，需要指定一个<strong>密钥（secret）</strong>。这个密钥只有服务器才知道，不能泄露给用户。然后，使用\r\nHeader 里面指定的签名算法（默认是 HMAC\r\nSHA256），按照下面的公式产生签名。</p>\r\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HMACSHA256(</span><br><span class=\"line\">base64UrlEncode(header) + <span class=\"string\">&quot;.&quot;</span> +</span><br><span class=\"line\">base64UrlEncode(payload)<span class=\"punctuation\">,</span></span><br><span class=\"line\">secret)</span><br></pre></td></tr></table></figure>\r\n<p>算出签名以后，把 Header、Payload、Signature\r\n三个部分拼成一个字符串，每个部分之间用\"点\"（.）分隔，就可以返回给用户。</p>\r\n<p><strong>4、Base64URL（转码）</strong></p>\r\n<p>前面提到，Header 和 Payload 串型化的算法是 Base64URL。这个算法跟\r\nBase64 算法基本类似，但有一些小的不同。</p>\r\n<p>JWT 作为一个令牌（token），有些场合可能会放到 URL（比如\r\napi.example.com/?token=xxx）。</p>\r\n<p>Base64 有三个字符+、/和=，在 URL\r\n里面有特殊含义，所以要被替换掉：=被省略、+替换成-，/替换成_ 。这就是\r\n<strong>Base64URL 算法</strong>。</p>\r\n<h4 id=\"jwt的使用方式重点\">5、JWT的使用方式【重点】</h4>\r\n<p><strong>客户端收到服务器返回的 JWT，可以储存在 Cookie</strong>\r\n<strong>里面，也可以储存在 localStorage</strong></p>\r\n<p>此后，客户端每次与服务器通信，都要带上这个 JWT。你可以把它放在\r\nCookie里面自动发送，但是这样不能跨域，所以更好的做法是放在\r\nHTTP请求的头信息Authorization字段里面</p>\r\n<p><strong>Authorization: Bearer jwt</strong></p>\r\n<p><strong>另一种做法是，跨域的时候，JWT</strong> <strong>就放在\r\nPOST</strong> <strong>请求的数据体里面。</strong></p>\r\n<h4 id=\"jwt的特点\">6、JWT的特点</h4>\r\n<p>JWT 默认是不加密，但也是可以加密的。生成原始 Token\r\n以后，可以用密钥再加密一次。</p>\r\n<p>JWT 不加密的情况下，不能将秘密数据写入 JWT。</p>\r\n<p>JWT 不仅可以用于认证，也可以用于交换信息。有效使用\r\nJWT，可以降低服务器查询数据库的次数。</p>\r\n<p>JWT 的最大缺点是，由于服务器不保存 session\r\n状态，因此无法在使用过程中废止某个 token，或者更改 token\r\n的权限。也就是说，一旦 JWT\r\n签发了，在到期之前就会始终有效，除非服务器部署额外的逻辑（JWT的登出问题）。就是因为服务端无状态了</p>\r\n<p>正常情况下 修改了密码后就会跳转到登录页面\r\n：修改成功后清空浏览器保存的token了</p>\r\n<p>后端怎么玩？ 因为服务端不保留token 我用之前的token\r\n还是可以继续访问的</p>\r\n<p>从有状态（后端也会存一个）的变成无状态的了</p>\r\n<p>我们就要把它从无状态再变成有状态了</p>\r\n<p>JWT\r\n本身包含了认证信息，一旦泄露，任何人都可以获得该令牌的所有权限。为了减少盗用，JWT\r\n的有效期应该设置得比较短。对于一些比较重要的权限，使用时应该再次对用户进行认证。</p>\r\n<p>为了减少盗用，JWT 不应该使用 HTTP 协议明码传输，要使用 HTTPS\r\n协议传输。</p>\r\n<p>我们颁发一个令牌 用户名称 用户的权限信息 这个令牌2个小时有效</p>\r\n<p>Jwt只要能解析 就认为你是可用的 做不了 登出 后端不存储用户信息了\r\n后端无状态了</p>\r\n<h1 id=\"docker\">---09-Docker</h1>\r\n<h3 id=\"一docker简介\">一、Docker简介</h3>\r\n<p>1、什么是Docker</p>\r\n<p>​\r\nDocker是一个开源项目，<strong>它的目标是实现经量级的操作系统虚拟化解决方案。Docker是一种容器技术。Docker的基础是Linux容器（LXC）等技术。在LXC的基础上Docker进行了进一步的封装，让用户不需要关心容器的管理，使得操作更加简单。用户操作Docker的容器就像操作一个快速轻量级的虚拟机一样简单。</strong></p>\r\n<p>2、Docker设计思想</p>\r\n<p>​\r\nDocker的思想来自于集装箱，集装箱解决了什么问题？在一艘大船上，可以把货物规整的摆放起来。并且各种各样的货物被集装箱标准化了，集装箱和集装箱之间不会互相影响。那么我就不需要专门运送水果的船和专门运送化学品的船了。只要这些货物在集装箱里封装的好好的，那我就可以用一艘大船把他们都运走。docker就是类似的理念。现在都流行云计算了，云计算就好比大货轮。</p>\r\n<p>通过Docker能够把\r\nnet，php开发的应用作为容器（集装箱）运行。net和php开发的两个应用是各自独立的环境。基于容器（集装箱）可以运行多种应用，redis，mysql，tomcat，centos等等。总之Docker就是集装箱原理。</p>\r\n<p>3、为什么要使用Docker</p>\r\n<p>作为一种新兴的虚拟化方式，Docker\r\n跟传统的虚拟化方式相比具有众多的优势。首先，<strong>Docker</strong>\r\n<strong>容器的启动可以在秒级实现</strong>，这相比传统的虚拟机方式要快得多。其次，<strong>Docker</strong>\r\n<strong>对系统资源的利用率很高，一台主机上可以同时运行数千个Docker</strong>\r\n<strong>容器</strong>。</p>\r\n<p>容器除了运行其中应用外，基本不消耗额外的系统资源，使得应用的性能很高，同时系统的开销尽量小。</p>\r\n<p>传统虚拟机方式运行10 个不同的应用就要起10 个虚拟机，而Docker\r\n只需要启动10 个隔离的应用即可。具体说来，Docker\r\n在如下几个方面具有较大的优势。</p>\r\n<ol type=\"1\">\r\n<li>更快速的交付和部署</li>\r\n<li>更轻松的迁移和扩展</li>\r\n<li>更简单的管理</li>\r\n</ol>\r\n<p>4、Docker的局限</p>\r\n<ol type=\"1\">\r\n<li><strong>Docker是基于Linux\r\n64bit的，无法在32bit的linux/Windows/unix环境下使用</strong></li>\r\n<li>隔离性相比虚拟机之类的虚拟化方案还是有些欠缺，所有容器公用一部分的运行库</li>\r\n<li><strong>网络管理相对简单</strong></li>\r\n<li>Docker对磁盘的管理比较有限</li>\r\n<li><strong>容器随着用户进程的停止而销毁，容器中的日志等用户数据不便收集</strong></li>\r\n</ol>\r\n<h3 id=\"二掌握docker说明\">二、【掌握】Docker说明</h3>\r\n<p>官网 http://www.docker.com</p>\r\n<p>中文官网 https://docker-cn.com</p>\r\n<p>仓库（镜像网站） https://hub.docker.com</p>\r\n",
            "tags": [
                "微服务框架",
                "Spring Cloud"
            ]
        },
        {
            "id": "http://example.com/2024/06/27/post/job/03-%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/",
            "url": "http://example.com/2024/06/27/post/job/03-%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/",
            "title": "03-实现图片压缩",
            "date_published": "2024-06-27T09:28:06.503Z",
            "content_html": "<h1 id=\"一java实现图片压缩\">一、Java实现图片压缩</h1>\r\n<h3 id=\"简介\">1、简介</h3>\r\n<p>我们在项目中经常会遇到图片上传的需求，如商品图片，但图片太大的话，在客户端加载太慢影响用户体验，所有一般会将图片进行压缩。</p>\r\n<h3 id=\"实现\">2、实现</h3>\r\n<h5 id=\"添加依赖\">添加依赖</h5>\r\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>net.coobird<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>thumbnailator<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.4.8<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\r\n<h5 id=\"按质量压缩\">2.1按质量压缩</h5>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> net.coobird.thumbnailator.Thumbnails;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Client</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    Thumbnails.of(<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;D:/showqrcode.jpg&quot;</span>))</span><br><span class=\"line\">        .scale(<span class=\"number\">1f</span>) <span class=\"comment\">//图片大小（长宽）压缩比例 从0-1，1表示原图</span></span><br><span class=\"line\">        .outputQuality(<span class=\"number\">0.5f</span>) <span class=\"comment\">//图片质量压缩比例 从0-1，越接近1质量越好</span></span><br><span class=\"line\">        .toOutputStream(<span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(<span class=\"string\">&quot;D:/showqrcode_50.jpg&quot;</span>));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<h5 id=\"按比例压缩\">2.2按比例压缩</h5>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> net.coobird.thumbnailator.Thumbnails;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Client2</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    Thumbnails.of(<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;D:/showqrcode.jpg&quot;</span>))</span><br><span class=\"line\">        .scale(<span class=\"number\">0.5f</span>) <span class=\"comment\">//图片大小（长宽）压缩 从0按照</span></span><br><span class=\"line\">        .outputQuality(<span class=\"number\">0.5f</span>) <span class=\"comment\">//图片质量压缩比例 从0-1，越接近1质量越好</span></span><br><span class=\"line\">        .toOutputStream(<span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(<span class=\"string\">&quot;D:/showqrcode_50%.jpg&quot;</span>));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<h5 id=\"按大小和比例缩放\">2.3按大小和比例缩放</h5>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> net.coobird.thumbnailator.Thumbnails;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Client21</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    Thumbnails.of(<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;D:/showqrcode.jpg&quot;</span>))</span><br><span class=\"line\">        .size(<span class=\"number\">500</span>, <span class=\"number\">300</span>) <span class=\"comment\">// 图片比例不变</span></span><br><span class=\"line\">        .toOutputStream(<span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(<span class=\"string\">&quot;D:/showqrcode_500_300.jpg&quot;</span>));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<h5 id=\"按大小缩放\">2.4按大小缩放</h5>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> net.coobird.thumbnailator.Thumbnails;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Client22</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    Thumbnails.of(<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;D:/showqrcode.jpg&quot;</span>))</span><br><span class=\"line\">        .forceSize(<span class=\"number\">500</span>, <span class=\"number\">300</span>) <span class=\"comment\">//不保持图片比例</span></span><br><span class=\"line\">        .toOutputStream(<span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(<span class=\"string\">&quot;D:/showqrcode_500_300.jpg&quot;</span>));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<h5 id=\"旋转\">2.5旋转</h5>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> net.coobird.thumbnailator.Thumbnails;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Client3</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    Thumbnails.of(<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;D:/showqrcode.jpg&quot;</span>))</span><br><span class=\"line\">        .forceSize(<span class=\"number\">500</span>, <span class=\"number\">300</span>)</span><br><span class=\"line\">        .rotate(<span class=\"number\">90f</span>) <span class=\"comment\">//向右旋转</span></span><br><span class=\"line\">        .toOutputStream(<span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(<span class=\"string\">&quot;D:/showqrcode+90.jpg&quot;</span>));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<h5 id=\"加水印\">2.6加水印</h5>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.imageio.ImageIO;</span><br><span class=\"line\"><span class=\"keyword\">import</span> net.coobird.thumbnailator.Thumbnails;</span><br><span class=\"line\"><span class=\"keyword\">import</span> net.coobird.thumbnailator.geometry.Positions;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Client4</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    Thumbnails.of(<span class=\"string\">&quot;D:/showqrcode.jpg&quot;</span>)</span><br><span class=\"line\">        .size(<span class=\"number\">1280</span>, <span class=\"number\">1024</span>)</span><br><span class=\"line\">        .watermark(Positions.BOTTOM_RIGHT, ImageIO.read(<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;D:/watermark.jpg&quot;</span>)),</span><br><span class=\"line\">            <span class=\"number\">0.5f</span>) <span class=\"comment\">//位置，水印来源，透明度</span></span><br><span class=\"line\">        .outputQuality(<span class=\"number\">0.8f</span>)</span><br><span class=\"line\">        .toFile(<span class=\"string\">&quot;D:/showqrcode_watermark_bottom_right.jpg&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<h5 id=\"裁剪\">2.7裁剪</h5>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> net.coobird.thumbnailator.Thumbnails;</span><br><span class=\"line\"><span class=\"keyword\">import</span> net.coobird.thumbnailator.geometry.Positions;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Client5</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    Thumbnails.of(<span class=\"string\">&quot;D:/showqrcode.jpg&quot;</span>)</span><br><span class=\"line\">        .sourceRegion(Positions.CENTER, <span class=\"number\">800</span>, <span class=\"number\">600</span>) <span class=\"comment\">//位置，宽，高</span></span><br><span class=\"line\">        .size(<span class=\"number\">800</span>, <span class=\"number\">600</span>)</span><br><span class=\"line\">        .keepAspectRatio(<span class=\"literal\">false</span>)</span><br><span class=\"line\">        .toFile(<span class=\"string\">&quot;D:/showqrcode_region_center.jpg&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<h5 id=\"拼接\">2.8拼接</h5>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Graphics;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.image.BufferedImage;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.imageio.ImageIO;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Client6</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"type\">byte</span>[] bytes = joinImages(<span class=\"literal\">false</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;D:/showqrcode.jpg&quot;</span>), <span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;D:/showqrcode.jpg&quot;</span>));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Objects.nonNull(bytes)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">new</span> <span class=\"title class_\">ByteArrayInputStream</span>(bytes).transferTo(<span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(<span class=\"string\">&quot;D:/showqrcode_join.jpg&quot;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 将多张图片拼接成一张</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> horizontal 是否为水平拼接</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> files 文件列表</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> 拼接后的文件字节数组</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">byte</span>[] joinImages(<span class=\"type\">boolean</span> horizontal, File... files) <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Objects.isNull(files) || files.length == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    List&lt;BufferedImage&gt; imageList = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (File file : files) &#123;</span><br><span class=\"line\">      <span class=\"type\">BufferedImage</span> <span class=\"variable\">image</span> <span class=\"operator\">=</span> ImageIO.read(file);</span><br><span class=\"line\">      imageList.add(image);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">height</span> <span class=\"operator\">=</span> imageList.get(<span class=\"number\">0</span>).getHeight();</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">width</span> <span class=\"operator\">=</span> imageList.get(<span class=\"number\">0</span>).getWidth();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (horizontal) &#123;</span><br><span class=\"line\">      width = imageList.stream().mapToInt(BufferedImage::getWidth).sum();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      height = imageList.stream().mapToInt(BufferedImage::getHeight).sum();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//创建拼接后的图片画布，参数分别为宽，高，类型，这里我们使用RGB3元色类型</span></span><br><span class=\"line\">    <span class=\"type\">BufferedImage</span> <span class=\"variable\">resultImage</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedImage</span>(width, height, BufferedImage.TYPE_INT_RGB);</span><br><span class=\"line\">    <span class=\"type\">Graphics</span> <span class=\"variable\">graphics</span> <span class=\"operator\">=</span> resultImage.getGraphics();</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">previousWidth</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">previousHeight</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (BufferedImage image : imageList) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//向画布上画图片</span></span><br><span class=\"line\">      graphics.drawImage(image, previousWidth, previousHeight, <span class=\"literal\">null</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (horizontal) &#123;</span><br><span class=\"line\">        previousWidth += image.getWidth();</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        previousHeight += image.getHeight();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">ByteArrayOutputStream</span> <span class=\"variable\">output</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ByteArrayOutputStream</span>();</span><br><span class=\"line\">    ImageIO.write(resultImage, <span class=\"string\">&quot;jpg&quot;</span>, output);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> output.toByteArray();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"总结\">总结</h3>\r\n<p>图片经过以上处理之后都会去除EXIF信息，关于EXIF详情，请查看<a\r\nhref=\"https://www.cnblogs.com/strongmore/p/14146799.html\">java获取图片的GPS信息</a></p>\r\n<h3 id=\"参考\">参考</h3>\r\n<p><a\r\nhref=\"https://www.cnblogs.com/linkstar/p/7412012.html\">java使用google开源工具实现图片压缩</a></p>\r\n",
            "tags": [
                "工作日志",
                "job"
            ]
        },
        {
            "id": "http://example.com/2024/06/25/post/game/VALORANT/errorCode/",
            "url": "http://example.com/2024/06/25/post/game/VALORANT/errorCode/",
            "title": "无畏契约错误代码[解决方案]",
            "date_published": "2024-06-25T14:56:45.954Z",
            "content_html": "<h1 id=\"无畏契约错误代码解决方案\">无畏契约错误代码解决方案</h1>\r\n<h1 id=\"港服-riot\">港服 Riot</h1>\r\n<h3 id=\"错误代码van79\">错误代码Van79</h3>\r\n<p>解释：van79的问题就是没有成功启用拳头反作弊的程序</p>\r\n<p>方案：重新打开反作弊程序</p>\r\n<p>1、添加信任区，允许vgc服务自启动，【设置】-【应用】-【启动】-【找到vanguard\r\ntray notification】。</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\006V2BDqly8hrgw9lsysdj30qs0mjgnx.jpg\"\r\nalt=\"alt\" />\r\n<figcaption aria-hidden=\"true\">alt</figcaption>\r\n</figure>\r\n<p>2、然后我们在【我的电脑】-【右键管理】-【服务和应用程序】-【服务】找到vgc，接着在vgc里右键属性，启动类型（自动），服务状态（启动），最后应用确定，再重启电脑即可</p>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\006V2BDqly8hrgwa8a5j4j30rs0jv40l.jpg\"\r\nalt=\"alt\" />\r\n<figcaption aria-hidden=\"true\">alt</figcaption>\r\n</figure>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\006V2BDqly8hrgwaehla7j30rs0jvdkn.jpg\"\r\nalt=\"alt\" />\r\n<figcaption aria-hidden=\"true\">alt</figcaption>\r\n</figure>\r\n<figure>\r\n<img data-src=\"D:\\Pictures\\typore\\006V2BDqly8hrgwajskqlj30di0gtjsg.jpg\"\r\nalt=\"alt\" />\r\n<figcaption aria-hidden=\"true\">alt</figcaption>\r\n</figure>\r\n",
            "tags": [
                "游戏",
                "VALORANT",
                "game",
                "VALORANT",
                "无畏契约"
            ]
        },
        {
            "id": "http://example.com/2024/06/18/post/job/02-quartz%E5%AE%9A%E6%97%B6%E8%B0%83%E5%BA%A6%E4%BB%BB%E5%8A%A1/",
            "url": "http://example.com/2024/06/18/post/job/02-quartz%E5%AE%9A%E6%97%B6%E8%B0%83%E5%BA%A6%E4%BB%BB%E5%8A%A1/",
            "title": "02-quartz定时调度任务",
            "date_published": "2024-06-17T16:02:29.376Z",
            "content_html": "<h2 id=\"quartz概念\">1、Quartz概念</h2>\r\n<p>Quartz就是一个基于Java实现的任务调度框架，用于执行你想要执行的任何任务。\r\nQuartz是OpenSymphony开源组织在Job\r\nscheduling（定时调度）领域的开源项目，它可以与J2EE和J2SE应用程序相结合也可以单独使用。</p>\r\n<p>Quartz是开源且具有丰富特性的任务调度库，能够集成任何的Java应用。它能创建简单的或者复杂的调度任务，以执行上十，上百，上千，上万的任务。任务job被定义为标准的Java组件。能工执行任何你想要实现的功能。Quartz调度框架包含许多企业级的特性，如JTA事务，集群的支持。</p>\r\n<p>官网：http://www.quartz-scheduler.org/</p>\r\n<h2 id=\"quartz运行环境\">2、Quartz运行环境</h2>\r\n<ul>\r\n<li>Quartz可以运行嵌入在另一个独立的应用程序中</li>\r\n<li>Quartz可以在应用程序服务器（或servlet容器）内被实例化，bin参与事务</li>\r\n<li>Quartz可以作为一个独立的程序运行（其自己的java虚拟机内），可以通过RMI使用</li>\r\n<li>Quartz可以被实例化，作为独立的项目集群（负载平衡和故障转移功能），用于作业执行</li>\r\n</ul>\r\n<h2 id=\"quartz使用的设计模式\">3、Quartz使用的设计模式</h2>\r\n<ul>\r\n<li>Builder模式</li>\r\n<li>Factory模式</li>\r\n<li>组件模式</li>\r\n<li>链式编程</li>\r\n</ul>\r\n<h3 id=\"quartz学习的核心概念\">4、Quartz学习的核心概念</h3>\r\n<p>1、任务job</p>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">job就是你想实现的任务类，每一个job必须实现org.quartz.job接口，且只需实现接口定义的execute()方法</span><br></pre></td></tr></table></figure>\r\n<p>2、触发器trigger</p>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Trigger为你执行任务的触发器（定时）</span><br><span class=\"line\">Trigger主要包含两个SimpleTrigger和CronTrigger两种</span><br></pre></td></tr></table></figure>\r\n<p>3、调度器Scheduler</p>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Scheduler为定时任务调度，它会将任务Job及触发器Trigger整合起来，负责基于Trigger设定的时间来执行Job</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"体系结构\">5、体系结构</h3>\r\n<figure>\r\n<img\r\nsrc=\"https://dlink.host/wx4.sinaimg.cn/large/006V2BDqly8hqta4ht60fj30nt0gotag.jpg\"\r\ntitle=\"这是体系结构照片\" alt=\"这里是 alt\" />\r\n<figcaption aria-hidden=\"true\">这里是 alt</figcaption>\r\n</figure>\r\n<h3 id=\"quartz的几个常用api\">6、Quartz的几个常用API</h3>\r\n<ul>\r\n<li>Scheduler：用于定时调度程序交互的主程序接口。Scheduler调度程序：任务执行计划表，只有安排进执行计划的任务Job【通过scheduler.scheduleJob方法安排进执行任务】，当它预先定义的执行时间到了的时候（任务出发trigger）该任务才会被执行</li>\r\n<li>Job：预先定义的，希望在未来某个使劲能被调度程序执行的任务类，可自定义</li>\r\n<li>JobDetail：使用JobDetail来定义定时任务的实例，JobDetail实例是通过JobBuilder类创建的</li>\r\n<li>JobDataMap：可以包含不限量（序列化的）的数对象，在Job实例执行的时候，可以使用其中的数据；JobDataMap是Java\r\nMap接口的一个实现，额外增加了一些便于存取基本类型数据的方法</li>\r\n<li>Trigger：触发器，Trigger对象是用来触发执行Job的。当调度一个Job时，我们实例一个触发器然后调整他的属性来满足Job执行的条件。表明任务在什么时候会执行。【定义了一个已经被安排的任务将会在什么时候执行的时间条件】</li>\r\n<li>JobBuilder：用于声明一个任务实例，也可以定义关于该任务的详情比如任务名，组名等。通过JobBuilder声明的实例将会作为一个实际执行的任务。</li>\r\n<li>TriggerBuilder：触发器创建器，用于创建触发器trigger实例</li>\r\n<li>JobListener、TriggerListener、SchedulerListener监听器，用于对组件的监听</li>\r\n</ul>\r\n<h3 id=\"入门案例\">7、入门案例</h3>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">构建一个任务类实现Job接口，重写execute（执行方法）方法，在执行方法中编写定时调度需要实现的逻辑。</span><br><span class=\"line\">创建一个main方法，在main方法中构建任务实例和处方实例有调度器实例进行绑定并开启任务。</span><br></pre></td></tr></table></figure>\r\n<h5 id=\"pom.xml\">1、pom.xml</h5>\r\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.quartz-scheduler<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>quartz<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.quartz-scheduler<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>quartz-jobs<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.projectlombok<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>lombok<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\r\n<h5 id=\"任务类\">2、任务类</h5>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 任务类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloJob</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Job</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">execute</span><span class=\"params\">(JobExecutionContext jobExecutionContext)</span> <span class=\"keyword\">throws</span> JobExecutionException &#123;</span><br><span class=\"line\">        log.info(<span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()) + <span class=\"string\">&quot; | 任务被执行了&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<h5 id=\"调度器\">3、调度器</h5>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 调度器</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloSchedulerDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> SchedulerException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//从调度工厂中获取调度器实例</span></span><br><span class=\"line\">        <span class=\"type\">Scheduler</span> <span class=\"variable\">scheduler</span> <span class=\"operator\">=</span> StdSchedulerFactory.getDefaultScheduler();</span><br><span class=\"line\">        <span class=\"comment\">//通过JobBuilder构建一个任务实例</span></span><br><span class=\"line\">        <span class=\"type\">JobDetail</span> <span class=\"variable\">jobDetail</span> <span class=\"operator\">=</span> JobBuilder.newJob(HelloJob.class)</span><br><span class=\"line\">                <span class=\"comment\">//设置任务的唯一实例名称和任务组名称组名</span></span><br><span class=\"line\">                .withIdentity(<span class=\"string\">&quot;job1&quot;</span>, <span class=\"string\">&quot;group1&quot;</span>)</span><br><span class=\"line\">                <span class=\"comment\">//构建实例</span></span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        <span class=\"comment\">//通过TriggerBuilder构建触发器实例</span></span><br><span class=\"line\">        <span class=\"type\">SimpleTrigger</span> <span class=\"variable\">trigger</span> <span class=\"operator\">=</span> TriggerBuilder.newTrigger()</span><br><span class=\"line\">                <span class=\"comment\">//设置触发器唯一实例名称和触发器的组名</span></span><br><span class=\"line\">                .withIdentity(<span class=\"string\">&quot;trigger1&quot;</span>, <span class=\"string\">&quot;group1&quot;</span>)</span><br><span class=\"line\">                <span class=\"comment\">//执行计划，每五秒执行一次</span></span><br><span class=\"line\">                .withSchedule(SimpleScheduleBuilder.repeatSecondlyForever(<span class=\"number\">5</span>))</span><br><span class=\"line\">                <span class=\"comment\">//立即执行</span></span><br><span class=\"line\">                .startNow()</span><br><span class=\"line\">                <span class=\"comment\">//构建实例</span></span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        <span class=\"comment\">//调度器绑定任务实例和触发器</span></span><br><span class=\"line\">        scheduler.scheduleJob(jobDetail,trigger);</span><br><span class=\"line\">        <span class=\"comment\">//开启定时任务</span></span><br><span class=\"line\">        scheduler.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p>启动程序观察控制台输出内容</p>\r\n<h3 id=\"job和jobdetail的关系介绍\">8、Job和JobDetail的关系介绍</h3>\r\n<ul>\r\n<li>Job：工作任务调度接口，任务类需要实现的接口。该接口中定义了execute方法，类似JDK提供的TimeTask类的run方法。在这里面编写任务执行的业务逻辑</li>\r\n<li>Job实例在Quartz中的生命周期：每次调度器执行Job时，它在调用execute方法前会创建一个新的Job实例，当调度完成后，管理的Job对象实例将会被释放，释放的实例会被垃圾回收机制回收</li>\r\n</ul>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloJob</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Job</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">HelloJob</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;实例被创建了&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">execute</span><span class=\"params\">(JobExecutionContext jobExecutionContext)</span> <span class=\"keyword\">throws</span> JobExecutionException &#123;</span><br><span class=\"line\">        log.info(<span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()) + <span class=\"string\">&quot; | 任务被执行了&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p><img\r\nsrc=\"D:\\Pictures\\typore\\006V2BDqly8hqtasabnb0j31a1094jx4.jpg\" /></p>\r\n<ul>\r\n<li>JobDetail：JobDetail为Job实例提供了许多设置属性，已经JobDetaMap成员变量属性，它用来存储特定Job实例的状态信息，调度器需要借助于JobDetail对象来添加Job实例【JobDetail中重要的属性：name[任务实例的唯一标识名称]、group[任务调度实例的组名]、jobClass[任务类信息]、jobDataMap】</li>\r\n</ul>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloSchedulerDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> SchedulerException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//从调度工厂中获取调度器实例</span></span><br><span class=\"line\">        <span class=\"type\">Scheduler</span> <span class=\"variable\">scheduler</span> <span class=\"operator\">=</span> StdSchedulerFactory.getDefaultScheduler();</span><br><span class=\"line\">        <span class=\"comment\">//通过JobBuilder构建一个任务实例</span></span><br><span class=\"line\">        <span class=\"type\">JobDetail</span> <span class=\"variable\">jobDetail</span> <span class=\"operator\">=</span> JobBuilder.newJob(HelloJob.class)</span><br><span class=\"line\">                <span class=\"comment\">//设置任务的唯一实例名称和任务组名称组名</span></span><br><span class=\"line\">                .withIdentity(<span class=\"string\">&quot;job1&quot;</span>, <span class=\"string\">&quot;group1&quot;</span>)</span><br><span class=\"line\">                <span class=\"comment\">//构建实例</span></span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        <span class=\"comment\">//jobDataMap</span></span><br><span class=\"line\">        <span class=\"type\">JobDataMap</span> <span class=\"variable\">jobDataMap</span> <span class=\"operator\">=</span> jobDetail.getJobDataMap();</span><br><span class=\"line\">        <span class=\"comment\">//任务实例的唯一标识名称</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> jobDetail.getKey().getName();</span><br><span class=\"line\">        <span class=\"comment\">//任务调度实例的组名</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">group</span> <span class=\"operator\">=</span> jobDetail.getKey().getGroup();</span><br><span class=\"line\">        <span class=\"comment\">//任务类信息</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">clazzName</span> <span class=\"operator\">=</span> jobDetail.getKey().getClass().getName();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;jobDataMap:&#123;&#125;&quot;</span>, jobDataMap);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;任务实例的唯一标识名称：&quot;</span>+name);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;任务调度实例的组名：&quot;</span>+group);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;任务类信息：&quot;</span>+clazzName);</span><br><span class=\"line\">        <span class=\"comment\">//通过TriggerBuilder构建触发器实例</span></span><br><span class=\"line\">        <span class=\"type\">SimpleTrigger</span> <span class=\"variable\">trigger</span> <span class=\"operator\">=</span> TriggerBuilder.newTrigger()</span><br><span class=\"line\">                <span class=\"comment\">//设置触发器唯一实例名称和触发器的组名</span></span><br><span class=\"line\">                .withIdentity(<span class=\"string\">&quot;trigger1&quot;</span>, <span class=\"string\">&quot;group1&quot;</span>)</span><br><span class=\"line\">                <span class=\"comment\">//执行计划，每五秒执行一次</span></span><br><span class=\"line\">                .withSchedule(SimpleScheduleBuilder.repeatSecondlyForever(<span class=\"number\">5</span>))</span><br><span class=\"line\">                <span class=\"comment\">//立即执行</span></span><br><span class=\"line\">                .startNow()</span><br><span class=\"line\">                <span class=\"comment\">//构建实例</span></span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        <span class=\"comment\">//调度器绑定任务实例和触发器</span></span><br><span class=\"line\">        scheduler.scheduleJob(jobDetail,trigger);</span><br><span class=\"line\">        <span class=\"comment\">//开启定时任务</span></span><br><span class=\"line\">        scheduler.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p><img\r\nsrc=\"D:\\Pictures\\typore\\006V2BDqly8hqtatu9hkoj30yi07dq5n.jpg\" /></p>\r\n<h3 id=\"jobexecutioncontext的介绍\">9、JobExecutionContext的介绍</h3>\r\n<ul>\r\n<li><p>当Scheduler调用一个Job，就会将JobExecutionContext传递给Job的execute()方法</p></li>\r\n<li><p>Job能通过JobExecuteContext对象访问到Quartz<code>运行时的环境</code>以及<code>Job本身的明细数据</code></p>\r\n<ul>\r\n<li><p>获取JobDetail相关信息、获取Trigger相关信息、获取Job类本身的信息</p>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 任务类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloJob</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Job</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">execute</span><span class=\"params\">(JobExecutionContext jobExecutionContext)</span> <span class=\"keyword\">throws</span> JobExecutionException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//通过JobExecutionContext获取JobDetail</span></span><br><span class=\"line\">        <span class=\"type\">JobDetail</span> <span class=\"variable\">jobDetail</span> <span class=\"operator\">=</span> jobExecutionContext.getJobDetail();</span><br><span class=\"line\">        <span class=\"type\">JobKey</span> <span class=\"variable\">jobKey</span> <span class=\"operator\">=</span> jobDetail.getKey();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">jobDetailName</span> <span class=\"operator\">=</span> jobKey.getName();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">jobDetailGroup</span> <span class=\"operator\">=</span> jobKey.getGroup();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">jobClazzNameJobDetail</span> <span class=\"operator\">=</span> jobKey.getClass().getName();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;任务实例的唯一标识名称：&quot;</span> + jobDetailName);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;任务实例的组名：&quot;</span> + jobDetailGroup);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;任务实例绑定的任务类信息：&quot;</span> + jobClazzNameJobDetail);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;-----------------------------------------&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//通过JobExecutionContext获取Trigger</span></span><br><span class=\"line\">        <span class=\"type\">Trigger</span> <span class=\"variable\">trigger</span> <span class=\"operator\">=</span> jobExecutionContext.getTrigger();</span><br><span class=\"line\">        <span class=\"type\">TriggerKey</span> <span class=\"variable\">triggerKey</span> <span class=\"operator\">=</span> trigger.getKey();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">triggerKeyName</span> <span class=\"operator\">=</span> triggerKey.getName();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">triggerKeyGroup</span> <span class=\"operator\">=</span> triggerKey.getGroup();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">triggerClazzName</span> <span class=\"operator\">=</span> triggerKey.getClass().getName();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;触发器的唯一标识名称：&quot;</span> + triggerKeyName);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;触发器的组名：&quot;</span> + triggerKeyGroup);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;触发器绑定的任务类信息：&quot;</span> + triggerClazzName);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;-----------------------------------------&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//通过JobExecutionContext</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">jobClazzName</span> <span class=\"operator\">=</span> jobExecutionContext.getClass().getName();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;job类相关的信息：&quot;</span>+jobClazzName);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;-----------------------------------------&quot;</span>);</span><br><span class=\"line\">        log.info(<span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()) + <span class=\"string\">&quot; | 任务被执行了&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\r\n</ul></li>\r\n</ul>\r\n<h3 id=\"jobdatamap介绍\">10、JobDataMap介绍</h3>\r\n<h5 id=\"使用map获取\">1、使用Map获取</h5>\r\n<ul>\r\n<li>在进行任务调度时，JobDataMap存储在JobExecutionContent中，非常方便获取</li>\r\n<li>JobDataMap可以用来存储任何可序列化的数据对象，当Job实例对象被执行时这些参数都会传递给它</li>\r\n<li>JobDataMap实现了JDK的Map接口，并且添加了非常方便的方法来存储基本数据类型</li>\r\n</ul>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 调度器</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloSchedulerDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> SchedulerException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//从调度工厂中获取调度器实例</span></span><br><span class=\"line\">        <span class=\"type\">Scheduler</span> <span class=\"variable\">scheduler</span> <span class=\"operator\">=</span> StdSchedulerFactory.getDefaultScheduler();</span><br><span class=\"line\">        <span class=\"comment\">//通过JobBuilder构建一个任务实例</span></span><br><span class=\"line\">        <span class=\"type\">JobDetail</span> <span class=\"variable\">jobDetail</span> <span class=\"operator\">=</span> JobBuilder.newJob(HelloJob.class)</span><br><span class=\"line\">                <span class=\"comment\">//设置任务的唯一实例名称和任务组名称组名</span></span><br><span class=\"line\">                .withIdentity(<span class=\"string\">&quot;job1&quot;</span>, <span class=\"string\">&quot;group1&quot;</span>)</span><br><span class=\"line\">                <span class=\"comment\">//设置jobDataMap数据  &lt;&lt;===============</span></span><br><span class=\"line\">                .usingJobData(<span class=\"string\">&quot;message&quot;</span>,<span class=\"string\">&quot;勇敢牛牛、不怕困难&quot;</span>)</span><br><span class=\"line\">                <span class=\"comment\">//构建实例</span></span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        <span class=\"comment\">//通过TriggerBuilder构建触发器实例</span></span><br><span class=\"line\">        <span class=\"type\">SimpleTrigger</span> <span class=\"variable\">trigger</span> <span class=\"operator\">=</span> TriggerBuilder.newTrigger()</span><br><span class=\"line\">                <span class=\"comment\">//设置触发器唯一实例名称和触发器的组名</span></span><br><span class=\"line\">                .withIdentity(<span class=\"string\">&quot;trigger1&quot;</span>, <span class=\"string\">&quot;group1&quot;</span>)</span><br><span class=\"line\">                <span class=\"comment\">//设置jobDataMap数据   &lt;&lt;===============</span></span><br><span class=\"line\">                .usingJobData(<span class=\"string\">&quot;username&quot;</span>,<span class=\"string\">&quot;张三&quot;</span>)</span><br><span class=\"line\">                <span class=\"comment\">//执行计划，每五秒执行一次</span></span><br><span class=\"line\">                .withSchedule(SimpleScheduleBuilder.repeatSecondlyForever(<span class=\"number\">5</span>))</span><br><span class=\"line\">                <span class=\"comment\">//立即执行</span></span><br><span class=\"line\">                .startNow()</span><br><span class=\"line\">                <span class=\"comment\">//构建实例</span></span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        <span class=\"comment\">//调度器绑定任务实例和触发器</span></span><br><span class=\"line\">        scheduler.scheduleJob(jobDetail,trigger);</span><br><span class=\"line\">        <span class=\"comment\">//开启定时任务</span></span><br><span class=\"line\">        scheduler.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 任务类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloJob</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Job</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">execute</span><span class=\"params\">(JobExecutionContext jobExecutionContext)</span> <span class=\"keyword\">throws</span> JobExecutionException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//通过JobExecutionContext获取JobDetail</span></span><br><span class=\"line\">        <span class=\"type\">JobDetail</span> <span class=\"variable\">jobDetail</span> <span class=\"operator\">=</span> jobExecutionContext.getJobDetail();</span><br><span class=\"line\">        <span class=\"type\">JobKey</span> <span class=\"variable\">jobKey</span> <span class=\"operator\">=</span> jobDetail.getKey();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">jobDetailName</span> <span class=\"operator\">=</span> jobKey.getName();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">jobDetailGroup</span> <span class=\"operator\">=</span> jobKey.getGroup();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">jobClazzNameJobDetail</span> <span class=\"operator\">=</span> jobKey.getClass().getName();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;任务实例的唯一标识名称：&quot;</span> + jobDetailName);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;任务实例的组名：&quot;</span> + jobDetailGroup);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;任务实例绑定的任务类信息：&quot;</span> + jobClazzNameJobDetail);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;-----------------------------------------&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//通过JobExecutionContext获取Trigger</span></span><br><span class=\"line\">        <span class=\"type\">Trigger</span> <span class=\"variable\">trigger</span> <span class=\"operator\">=</span> jobExecutionContext.getTrigger();</span><br><span class=\"line\">        <span class=\"type\">TriggerKey</span> <span class=\"variable\">triggerKey</span> <span class=\"operator\">=</span> trigger.getKey();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">triggerKeyName</span> <span class=\"operator\">=</span> triggerKey.getName();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">triggerKeyGroup</span> <span class=\"operator\">=</span> triggerKey.getGroup();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">triggerClazzName</span> <span class=\"operator\">=</span> triggerKey.getClass().getName();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;触发器的唯一标识名称：&quot;</span> + triggerKeyName);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;触发器的组名：&quot;</span> + triggerKeyGroup);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;触发器绑定的任务类信息：&quot;</span> + triggerClazzName);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;-----------------------------------------&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//通过JobExecutionContext</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">jobClazzName</span> <span class=\"operator\">=</span> jobExecutionContext.getClass().getName();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;job类相关的信息：&quot;</span>+jobClazzName);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;-----------------------------------------&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//获取JobDetail中JobDataMap中的message内容  &lt;&lt;===============</span></span><br><span class=\"line\">        <span class=\"type\">JobDataMap</span> <span class=\"variable\">jobDataMap</span> <span class=\"operator\">=</span> jobDetail.getJobDataMap();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">message</span> <span class=\"operator\">=</span> jobDataMap.getString(<span class=\"string\">&quot;message&quot;</span>);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;从JobDetail-JobDataMap中或到的message内容为：&quot;</span> + message);</span><br><span class=\"line\">        <span class=\"comment\">//获取Trigger中JobDataMap中的username内容   &lt;&lt;===============</span></span><br><span class=\"line\">        <span class=\"type\">JobDataMap</span> <span class=\"variable\">triggerJobDataMap</span> <span class=\"operator\">=</span> trigger.getJobDataMap();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> triggerJobDataMap.getString(<span class=\"string\">&quot;username&quot;</span>);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;从Trigger-JobDataMap中获取到的username内容为：&quot;</span> + username);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;-----------------------------------------&quot;</span>);</span><br><span class=\"line\">        log.info(<span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()) + <span class=\"string\">&quot; | 任务被执行了&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p><img\r\nsrc=\"D:\\Pictures\\typore\\006V2BDqly8hqtay96pxjj310u07l77f.jpg\" /></p>\r\n<h5\r\nid=\"job实现类中添加setter方法对应jobdatamap的键值quartz框架默认的jobfactory实现类在初始化job实例对象时会自动的调用这些setter方法\">2、Job实现类中添加setter方法对应JobDataMap的键值，Quartz框架默认的JobFactory实现类在初始化Job实例对象时会自动的调用这些setter方法</h5>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">调度器的内容是不变的。</span><br><span class=\"line\">注意：如果任务实例和触发器的JobDataMap中使用的是同一个key那么触发器的JobDataMap值会覆盖掉任务实例的值</span><br></pre></td></tr></table></figure>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 任务类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloJob</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Job</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String message;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setMessage</span><span class=\"params\">(String message)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.message = message;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setUsername</span><span class=\"params\">(String username)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.username = username;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">execute</span><span class=\"params\">(JobExecutionContext jobExecutionContext)</span> <span class=\"keyword\">throws</span> JobExecutionException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//通过JobExecutionContext获取JobDetail</span></span><br><span class=\"line\">        <span class=\"type\">JobDetail</span> <span class=\"variable\">jobDetail</span> <span class=\"operator\">=</span> jobExecutionContext.getJobDetail();</span><br><span class=\"line\">        <span class=\"type\">JobKey</span> <span class=\"variable\">jobKey</span> <span class=\"operator\">=</span> jobDetail.getKey();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">jobDetailName</span> <span class=\"operator\">=</span> jobKey.getName();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">jobDetailGroup</span> <span class=\"operator\">=</span> jobKey.getGroup();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">jobClazzNameJobDetail</span> <span class=\"operator\">=</span> jobKey.getClass().getName();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;任务实例的唯一标识名称：&quot;</span> + jobDetailName);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;任务实例的组名：&quot;</span> + jobDetailGroup);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;任务实例绑定的任务类信息：&quot;</span> + jobClazzNameJobDetail);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;-----------------------------------------&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//通过JobExecutionContext获取Trigger</span></span><br><span class=\"line\">        <span class=\"type\">Trigger</span> <span class=\"variable\">trigger</span> <span class=\"operator\">=</span> jobExecutionContext.getTrigger();</span><br><span class=\"line\">        <span class=\"type\">TriggerKey</span> <span class=\"variable\">triggerKey</span> <span class=\"operator\">=</span> trigger.getKey();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">triggerKeyName</span> <span class=\"operator\">=</span> triggerKey.getName();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">triggerKeyGroup</span> <span class=\"operator\">=</span> triggerKey.getGroup();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">triggerClazzName</span> <span class=\"operator\">=</span> triggerKey.getClass().getName();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;触发器的唯一标识名称：&quot;</span> + triggerKeyName);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;触发器的组名：&quot;</span> + triggerKeyGroup);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;触发器绑定的任务类信息：&quot;</span> + triggerClazzName);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;-----------------------------------------&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//通过JobExecutionContext</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">jobClazzName</span> <span class=\"operator\">=</span> jobExecutionContext.getClass().getName();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;job类相关的信息：&quot;</span>+jobClazzName);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;-----------------------------------------&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//获取JobDetail中JobDataMap中的message内容</span></span><br><span class=\"line\">        <span class=\"comment\">//JobDataMap jobDataMap = jobDetail.getJobDataMap();</span></span><br><span class=\"line\">        <span class=\"comment\">//String message = jobDataMap.getString(&quot;message&quot;);</span></span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;从JobDetail-JobDataMap中或到的message内容为：&quot;</span> + message);</span><br><span class=\"line\">        <span class=\"comment\">//获取Trigger中JobDataMap中的username内容</span></span><br><span class=\"line\">        <span class=\"comment\">//JobDataMap triggerJobDataMap = trigger.getJobDataMap();</span></span><br><span class=\"line\">        <span class=\"comment\">//String username = triggerJobDataMap.getString(&quot;username&quot;);</span></span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;从Trigger-JobDataMap中获取到的username内容为：&quot;</span> + username);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;-----------------------------------------&quot;</span>);</span><br><span class=\"line\">        log.info(<span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()) + <span class=\"string\">&quot; | 任务被执行了&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p><img\r\nsrc=\"D:\\Pictures\\typore\\006V2BDqly8hqtazsfjwpj310y08cwi2.jpg\" /></p>\r\n<h5 id=\"获取其他\">3、获取其他</h5>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//获取任务的本次执行时间</span></span><br><span class=\"line\"><span class=\"type\">Date</span> <span class=\"variable\">fireTime</span> <span class=\"operator\">=</span> jobExecutionContext.getFireTime();</span><br><span class=\"line\"><span class=\"comment\">//获取任务的下次执行时间</span></span><br><span class=\"line\"><span class=\"type\">Date</span> <span class=\"variable\">nextFireTime</span> <span class=\"operator\">=</span> jobExecutionContext.getNextFireTime();</span><br><span class=\"line\"></span><br><span class=\"line\">log.info(<span class=\"string\">&quot;任务的本次执行时间：&quot;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>).format(fireTime));</span><br><span class=\"line\">log.info(<span class=\"string\">&quot;任务的下次执行时间：&quot;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>).format(nextFireTime));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<h3 id=\"有状态的job和无状态的job\">11、有状态的Job和无状态的Job</h3>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">有状态的Job可以理解为多次Job调用期间可以持有一些状态信息，这些状态信息存储在JobDataMap中，而默认的无状态Job每次调用时都会创建一个新的JobDataMap</span><br></pre></td></tr></table></figure>\r\n<h5\r\nid=\"job默认是无状态的通过如下示例查看\">1、Job默认是无状态的，通过如下示例查看</h5>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.scholartang.quartz.main;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.scholartang.quartz.job.HelloJob;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.quartz.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.quartz.impl.StdSchedulerFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.quartz.impl.triggers.CoreTrigger;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 调度器</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloSchedulerDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> SchedulerException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//从调度工厂中获取调度器实例</span></span><br><span class=\"line\">        <span class=\"type\">Scheduler</span> <span class=\"variable\">scheduler</span> <span class=\"operator\">=</span> StdSchedulerFactory.getDefaultScheduler();</span><br><span class=\"line\">        <span class=\"comment\">//通过JobBuilder构建一个任务实例</span></span><br><span class=\"line\">        <span class=\"type\">JobDetail</span> <span class=\"variable\">jobDetail</span> <span class=\"operator\">=</span> JobBuilder.newJob(HelloJob.class)</span><br><span class=\"line\">                <span class=\"comment\">//设置任务的唯一实例名称和任务组名称组名</span></span><br><span class=\"line\">                .withIdentity(<span class=\"string\">&quot;job1&quot;</span>, <span class=\"string\">&quot;group1&quot;</span>)</span><br><span class=\"line\">                <span class=\"comment\">//设置jobDataMap数据   &lt;&lt;===============</span></span><br><span class=\"line\">                .usingJobData(<span class=\"string\">&quot;count&quot;</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"comment\">//构建实例</span></span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        <span class=\"comment\">//通过TriggerBuilder构建触发器实例</span></span><br><span class=\"line\">        <span class=\"type\">SimpleTrigger</span> <span class=\"variable\">trigger</span> <span class=\"operator\">=</span> TriggerBuilder.newTrigger()</span><br><span class=\"line\">                <span class=\"comment\">//设置触发器唯一实例名称和触发器的组名</span></span><br><span class=\"line\">                .withIdentity(<span class=\"string\">&quot;trigger1&quot;</span>, <span class=\"string\">&quot;group1&quot;</span>)</span><br><span class=\"line\">                <span class=\"comment\">//执行计划，每五秒执行一次</span></span><br><span class=\"line\">                .withSchedule(SimpleScheduleBuilder.repeatSecondlyForever(<span class=\"number\">5</span>))</span><br><span class=\"line\">                <span class=\"comment\">//立即执行</span></span><br><span class=\"line\">                .startNow()</span><br><span class=\"line\">                <span class=\"comment\">//构建实例</span></span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        <span class=\"comment\">//调度器绑定任务实例和触发器</span></span><br><span class=\"line\">        scheduler.scheduleJob(jobDetail,trigger);</span><br><span class=\"line\">        <span class=\"comment\">//开启定时任务</span></span><br><span class=\"line\">        scheduler.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 任务类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloJob</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Job</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer count;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setCount</span><span class=\"params\">(Integer count)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.count = count;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">execute</span><span class=\"params\">(JobExecutionContext jobExecutionContext)</span> <span class=\"keyword\">throws</span> JobExecutionException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//通过JobExecutionContext获取JobDetail</span></span><br><span class=\"line\">        <span class=\"type\">JobDetail</span> <span class=\"variable\">jobDetail</span> <span class=\"operator\">=</span> jobExecutionContext.getJobDetail();</span><br><span class=\"line\">        count++;</span><br><span class=\"line\">        jobDetail.getJobDataMap().put(<span class=\"string\">&quot;count&quot;</span>,count);</span><br><span class=\"line\">        log.info(<span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()) + <span class=\"string\">&quot; | 任务被执行了&quot;</span>);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;当前count的值为：&quot;</span> + count);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p><img\r\nsrc=\"D:\\Pictures\\typore\\006V2BDqly8hqtb29vk90j30va0dste1.jpg\" /></p>\r\n<h5\r\nid=\"通过persistjobdataafterexecution注解将job设置为由状态的\">2、通过@PersistJobDataAfterExecution注解将Job设置为由状态的</h5>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 任务类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@PersistJobDataAfterExecution</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloJob</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Job</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer count;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setCount</span><span class=\"params\">(Integer count)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.count = count;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">execute</span><span class=\"params\">(JobExecutionContext jobExecutionContext)</span> <span class=\"keyword\">throws</span> JobExecutionException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//通过JobExecutionContext获取JobDetail</span></span><br><span class=\"line\">        <span class=\"type\">JobDetail</span> <span class=\"variable\">jobDetail</span> <span class=\"operator\">=</span> jobExecutionContext.getJobDetail();</span><br><span class=\"line\">        count++;</span><br><span class=\"line\">        jobDetail.getJobDataMap().put(<span class=\"string\">&quot;count&quot;</span>,count);</span><br><span class=\"line\">        log.info(<span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()) + <span class=\"string\">&quot; | 任务被执行了&quot;</span>);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;当前count的值为：&quot;</span> + count);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p><img\r\nsrc=\"D:\\Pictures\\typore\\006V2BDqly8hqtb51a8ltj30rp0ivwlr.jpg\" /></p>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果Job类没有添加@PersistJobDataAfterExecution注解，每次调用时都会创建一个新的JobDataMap。不会累加count的值</span><br><span class=\"line\">如果Job类添加了@PersistJobDataAfterExecution注解，每次调用期间都会持有一些状态信息，。会累加count的值</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"trigger触发器的介绍\">12、Trigger触发器的介绍</h3>\r\n<p><img\r\nsrc=\"D:\\Pictures\\typore\\006V2BDqly8hqtb60xbe2j30v40e075w.jpg\" /></p>\r\n<p>上图即是Quartz的触发器类型，常用的为SimpleTriggerImpl，CronTriggerImpl</p>\r\n<h5 id=\"simpletriggerimpl的使用\">1、SimpleTriggerImpl的使用</h5>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">设置触发的开始时间和结束时间及执行计划</span><br></pre></td></tr></table></figure>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 任务类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@PersistJobDataAfterExecution</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloJobTrigger</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Job</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">execute</span><span class=\"params\">(JobExecutionContext jobExecutionContext)</span> <span class=\"keyword\">throws</span> JobExecutionException &#123;</span><br><span class=\"line\">        <span class=\"type\">Trigger</span> <span class=\"variable\">trigger</span> <span class=\"operator\">=</span> jobExecutionContext.getTrigger();</span><br><span class=\"line\">        <span class=\"type\">JobKey</span> <span class=\"variable\">jobKey</span> <span class=\"operator\">=</span> trigger.getJobKey();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;触发器名称：&quot;</span> + jobKey.getName() + <span class=\"string\">&quot; | 触发器组名：&quot;</span> + jobKey.getGroup() );</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;触发器开始执行时间：&quot;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>).format(trigger.getStartTime()) + <span class=\"string\">&quot; | 触发器结束执行时间：&quot;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>).format(trigger.getEndTime()));</span><br><span class=\"line\">        log.info(<span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()) + <span class=\"string\">&quot; | 任务被执行了&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 调度器</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloSchedulerDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> SchedulerException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//开始时间 &amp; 结束时间</span></span><br><span class=\"line\">        <span class=\"type\">Date</span> <span class=\"variable\">startTime</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">        <span class=\"type\">Date</span> <span class=\"variable\">endTime</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">        endTime.setTime(endTime.getTime() + <span class=\"number\">20000</span>);</span><br><span class=\"line\">        <span class=\"comment\">//从调度工厂中获取调度器实例</span></span><br><span class=\"line\">        <span class=\"type\">Scheduler</span> <span class=\"variable\">scheduler</span> <span class=\"operator\">=</span> StdSchedulerFactory.getDefaultScheduler();</span><br><span class=\"line\">        <span class=\"comment\">//通过JobBuilder构建一个任务实例</span></span><br><span class=\"line\">        <span class=\"type\">JobDetail</span> <span class=\"variable\">jobDetail</span> <span class=\"operator\">=</span> JobBuilder.newJob(HelloJobTrigger.class)</span><br><span class=\"line\">                <span class=\"comment\">//设置任务的唯一实例名称和任务组名称组名</span></span><br><span class=\"line\">                .withIdentity(<span class=\"string\">&quot;job1&quot;</span>, <span class=\"string\">&quot;group1&quot;</span>)</span><br><span class=\"line\">                <span class=\"comment\">//构建实例</span></span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        <span class=\"comment\">//通过TriggerBuilder构建触发器实例</span></span><br><span class=\"line\">        <span class=\"type\">SimpleTrigger</span> <span class=\"variable\">trigger</span> <span class=\"operator\">=</span> TriggerBuilder.newTrigger()</span><br><span class=\"line\">                <span class=\"comment\">//设置触发器唯一实例名称和触发器的组名</span></span><br><span class=\"line\">                .withIdentity(<span class=\"string\">&quot;trigger1&quot;</span>, <span class=\"string\">&quot;group1&quot;</span>)</span><br><span class=\"line\">                <span class=\"comment\">//执行计划，每五秒执行一次</span></span><br><span class=\"line\">                .withSchedule(SimpleScheduleBuilder.repeatSecondlyForever(<span class=\"number\">5</span>)</span><br><span class=\"line\">                               .withRepeatCount(SimpleTrigger.REPEAT_INDEFINITELY) <span class=\"comment\">//重复执行次数</span></span><br><span class=\"line\">                             )</span><br><span class=\"line\">                <span class=\"comment\">//开始执行时间</span></span><br><span class=\"line\">                .startAt(startTime)</span><br><span class=\"line\">                <span class=\"comment\">//结束执行时间</span></span><br><span class=\"line\">                .endAt(endTime)</span><br><span class=\"line\">                <span class=\"comment\">//构建实例</span></span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        <span class=\"comment\">//调度器绑定任务实例和触发器</span></span><br><span class=\"line\">        scheduler.scheduleJob(jobDetail,trigger);</span><br><span class=\"line\">        <span class=\"comment\">//开启定时任务</span></span><br><span class=\"line\">        scheduler.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">注意：</span><br><span class=\"line\">SimpleTrigger的属性有：开始时间，结束时间，重复次数和重复时间间隔</span><br><span class=\"line\">重复次数的值可以为0、正数、或常量。例如：SimpleTrigger.REPEAT_INDEFINITELY</span><br><span class=\"line\">重复的时间间隔属性值必须为大于0或者长整型的整数，以毫秒为为时间单位，当重复的时间间隔为0时，意味着与Trigger同时触发执行</span><br><span class=\"line\">如果有指定结束时间属性值，则结束时间属性优先于重复次数属性，这样的好处在于；当我们需要创建一个每间隔10秒触发一次直到指定的结束时间的Trigger，而无需去计算从开始到结束的所重复执行次数。我们只需要简单的执行结束时间和使用REPEAT_INDEFINITELY作为重复次数的属性值即可</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"crontrigger触发器的介绍\">13、CronTrigger触发器的介绍</h3>\r\n<h5 id=\"crontrigger简介\">1、CronTrigger简介</h5>\r\n<p>如果需要像日历那样按日程来触发任务，而不是像SimpleTrigger那样每隔特定的间隔时间触发，CronTriggers通常比SimpleTrigger更有用，因为它是基于日历的任务调度器</p>\r\n<p>使用CronTrigger，可以指定诸如每个周五的12点，或者每天的9点等等…这样的日程来安排触发。甚至还可以像SimpleTrigger一样，CornTrigger也有一个startTime以指定日程从什么时候开始，也有一个（可选的）endTime以指定任何日期不再继续配置、资源SchedulerFactory</p>\r\n<h5 id=\"corn表达式\">2、corn表达式</h5>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">corn表达式相信大家并不陌生，corn表达式被用来配置CronTrigger实例。corn表达式是一个由7个表达式组成的字符串。每一个子表达式描述了一个单独的日程细节。这些子表达式用空格分隔，分别表示：seconds秒、minutes分钟、hours小时、day-of-month月中的天、moth月，year年</span><br></pre></td></tr></table></figure>\r\n<p>在线生成corn表达式：https://cron.qqe2.com/</p>\r\n<p>cron表达式详细介绍以及常用的例子：https://developer.aliyun.com/article/1349827</p>\r\n<h5 id=\"案例\">案例：</h5>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 任务类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloJonCornTrigger</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Job</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">execute</span><span class=\"params\">(JobExecutionContext context)</span> <span class=\"keyword\">throws</span> JobExecutionException &#123;</span><br><span class=\"line\">        log.info(<span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()) + <span class=\"string\">&quot; | 任务被执行了&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 调度器</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloSchedulerDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> SchedulerException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//从调度工厂中获取调度器实例</span></span><br><span class=\"line\">        <span class=\"type\">Scheduler</span> <span class=\"variable\">scheduler</span> <span class=\"operator\">=</span> StdSchedulerFactory.getDefaultScheduler();</span><br><span class=\"line\">        <span class=\"comment\">//通过JobBuilder构建一个任务实例</span></span><br><span class=\"line\">        <span class=\"type\">JobDetail</span> <span class=\"variable\">jobDetail</span> <span class=\"operator\">=</span> JobBuilder.newJob(HelloJonCornTrigger.class)</span><br><span class=\"line\">                <span class=\"comment\">//设置任务的唯一实例名称和任务组名称组名</span></span><br><span class=\"line\">                .withIdentity(<span class=\"string\">&quot;job1&quot;</span>, <span class=\"string\">&quot;group1&quot;</span>)</span><br><span class=\"line\">                <span class=\"comment\">//构建实例</span></span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        <span class=\"comment\">//通过TriggerBuilder构建触发器实例</span></span><br><span class=\"line\">        <span class=\"type\">Trigger</span> <span class=\"variable\">trigger</span> <span class=\"operator\">=</span> TriggerBuilder.newTrigger()</span><br><span class=\"line\">                <span class=\"comment\">//设置触发器唯一实例名称和触发器的组名</span></span><br><span class=\"line\">                .withIdentity(<span class=\"string\">&quot;trigger1&quot;</span>, <span class=\"string\">&quot;group1&quot;</span>)</span><br><span class=\"line\">            \t<span class=\"comment\">//立刻执行</span></span><br><span class=\"line\">                .startNow()</span><br><span class=\"line\">                <span class=\"comment\">//每年的每月的每个星期得每天的每小时的每秒都会执行</span></span><br><span class=\"line\">                .withSchedule(CronScheduleBuilder.cronSchedule(<span class=\"string\">&quot;* * * * * ?&quot;</span>))</span><br><span class=\"line\">                <span class=\"comment\">//构建实例</span></span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        <span class=\"comment\">//调度器绑定任务实例和触发器</span></span><br><span class=\"line\">        scheduler.scheduleJob(jobDetail,trigger);</span><br><span class=\"line\">        <span class=\"comment\">//开启定时任务</span></span><br><span class=\"line\">        scheduler.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"配置资源schedulerfactory\">14、配置、资源SchedulerFactory</h3>\r\n<p>Quartz以模块方式架构，因此要使它运行。几个组件必须要很好的咬合在一起。【现在已经有了一些现成的助手可以完成这些工作】</p>\r\n<p>所有scheduler实例是由SchedulerFactory创建。Quartz的三个核心概念：调度器，任务，触发器。</p>\r\n<p>调度器，任务，触发器三者之间的关系为：</p>\r\n<p><img\r\nsrc=\"D:\\Pictures\\typore\\006V2BDqly8hqtbbbl8bkj30nw0d60to.jpg\" /></p>\r\n<p>一个作业，比较重要的三个要素是Scheduler，JobDetail，Trigger；而Trigger对于Job而言就好比一个驱动器；没有触发器来定时驱动作业，作业就无法运行；对于Job而言，一个Job可以对应多个Trigger，但对于Trigger而言，一个Trigger只能对应一个Job；所以一个Trigger只能指派给一个Job；如果需要一个更复杂的触发计划，可以创建多个Trigger并指派他妈给同一个Job</p>\r\n<h5 id=\"scheduler的创建方式\">Scheduler的创建方式</h5>\r\n<ul>\r\n<li><p>StdSchedulerFactory</p>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Quartz默认的SchedulerFactory</span><br><span class=\"line\"></span><br><span class=\"line\">使用一组参数（java.util.Properties）来创建和初始化Quartz调度器</span><br><span class=\"line\">配置参数一般存储在quartz.properties文件中</span><br><span class=\"line\">调用getScheduler方法就能穿件和初始化调度器对象</span><br><span class=\"line\"><span class=\"type\">SchedulerFactory</span> <span class=\"variable\">schedulerFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StdSchedulerFactory</span>();</span><br><span class=\"line\"><span class=\"type\">Scheduler</span> <span class=\"variable\">scheduler</span> <span class=\"operator\">=</span> schedulerFactory.getScheduler();</span><br><span class=\"line\"></span><br><span class=\"line\">-----用法一：输出调度器开始的时间</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//调度器绑定任务实例和触发器，方法返回调开始执行的时间</span></span><br><span class=\"line\"><span class=\"type\">Date</span> <span class=\"variable\">date</span> <span class=\"operator\">=</span> scheduler.scheduleJob(jobDetail, trigger);</span><br><span class=\"line\"></span><br><span class=\"line\">-----用法二：启动任务调度</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//开启任务调度</span></span><br><span class=\"line\">scheduler.start();</span><br><span class=\"line\">-----用法三：任务调度挂起【暂停操作】</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//任务调度挂起</span></span><br><span class=\"line\">scheduler.standby();</span><br><span class=\"line\"></span><br><span class=\"line\">-----用法四：任务调度关闭</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//关闭任务调度</span></span><br><span class=\"line\">scheduler.shutdown(); <span class=\"comment\">//默认为false</span></span><br><span class=\"line\"><span class=\"comment\">//scheduler.shutdown(true);  表示等待所有正在执行的Job执行完毕后，再关闭&gt;Scheduler</span></span><br><span class=\"line\"><span class=\"comment\">//scheduler.shutdown(false); 表示直接关闭Scheduler</span></span><br></pre></td></tr></table></figure></li>\r\n<li><p>DirectSchedulerFactory</p>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DirectSchedulerFactory是对SchedulerFactory的直接实现，通过它可以直接构建scheduler，threadpool等</span><br><span class=\"line\"></span><br><span class=\"line\">DirectSchedulerFactory directSchedulerFactory = DirectSchedulerFactory.getInstance();</span><br><span class=\"line\">Scheduler scheduler = directSchedulerFactory.getScheduler();</span><br></pre></td></tr></table></figure></li>\r\n</ul>\r\n<h3 id=\"quartz监听器\">15、Quartz监听器</h3>\r\n<h5 id=\"概念\">1、概念</h5>\r\n<p>Quartz的监听器用于当任务调度中你所关注事件发生时，能够及时获取这一事件的通知。类似于任务执行过程中的邮件，短信的提醒。\r\nQuartz监听器主要有JobListener、TriggerListener、SchedulerListener三种，顾名思义，分别表示任务，触发器，调度器对应的监听器。三者的使用方法类似，在开始介绍三种监听器之前，需要明确两个概念：全局监听器与非全局监听器。\r\n两者的区别在于： 全局监听器只能够接收到所有的Job、Trigger的事件通知。\r\n而非全局监听器只能接收到在其上注册的Job或Trigger的事件，不在其上注册的Job或Trigger则不会进行监听。</p>\r\n<h5 id=\"joblistener监听器的使用\">2、JobListener监听器的使用</h5>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">obListener是一个接口，它内部有四个方法。详细解析如下所示；</span><br><span class=\"line\">JobListener用于监听任务，通常需要被监听的任务类实现该接口</span><br></pre></td></tr></table></figure>\r\n<h6 id=\"joblistener源码\">1、JobListener源码</h6>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public interface JobListener &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 用于获取该JobListener的名称</span><br><span class=\"line\">     */</span><br><span class=\"line\">    String getName();</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * scheduler在JobDetail将要被执行时调用这个方法【JobDetail执行前】</span><br><span class=\"line\">     * @see #jobExecutionVetoed(JobExecutionContext)</span><br><span class=\"line\">     */</span><br><span class=\"line\">    void jobToBeExecuted(JobExecutionContext context);</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * scheduler在JobDetail即将被执行，但又被TriggerListener否决时会调用该方法</span><br><span class=\"line\">     * @see #jobToBeExecuted(JobExecutionContext)</span><br><span class=\"line\">     */</span><br><span class=\"line\">    void jobExecutionVetoed(JobExecutionContext context);</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * scheduler在JobDetail被执行后调用这个方法</span><br><span class=\"line\">     */</span><br><span class=\"line\">    void jobWasExecuted(JobExecutionContext context,JobExecutionException jobException);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<h6 id=\"使用案例\">1、使用案例</h6>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">创建任务类：HelloJobToListener</span><br><span class=\"line\">创建任务调度类：HelloSchedulerDemoListener</span><br><span class=\"line\">创建job监听类：MyJobListener</span><br><span class=\"line\">任务类实现Job接口，并重写execute方法；</span><br><span class=\"line\">任务调度类创建任务执行实例和触发器与调度器进行绑定。并设置对job的监听【全局监听，局部监听】</span><br><span class=\"line\">job监听类实现JobListener接口，重写对应的方法。</span><br></pre></td></tr></table></figure>\r\n<p><strong>HelloJobToListener.java</strong></p>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 任务类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloJobToListener</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Job</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">execute</span><span class=\"params\">(JobExecutionContext context)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()) + <span class=\"string\">&quot; | 任务被执行了&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p><strong>MyJobListener.java</strong></p>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> JobListener</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyJobListener</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">JobListener</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.getClass().getSimpleName();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;当前JobListener的名称为：&quot;</span> + name);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">jobToBeExecuted</span><span class=\"params\">(JobExecutionContext context)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> context.getJobDetail().getJobClass().getName();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;当前Job的名称为：&quot;</span> + name + <span class=\"string\">&quot;，JobDetail将要被执行了...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">jobExecutionVetoed</span><span class=\"params\">(JobExecutionContext context)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> context.getJobDetail().getJobClass().getName();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;当前Job的名称为：&quot;</span> + name + <span class=\"string\">&quot;，JobDetail将要被执，但被TriggerListener否决...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">jobWasExecuted</span><span class=\"params\">(JobExecutionContext context, JobExecutionException jobException)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> context.getJobDetail().getJobClass().getName();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;当前Job的名称为：&quot;</span> + name + <span class=\"string\">&quot;，JobDetail执行完成了...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p><strong>HelloSchedulerDemoListener.java</strong></p>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 调度器</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloSchedulerDemoListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> SchedulerException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//通过调度器工厂构建调度器实例</span></span><br><span class=\"line\">        <span class=\"type\">Scheduler</span> <span class=\"variable\">scheduler</span> <span class=\"operator\">=</span> StdSchedulerFactory.getDefaultScheduler();</span><br><span class=\"line\">        <span class=\"comment\">//通过JobBuilder构建JobDetail</span></span><br><span class=\"line\">        <span class=\"type\">JobDetail</span> <span class=\"variable\">jobDetail</span> <span class=\"operator\">=</span> JobBuilder.newJob(HelloJobToListener.class)</span><br><span class=\"line\">                .withIdentity(<span class=\"string\">&quot;job1&quot;</span>, <span class=\"string\">&quot;group1&quot;</span>)</span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        <span class=\"comment\">//通过TriggerBuilder构建Trigger</span></span><br><span class=\"line\">        <span class=\"type\">CronTrigger</span> <span class=\"variable\">trigger</span> <span class=\"operator\">=</span> TriggerBuilder.newTrigger()</span><br><span class=\"line\">                .withIdentity(<span class=\"string\">&quot;trigger1&quot;</span>, <span class=\"string\">&quot;group1&quot;</span>)</span><br><span class=\"line\">                .startNow()</span><br><span class=\"line\">                .withSchedule(CronScheduleBuilder.cronSchedule(<span class=\"string\">&quot;3 * * * * ?&quot;</span>))</span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        <span class=\"comment\">//调度器绑定JobDetail和Trigger</span></span><br><span class=\"line\">        scheduler.scheduleJob(jobDetail, trigger);</span><br><span class=\"line\">        <span class=\"comment\">//绑定job监听</span></span><br><span class=\"line\">        <span class=\"comment\">//1.全局绑定，所有的job在被调度的时候都会被监听</span></span><br><span class=\"line\">        <span class=\"comment\">//scheduler.getListenerManager().addJobListener(new MyJobListener(), EverythingMatcher.allJobs());</span></span><br><span class=\"line\">        <span class=\"comment\">//2.局部监听，用来监听指定的job</span></span><br><span class=\"line\">        scheduler.getListenerManager().addJobListener(<span class=\"keyword\">new</span> <span class=\"title class_\">MyJobListener</span>(), KeyMatcher</span><br><span class=\"line\">                <span class=\"comment\">//jobKey中的name参数和group参数对应的就是任务实例【JobDetail】的name和group</span></span><br><span class=\"line\">                .keyEquals(JobKey.jobKey(<span class=\"string\">&quot;job1&quot;</span>,<span class=\"string\">&quot;group1&quot;</span>)));</span><br><span class=\"line\">        <span class=\"comment\">//开启调度</span></span><br><span class=\"line\">        scheduler.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<h5 id=\"执行结果\">执行结果：<img\r\nsrc=\"D:\\Pictures\\typore\\006V2BDqly8hqtbfcr51tj313p093gpi.jpg\" /></h5>\r\n<h5 id=\"triggerlistener监听器的使用\">3、TriggerListener监听器的使用</h5>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">任务调度过程中，与触发器Trigger相关的事件包括：触发器触发，触发器未正常触发，触发器触发完成</span><br></pre></td></tr></table></figure>\r\n<h6 id=\"triggerlistener源码\">1、TriggerListener源码</h6>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">TriggerListener</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用于触发器的名称</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    String <span class=\"title function_\">getName</span><span class=\"params\">()</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 当与监听器相关联的Trigger被触发，Job上的execute()方法将被执行时，Scheduler就调用该方法【job执行前】</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">triggerFired</span><span class=\"params\">(Trigger trigger, JobExecutionContext context)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 在Trigger触发后，Job将要被执行由Scheduler调用这个方法。Trigger Listener给了一个选择去否决Job的执行。假如这个方法返回true，这个Job将不会为此次Trigger而得到触发【job执行前】</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"type\">boolean</span> <span class=\"title function_\">vetoJobExecution</span><span class=\"params\">(Trigger trigger, JobExecutionContext context)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * scheduler调用这个方法是在Trigger错过触发时，你应该关注此方法中持续时间长的逻辑；在出现许多错过触发的Trigger时，长逻辑会导致骨牌效应，你应当保持这个方法尽量的少使用</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">triggerMisfired</span><span class=\"params\">(Trigger trigger)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Trigger被触发并完成了Job的执行，scheduler调用这个方法</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">triggerComplete</span><span class=\"params\">(Trigger trigger, JobExecutionContext context,</span></span><br><span class=\"line\"><span class=\"params\">            CompletedExecutionInstruction triggerInstructionCode)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<h6 id=\"使用案例-1\">2、使用案例</h6>\r\n<p><strong>HelloJobToTrigger.java</strong></p>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 任务类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloJobToTrigger</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Job</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">execute</span><span class=\"params\">(JobExecutionContext jobExecutionContext)</span> <span class=\"keyword\">throws</span> JobExecutionException &#123;</span><br><span class=\"line\">        log.info(<span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()) + <span class=\"string\">&quot; | 任务被执行...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p><strong>HelloJobToTrigger.java</strong></p>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> TriggerListener</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyTriggerListener</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">TriggerListener</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">simpleName</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.getClass().getSimpleName();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> simpleName;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">triggerFired</span><span class=\"params\">(Trigger trigger, JobExecutionContext jobExecutionContext)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> trigger.getKey().getName();</span><br><span class=\"line\">        log.info(name + <span class=\"string\">&quot; | Job上的execute()方法将被执行时，Scheduler就调用该方法&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">vetoJobExecution</span><span class=\"params\">(Trigger trigger, JobExecutionContext jobExecutionContext)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> trigger.getKey().getName();</span><br><span class=\"line\">        log.info(name + <span class=\"string\">&quot; | Job将要被执行由Scheduler调用这个方法。Trigger Listener给了一个选择去否决Job的执行为&quot;</span> + (temp ? <span class=\"string\">&quot;为此次Trigger触发&quot;</span> : <span class=\"string\">&quot;不为此次Trigger触发&quot;</span>));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">triggerMisfired</span><span class=\"params\">(Trigger trigger)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> trigger.getKey().getName();</span><br><span class=\"line\">        log.info(name + <span class=\"string\">&quot; ｜ scheduler调用这个方法是在Trigger错过触发时调用该方法&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">triggerComplete</span><span class=\"params\">(Trigger trigger, JobExecutionContext jobExecutionContext, Trigger.CompletedExecutionInstruction completedExecutionInstruction)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> trigger.getKey().getName();</span><br><span class=\"line\">        log.info(name + <span class=\"string\">&quot; | Trigger被触发并完成了Job的执行，scheduler调用这个方法&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p><strong>HelloSchedulerDemoTrigger.java</strong></p>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 调度器</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloSchedulerDemoTrigger</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> SchedulerException &#123;</span><br><span class=\"line\">        <span class=\"type\">Scheduler</span> <span class=\"variable\">scheduler</span> <span class=\"operator\">=</span> StdSchedulerFactory.getDefaultScheduler();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">JobDetail</span> <span class=\"variable\">jobDetail</span> <span class=\"operator\">=</span> JobBuilder.newJob(HelloJobToTrigger.class)</span><br><span class=\"line\">                .withIdentity(<span class=\"string\">&quot;job1&quot;</span>, <span class=\"string\">&quot;group1&quot;</span>)</span><br><span class=\"line\">                .build();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">CronTrigger</span> <span class=\"variable\">trigger</span> <span class=\"operator\">=</span> TriggerBuilder.newTrigger()</span><br><span class=\"line\">                .withIdentity(<span class=\"string\">&quot;trigger1&quot;</span>, <span class=\"string\">&quot;group1&quot;</span>)</span><br><span class=\"line\">                .startNow()</span><br><span class=\"line\">                .withSchedule(CronScheduleBuilder.cronSchedule(<span class=\"string\">&quot;3 * * * * ?&quot;</span>))</span><br><span class=\"line\">                .build();</span><br><span class=\"line\"></span><br><span class=\"line\">        scheduler.scheduleJob(jobDetail, trigger);</span><br><span class=\"line\">        <span class=\"comment\">//全局监听</span></span><br><span class=\"line\">        scheduler.getListenerManager().addTriggerListener(<span class=\"keyword\">new</span> <span class=\"title class_\">MyTriggerListener</span>(), EverythingMatcher.allTriggers());</span><br><span class=\"line\">        <span class=\"comment\">//局部监听</span></span><br><span class=\"line\">        <span class=\"comment\">//scheduler.getListenerManager().addTriggerListener(new MyTriggerListener(), KeyMatcher.keyEquals(TriggerKey.triggerKey(&quot;trigger1&quot;, &quot;group1&quot;)));</span></span><br><span class=\"line\">        scheduler.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p><strong>执行结果</strong>：</p>\r\n<p><img\r\nsrc=\"D:\\Pictures\\typore\\006V2BDqly8hqtbj5ts1oj323k0rsqgq.jpg\" /></p>\r\n<h5 id=\"scheduler-listener监听器的使用\">4.Scheduler\r\nListener监听器的使用</h5>\r\n<h6 id=\"scheduler-listener源码\">1、Scheduler Listener源码</h6>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">SchedulerListener</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用于部署Job Detail时调用</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">jobScheduled</span><span class=\"params\">(Trigger trigger)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用于卸载JobDetail时调用</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">jobUnscheduled</span><span class=\"params\">(TriggerKey triggerKey)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 当一个Trigger来到了再也不会触发的状态时调用这个方法。除非这个Job已设置成了持久性，否则它就会中scheduler中移除</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">triggerFinalized</span><span class=\"params\">(Trigger trigger)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * scheduler调用这个方法时发生在一个Trigger被暂停时调用。</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">triggerPaused</span><span class=\"params\">(TriggerKey triggerKey)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * scheduler调用这个方法时发生在一个Trigger组被暂停时调用。</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">triggersPaused</span><span class=\"params\">(String triggerGroup)</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * scheduler调用这个方法发生在为一个Trigger从暂停中恢复时</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">triggerResumed</span><span class=\"params\">(TriggerKey triggerKey)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * scheduler调用这个方法发生在为一个Trigger组从暂停中恢复时</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">triggersResumed</span><span class=\"params\">(String triggerGroup)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 添加任务时被调用</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">jobAdded</span><span class=\"params\">(JobDetail jobDetail)</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 删除任务时被调用</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">jobDeleted</span><span class=\"params\">(JobKey jobKey)</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 暂停任务时被调</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">jobPaused</span><span class=\"params\">(JobKey jobKey)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 暂停任务组时被调用</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">jobsPaused</span><span class=\"params\">(String jobGroup)</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 恢复任务时被调用</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">jobResumed</span><span class=\"params\">(JobKey jobKey)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 恢复任务组时被调用</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">jobsResumed</span><span class=\"params\">(String jobGroup)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 在scheduler的政策运行期间发生严重错误时被调用</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">schedulerError</span><span class=\"params\">(String msg, SchedulerException cause)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 在scheduler处于挂载状态时被调用</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">schedulerInStandbyMode</span><span class=\"params\">()</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 在scheduler开启时被调用</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">schedulerStarted</span><span class=\"params\">()</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 当调度程序启动时调用该方法</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">schedulerStarting</span><span class=\"params\">()</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 当scheduler关闭时调用该方法</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">schedulerShutdown</span><span class=\"params\">()</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 当调度程序关闭时调用</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">schedulerShuttingdown</span><span class=\"params\">()</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 当scheduler中的数据被清除时，调用该方法</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">schedulingDataCleared</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<h6 id=\"使用案例-2\">2、使用案例：</h6>\r\n<p><strong>HelloJobToScheduler.java</strong></p>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 任务类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloJobToScheduler</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Job</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">execute</span><span class=\"params\">(JobExecutionContext jobExecutionContext)</span> <span class=\"keyword\">throws</span> JobExecutionException &#123;</span><br><span class=\"line\">        log.info(<span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()) + <span class=\"string\">&quot; | 任务被执行...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p><strong>MySchedulerListener.java</strong></p>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> TriggerListener</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MySchedulerListener</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">SchedulerListener</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">jobScheduled</span><span class=\"params\">(Trigger trigger)</span> &#123;</span><br><span class=\"line\">        log.info(trigger.getKey().getName() + <span class=\"string\">&quot; | 用于部署Job Detail时调用&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">jobUnscheduled</span><span class=\"params\">(TriggerKey triggerKey)</span> &#123;</span><br><span class=\"line\">        log.info(triggerKey.getName() + <span class=\"string\">&quot; | 用于卸载JobDetail时调用&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">triggerFinalized</span><span class=\"params\">(Trigger trigger)</span> &#123;</span><br><span class=\"line\">        log.info(trigger.getKey().getName() + <span class=\"string\">&quot; | 当一个Trigger来到了再也不会触发的状态时调用这个方法。除非这个Job已设置成了持久性，否则它就会中scheduler中移除&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">triggerPaused</span><span class=\"params\">(TriggerKey triggerKey)</span> &#123;</span><br><span class=\"line\">        log.info(triggerKey.getName() + <span class=\"string\">&quot; | scheduler调用这个方法时发生在一个Trigger被暂停时调用。&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">triggersPaused</span><span class=\"params\">(String triggerGroup)</span> &#123;</span><br><span class=\"line\">        log.info(triggerGroup + <span class=\"string\">&quot; | scheduler调用这个方法时发生在一个Trigger组被暂停时调用。&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">triggerResumed</span><span class=\"params\">(TriggerKey triggerKey)</span> &#123;</span><br><span class=\"line\">        log.info(triggerKey.getName() + <span class=\"string\">&quot; | scheduler调用这个方法发生在为一个Trigger从暂停中恢复时&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">triggersResumed</span><span class=\"params\">(String triggerGroup)</span> &#123;</span><br><span class=\"line\">        log.info(triggerGroup + <span class=\"string\">&quot; | scheduler调用这个方法发生在为一个Trigger组从暂停中恢复时&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">jobAdded</span><span class=\"params\">(JobDetail jobDetail)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;添加任务时被调用&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">jobDeleted</span><span class=\"params\">(JobKey jobKey)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;删除任务时被调用&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">jobPaused</span><span class=\"params\">(JobKey jobKey)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;暂停任务时被调&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">jobsPaused</span><span class=\"params\">(String jobGroup)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;暂停任务组时被调用&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">jobResumed</span><span class=\"params\">(JobKey jobKey)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;恢复任务时被调用&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">jobsResumed</span><span class=\"params\">(String jobGroup)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;恢复任务组时被调用&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">schedulerError</span><span class=\"params\">(String msg, SchedulerException cause)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;在scheduler的政策运行期间发生严重错误时被调用&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">schedulerInStandbyMode</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;在scheduler处于挂载状态时被调用&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">schedulerStarted</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;在scheduler开启时被调用&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">schedulerStarting</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;当调度程序启动时调用该方法&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">schedulerShutdown</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;当scheduler关闭时调用该方法&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">schedulerShuttingdown</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;当调度程序关闭时调用&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">schedulingDataCleared</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;当scheduler中的数据被清除时，调用该方法&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<p><strong>HelloSchedulerDemoScheduler.java</strong></p>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 调度器</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloSchedulerDemoScheduler</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">Scheduler</span> <span class=\"variable\">scheduler</span> <span class=\"operator\">=</span> StdSchedulerFactory.getDefaultScheduler();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">JobDetail</span> <span class=\"variable\">jobDetail</span> <span class=\"operator\">=</span> JobBuilder.newJob(HelloJobToScheduler.class)</span><br><span class=\"line\">                .withIdentity(<span class=\"string\">&quot;job1&quot;</span>, <span class=\"string\">&quot;group1&quot;</span>)</span><br><span class=\"line\">                .build();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">CronTrigger</span> <span class=\"variable\">trigger</span> <span class=\"operator\">=</span> TriggerBuilder.newTrigger()</span><br><span class=\"line\">                .withIdentity(<span class=\"string\">&quot;trigger1&quot;</span>, <span class=\"string\">&quot;group1&quot;</span>)</span><br><span class=\"line\">                .startNow()</span><br><span class=\"line\">                .withSchedule(CronScheduleBuilder.cronSchedule(<span class=\"string\">&quot;* * * * * ?&quot;</span>))</span><br><span class=\"line\">                .build();</span><br><span class=\"line\"></span><br><span class=\"line\">        scheduler.scheduleJob(jobDetail, trigger);</span><br><span class=\"line\">        scheduler.getListenerManager().addSchedulerListener(<span class=\"keyword\">new</span> <span class=\"title class_\">MySchedulerListener</span>());</span><br><span class=\"line\">        scheduler.start();</span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">10000L</span>);</span><br><span class=\"line\">        scheduler.shutdown();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<p><strong>执行结果</strong>：</p>\r\n<p><img\r\nsrc=\"D:\\Pictures\\typore\\006V2BDqly8hqtblb4b7rj31z00ew0xz.jpg\" /></p>\r\n<h3\r\nid=\"springboot整合任务调度框架quartz\">※、SpringBoot整合任务调度框架（Quartz）</h3>\r\n<h4 id=\"springboot与quartz快速整合\">1、SpringBoot与Quartz快速整合</h4>\r\n<h5 id=\"引入依赖\">引入依赖</h5>\r\n<p>主要是<code>spring-boot-starter-quartz</code>这个依赖，是SpringBoot与Quartz的整合。</p>\r\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 实现对 Spring MVC 的自动化配置 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 实现对 Quartz 的自动化配置 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-quartz<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\r\n<h5 id=\"创建job\">创建Job</h5>\r\n<p>为了演示两种Trigger及两种配置方式，我们创建两个不同的Job。</p>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FirstJob</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">QuartzJobBean</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">executeInternal</span><span class=\"params\">(JobExecutionContext jobExecutionContext)</span> <span class=\"keyword\">throws</span> JobExecutionException &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">now</span> <span class=\"operator\">=</span> DateTimeFormatter.ofPattern(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).format(LocalDateTime.now());</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;当前的时间: &quot;</span> + now);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SecondJob</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">QuartzJobBean</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">executeInternal</span><span class=\"params\">(JobExecutionContext jobExecutionContext)</span> <span class=\"keyword\">throws</span> JobExecutionException &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">now</span> <span class=\"operator\">=</span> DateTimeFormatter.ofPattern(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).format(LocalDateTime.now());</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;SecondJob执行, 当前的时间: &quot;</span> + now);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<p>我们在创建Job的时候，可以实现Job接口，也可以继承QuartzJobBean。</p>\r\n<p>QuartzJobBean实现了Job，并且定义了公用的execute方法，子类可以继承QuartzJobBean并实现executeInternal方法。</p>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">QuartzJobBean</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Job</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * This implementation applies the passed-in job data map as bean property</span></span><br><span class=\"line\"><span class=\"comment\">\t * values, and delegates to &#123;<span class=\"doctag\">@code</span> executeInternal&#125; afterwards.</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@see</span> #executeInternal</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">void</span> <span class=\"title function_\">execute</span><span class=\"params\">(JobExecutionContext context)</span> <span class=\"keyword\">throws</span> JobExecutionException &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">             <span class=\"comment\">// 将当前对象包装为BeanWrapper</span></span><br><span class=\"line\">\t\t\t<span class=\"type\">BeanWrapper</span> <span class=\"variable\">bw</span> <span class=\"operator\">=</span> PropertyAccessorFactory.forBeanPropertyAccess(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 设置属性</span></span><br><span class=\"line\">\t\t\t<span class=\"type\">MutablePropertyValues</span> <span class=\"variable\">pvs</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MutablePropertyValues</span>();</span><br><span class=\"line\">\t\t\tpvs.addPropertyValues(context.getScheduler().getContext());</span><br><span class=\"line\">\t\t\tpvs.addPropertyValues(context.getMergedJobDataMap());</span><br><span class=\"line\">\t\t\tbw.setPropertyValues(pvs, <span class=\"literal\">true</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">catch</span> (SchedulerException ex) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JobExecutionException</span>(ex);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">        <span class=\"comment\">// 子类实现该方法</span></span><br><span class=\"line\">\t\texecuteInternal(context);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * Execute the actual job. The job data map will already have been</span></span><br><span class=\"line\"><span class=\"comment\">\t * applied as bean property values by execute. The contract is</span></span><br><span class=\"line\"><span class=\"comment\">\t * exactly the same as for the standard Quartz execute method.</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@see</span> #execute</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title function_\">executeInternal</span><span class=\"params\">(JobExecutionContext context)</span> <span class=\"keyword\">throws</span> JobExecutionException;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<h5 id=\"调度器scheduler绑定\">调度器Scheduler绑定</h5>\r\n<p>Scheduler绑定有两种方式，一种是使用bena的自动配置，一种是Scheduler手动配置。</p>\r\n<p>自动配置，这里演示SimpleScheduleBuilder</p>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">QuartzConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">ID</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;SUMMERDAY&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> JobDetail <span class=\"title function_\">jobDetail1</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> JobBuilder.newJob(FirstJob.class)</span><br><span class=\"line\">                .withIdentity(ID + <span class=\"string\">&quot; 01&quot;</span>)</span><br><span class=\"line\">                .storeDurably()</span><br><span class=\"line\">                .build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Trigger <span class=\"title function_\">trigger1</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 简单的调度计划的构造器</span></span><br><span class=\"line\">        <span class=\"type\">SimpleScheduleBuilder</span> <span class=\"variable\">scheduleBuilder</span> <span class=\"operator\">=</span> SimpleScheduleBuilder.simpleSchedule()</span><br><span class=\"line\">                .withIntervalInSeconds(<span class=\"number\">5</span>) <span class=\"comment\">// 频率</span></span><br><span class=\"line\">                .repeatForever(); <span class=\"comment\">// 次数</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> TriggerBuilder.newTrigger()</span><br><span class=\"line\">                .forJob(jobDetail1())</span><br><span class=\"line\">                .withIdentity(ID + <span class=\"string\">&quot; 01Trigger&quot;</span>)</span><br><span class=\"line\">                .withSchedule(scheduleBuilder)</span><br><span class=\"line\">                .build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<p>手动配置，这里演示CronScheduleBuilder</p>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JobInit</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ApplicationRunner</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">ID</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;SUMMERDAY&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Scheduler scheduler;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">(ApplicationArguments args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">JobDetail</span> <span class=\"variable\">jobDetail</span> <span class=\"operator\">=</span> JobBuilder.newJob(FirstJob.class)</span><br><span class=\"line\">                .withIdentity(ID + <span class=\"string\">&quot; 01&quot;</span>)</span><br><span class=\"line\">                .storeDurably()</span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        <span class=\"type\">CronScheduleBuilder</span> <span class=\"variable\">scheduleBuilder</span> <span class=\"operator\">=</span></span><br><span class=\"line\">                CronScheduleBuilder.cronSchedule(<span class=\"string\">&quot;0/5 * * * * ? *&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 创建任务触发器</span></span><br><span class=\"line\">        <span class=\"type\">Trigger</span> <span class=\"variable\">trigger</span> <span class=\"operator\">=</span> TriggerBuilder.newTrigger()</span><br><span class=\"line\">                .forJob(jobDetail)</span><br><span class=\"line\">                .withIdentity(ID + <span class=\"string\">&quot; 01Trigger&quot;</span>)</span><br><span class=\"line\">                .withSchedule(scheduleBuilder)</span><br><span class=\"line\">                .startNow() <span class=\"comment\">//立即執行一次任務</span></span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        <span class=\"comment\">// 手动将触发器与任务绑定到调度器内</span></span><br><span class=\"line\">        scheduler.scheduleJob(jobDetail, trigger);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<h5 id=\"yml配置\">yml配置</h5>\r\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"comment\"># Quartz 的配置，对应 QuartzProperties 配置类</span></span><br><span class=\"line\">  <span class=\"attr\">quartz:</span></span><br><span class=\"line\">    <span class=\"attr\">job-store-type:</span> <span class=\"string\">memory</span> <span class=\"comment\"># Job 存储器类型。默认为 memory 表示内存，可选 jdbc 使用数据库。</span></span><br><span class=\"line\">    <span class=\"attr\">auto-startup:</span> <span class=\"literal\">true</span> <span class=\"comment\"># Quartz 是否自动启动</span></span><br><span class=\"line\">    <span class=\"attr\">startup-delay:</span> <span class=\"number\">0</span> <span class=\"comment\"># 延迟 N 秒启动</span></span><br><span class=\"line\">    <span class=\"attr\">wait-for-jobs-to-complete-on-shutdown:</span> <span class=\"literal\">true</span> <span class=\"comment\"># 应用关闭时，是否等待定时任务执行完成。默认为 false ，建议设置为 true</span></span><br><span class=\"line\">    <span class=\"attr\">overwrite-existing-jobs:</span> <span class=\"literal\">false</span> <span class=\"comment\"># 是否覆盖已有 Job 的配置</span></span><br><span class=\"line\">    <span class=\"attr\">properties:</span> <span class=\"comment\"># 添加 Quartz Scheduler 附加属性</span></span><br><span class=\"line\">      <span class=\"attr\">org:</span></span><br><span class=\"line\">        <span class=\"attr\">quartz:</span></span><br><span class=\"line\">          <span class=\"attr\">threadPool:</span></span><br><span class=\"line\">            <span class=\"attr\">threadCount:</span> <span class=\"number\">25</span> <span class=\"comment\"># 线程池大小。默认为 10 。</span></span><br><span class=\"line\">            <span class=\"attr\">threadPriority:</span> <span class=\"number\">5</span> <span class=\"comment\"># 线程优先级</span></span><br><span class=\"line\">            <span class=\"attr\">class:</span> <span class=\"string\">org.quartz.simpl.SimpleThreadPool</span> <span class=\"comment\"># 线程池类型</span></span><br><span class=\"line\"><span class=\"comment\">#    jdbc: # 这里暂时不说明，使用 JDBC 的 JobStore 的时候，才需要配置</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<h5 id=\"测试\">测试</h5>\r\n<p>启动程序，FirstJob每5s执行一次，SecondJob每10s执行一次。</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[eduler_Worker-1] com.hyhwky.standalone.FirstJob           : FirstJob执行, 当前的时间: 2020-12-26 16:54:00</span><br><span class=\"line\">[eduler_Worker-2] com.hyhwky.standalone.SecondJob          : SecondJob执行, 当前的时间: 2020-12-26 16:54:00</span><br><span class=\"line\">[eduler_Worker-3] com.hyhwky.standalone.FirstJob           : FirstJob执行, 当前的时间: 2020-12-26 16:54:05</span><br><span class=\"line\">[eduler_Worker-4] com.hyhwky.standalone.SecondJob          : SecondJob执行, 当前的时间: 2020-12-26 16:54:10</span><br><span class=\"line\">[eduler_Worker-5] com.hyhwky.standalone.FirstJob           : FirstJob执行, 当前的时间: 2020-12-26 16:54:10</span><br><span class=\"line\">[eduler_Worker-6] com.hyhwky.standalone.FirstJob           : FirstJob执行, 当前的时间: 2020-12-26 16:54:15</span><br><span class=\"line\">[eduler_Worker-7] com.hyhwky.standalone.SecondJob          : SecondJob执行, 当前的时间: 2020-12-26 16:54:20</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<h4 id=\"quartz持久化配置数据库\">2、Quartz持久化配置（数据库）</h4>\r\n<p>Quartz持久化配置提供了两种存储器：</p>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 9%\" />\r\n<col style=\"width: 45%\" />\r\n<col style=\"width: 45%\" />\r\n</colgroup>\r\n<thead>\r\n<tr>\r\n<th style=\"text-align: center;\"><strong>类型</strong></th>\r\n<th><strong>优点</strong></th>\r\n<th><strong>缺点</strong></th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: center;\">RAMJobStore</td>\r\n<td>不要外部数据库，配置容易，运行速度快</td>\r\n<td>因为调度程序信息是存储在被分配给 JVM\r\n的内存里面，所以，当应用程序停止运行时，所有调度信息将被丢失。另外因为存储到JVM内存里面，所以可以存储多少个\r\nJob 和 Trigger 将会受到限制</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">JDBC 作业存储</td>\r\n<td>支持集群，因为所有的任务信息都会保存到数据库中，可以控制事物，还有就是如果应用服务器关闭或者重启，任务信息都不会丢失，并且可以恢复因服务器关闭或者重启而导致执行失败的任务</td>\r\n<td>运行速度的快慢取决与连接数据库的快慢</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h5 id=\"创建数据库\">创建数据库</h5>\r\n<p>为了测试Quartz的持久化配置，我们事先在mysql中创建一个数据库quartz，并执行脚本，脚本藏在<code>org\\quartz-scheduler\\quartz\\2.3.2\\quartz-2.3.2.jar!\\org\\quartz\\impl\\jdbcjobstore\\tables_mysql_innodb.sql</code>，jdbcjobstore中有支持许多种数据库的脚本，可以按需执行。</p>\r\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> use quartz;</span><br><span class=\"line\">Database changed</span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> tables;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Tables_in_quartz         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> qrtz_blob_triggers       <span class=\"operator\">|</span>## blog类型存储triggers</span><br><span class=\"line\"><span class=\"operator\">|</span> qrtz_calendars           <span class=\"operator\">|</span>## 以blog类型存储Calendar信息</span><br><span class=\"line\"><span class=\"operator\">|</span> qrtz_cron_triggers       <span class=\"operator\">|</span>## 存储cron <span class=\"keyword\">trigger</span>信息</span><br><span class=\"line\"><span class=\"operator\">|</span> qrtz_fired_triggers      <span class=\"operator\">|</span>## 存储已触发的<span class=\"keyword\">trigger</span>相关信息</span><br><span class=\"line\"><span class=\"operator\">|</span> qrtz_job_details         <span class=\"operator\">|</span>## 存储每一个已配置的job details</span><br><span class=\"line\"><span class=\"operator\">|</span> qrtz_locks               <span class=\"operator\">|</span>## 存储悲观锁的信息</span><br><span class=\"line\"><span class=\"operator\">|</span> qrtz_paused_trigger_grps <span class=\"operator\">|</span>## 存储已暂停的<span class=\"keyword\">trigger</span>组信息</span><br><span class=\"line\"><span class=\"operator\">|</span> qrtz_scheduler_state     <span class=\"operator\">|</span>## 存储Scheduler状态信息</span><br><span class=\"line\"><span class=\"operator\">|</span> qrtz_simple_triggers     <span class=\"operator\">|</span>## 存储simple <span class=\"keyword\">trigger</span>信息</span><br><span class=\"line\"><span class=\"operator\">|</span> qrtz_simprop_triggers    <span class=\"operator\">|</span>## 存储其他几种<span class=\"keyword\">trigger</span>信息</span><br><span class=\"line\"><span class=\"operator\">|</span> qrtz_triggers            <span class=\"operator\">|</span>## 存储已配置的<span class=\"keyword\">trigger</span>信息</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------+</span></span><br></pre></td></tr></table></figure>\r\n<p>所有的表中都含有一个<code>SCHED_NAME</code>字段，对应我们配置的<code>scheduler-name</code>，相同\r\nScheduler-name的节点，形成一个 Quartz 集群。</p>\r\n<h5 id=\"引入mysql相关依赖\">引入mysql相关依赖</h5>\r\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 实现对 Spring MVC 的自动化配置 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 实现对 Quartz 的自动化配置 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-quartz<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.projectlombok<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>lombok<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">optional</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">optional</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<h5 id=\"配置yml\">配置yml</h5>\r\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">quartz:</span></span><br><span class=\"line\">      <span class=\"attr\">driver-class-name:</span> <span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\">      <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://localhost:3306/quartz?serverTimezone=GMT%2B8</span></span><br><span class=\"line\">      <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">      <span class=\"attr\">password:</span> <span class=\"number\">123456</span></span><br><span class=\"line\">  <span class=\"attr\">quartz:</span></span><br><span class=\"line\">    <span class=\"attr\">job-store-type:</span> <span class=\"string\">jdbc</span> <span class=\"comment\"># 使用数据库存储</span></span><br><span class=\"line\">    <span class=\"attr\">scheduler-name:</span> <span class=\"string\">hyhScheduler</span> <span class=\"comment\"># 相同 Scheduler 名字的节点，形成一个 Quartz 集群</span></span><br><span class=\"line\">    <span class=\"attr\">wait-for-jobs-to-complete-on-shutdown:</span> <span class=\"literal\">true</span> <span class=\"comment\"># 应用关闭时，是否等待定时任务执行完成。默认为 false ，建议设置为 true</span></span><br><span class=\"line\">    <span class=\"attr\">jdbc:</span></span><br><span class=\"line\">      <span class=\"attr\">initialize-schema:</span> <span class=\"string\">never</span> <span class=\"comment\"># 是否自动使用 SQL 初始化 Quartz 表结构。这里设置成 never ，我们手动创建表结构。</span></span><br><span class=\"line\">    <span class=\"attr\">properties:</span></span><br><span class=\"line\">      <span class=\"attr\">org:</span></span><br><span class=\"line\">        <span class=\"attr\">quartz:</span></span><br><span class=\"line\">          <span class=\"comment\"># JobStore 相关配置</span></span><br><span class=\"line\">          <span class=\"attr\">jobStore:</span></span><br><span class=\"line\">            <span class=\"attr\">dataSource:</span> <span class=\"string\">quartzDataSource</span> <span class=\"comment\"># 使用的数据源</span></span><br><span class=\"line\">            <span class=\"attr\">class:</span> <span class=\"string\">org.quartz.impl.jdbcjobstore.JobStoreTX</span> <span class=\"comment\"># JobStore 实现类</span></span><br><span class=\"line\">            <span class=\"attr\">driverDelegateClass:</span> <span class=\"string\">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span></span><br><span class=\"line\">            <span class=\"attr\">tablePrefix:</span> <span class=\"string\">QRTZ_</span> <span class=\"comment\"># Quartz 表前缀</span></span><br><span class=\"line\">            <span class=\"attr\">isClustered:</span> <span class=\"literal\">true</span> <span class=\"comment\"># 是集群模式</span></span><br><span class=\"line\">            <span class=\"attr\">clusterCheckinInterval:</span> <span class=\"number\">1000</span></span><br><span class=\"line\">            <span class=\"attr\">useProperties:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">          <span class=\"comment\"># 线程池相关配置</span></span><br><span class=\"line\">          <span class=\"attr\">threadPool:</span></span><br><span class=\"line\">            <span class=\"attr\">threadCount:</span> <span class=\"number\">25</span> <span class=\"comment\"># 线程池大小。默认为 10 。</span></span><br><span class=\"line\">            <span class=\"attr\">threadPriority:</span> <span class=\"number\">5</span> <span class=\"comment\"># 线程优先级</span></span><br><span class=\"line\">            <span class=\"attr\">class:</span> <span class=\"string\">org.quartz.simpl.SimpleThreadPool</span> <span class=\"comment\"># 线程池类型</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<h5 id=\"创建任务\">创建任务</h5>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JobInit</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ApplicationRunner</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">ID</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;SUMMERDAY&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Scheduler scheduler;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">(ApplicationArguments args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">JobDetail</span> <span class=\"variable\">jobDetail</span> <span class=\"operator\">=</span> JobBuilder.newJob(SecondJob.class)</span><br><span class=\"line\">                .withIdentity(ID + <span class=\"string\">&quot; 02&quot;</span>)</span><br><span class=\"line\">                .storeDurably()</span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        <span class=\"type\">CronScheduleBuilder</span> <span class=\"variable\">scheduleBuilder</span> <span class=\"operator\">=</span></span><br><span class=\"line\">                CronScheduleBuilder.cronSchedule(<span class=\"string\">&quot;0/10 * * * * ? *&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 创建任务触发器</span></span><br><span class=\"line\">        <span class=\"type\">Trigger</span> <span class=\"variable\">trigger</span> <span class=\"operator\">=</span> TriggerBuilder.newTrigger()</span><br><span class=\"line\">                .forJob(jobDetail)</span><br><span class=\"line\">                .withIdentity(ID + <span class=\"string\">&quot; 02Trigger&quot;</span>)</span><br><span class=\"line\">                .withSchedule(scheduleBuilder)</span><br><span class=\"line\">                .startNow() <span class=\"comment\">//立即執行一次任務</span></span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        Set&lt;Trigger&gt; set = <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>&lt;&gt;();</span><br><span class=\"line\">        set.add(trigger);</span><br><span class=\"line\">        <span class=\"comment\">// boolean replace 表示启动时对数据库中的quartz的任务进行覆盖。</span></span><br><span class=\"line\">        scheduler.scheduleJob(jobDetail, set, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<h5 id=\"启动测试\">启动测试</h5>\r\n<p>启动测试之后，我们的quartz任务相关信息就已经成功存储到mysql中了。</p>\r\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> qrtz_simple_triggers;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------+---------------------+---------------+--------------+-----------------+-----------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> SCHED_NAME   <span class=\"operator\">|</span> TRIGGER_NAME        <span class=\"operator\">|</span> TRIGGER_GROUP <span class=\"operator\">|</span> REPEAT_COUNT <span class=\"operator\">|</span> REPEAT_INTERVAL <span class=\"operator\">|</span> TIMES_TRIGGERED <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------+---------------------+---------------+--------------+-----------------+-----------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> hyhScheduler <span class=\"operator\">|</span> SUMMERDAY <span class=\"number\">01</span><span class=\"keyword\">Trigger</span> <span class=\"operator\">|</span> <span class=\"keyword\">DEFAULT</span>       <span class=\"operator\">|</span>           <span class=\"number\">-1</span> <span class=\"operator\">|</span>            <span class=\"number\">5000</span> <span class=\"operator\">|</span>             <span class=\"number\">812</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------+---------------------+---------------+--------------+-----------------+-----------------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> qrtz_cron_triggers;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------+---------------------+---------------+------------------+---------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> SCHED_NAME   <span class=\"operator\">|</span> TRIGGER_NAME        <span class=\"operator\">|</span> TRIGGER_GROUP <span class=\"operator\">|</span> CRON_EXPRESSION  <span class=\"operator\">|</span> TIME_ZONE_ID  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------+---------------------+---------------+------------------+---------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> hyhScheduler <span class=\"operator\">|</span> SUMMERDAY <span class=\"number\">02</span><span class=\"keyword\">Trigger</span> <span class=\"operator\">|</span> <span class=\"keyword\">DEFAULT</span>       <span class=\"operator\">|</span> <span class=\"number\">0</span><span class=\"operator\">/</span><span class=\"number\">10</span> <span class=\"operator\">*</span> <span class=\"operator\">*</span> <span class=\"operator\">*</span> <span class=\"operator\">*</span> ? <span class=\"operator\">*</span> <span class=\"operator\">|</span> Asia<span class=\"operator\">/</span>Shanghai <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------+---------------------+---------------+------------------+---------------+</span></span><br></pre></td></tr></table></figure>\r\n<h2 id=\"相关链接\">相关链接</h2>\r\n<p>了解现有的定时任务机制</p>\r\n<p>https://blog.csdn.net/qianlixiaomage/article/details/106599951</p>\r\n<p>了解quartz定时调度</p>\r\n<p>https://blog.csdn.net/ScholarTang/article/details/118891297</p>\r\n<p>springboot整合Quartz</p>\r\n<p>https://www.cnblogs.com/summerday152/p/14193968.html</p>\r\n<p>---不用配置数据源这一步</p>\r\n",
            "tags": [
                "工作日志",
                "job"
            ]
        },
        {
            "id": "http://example.com/2024/06/16/post/job/01-git%E6%8B%89%E5%8F%96%E9%A1%B9%E7%9B%AE/",
            "url": "http://example.com/2024/06/16/post/job/01-git%E6%8B%89%E5%8F%96%E9%A1%B9%E7%9B%AE/",
            "title": "01-如何使用git拉取项目",
            "date_published": "2024-06-16T14:58:49.054Z",
            "content_html": "<h1 id=\"一拉取项目到本地运行\">一、拉取项目到本地运行</h1>\r\n<h3 id=\"拉取项目\">1、拉取项目</h3>\r\n<h4 id=\"后端项目\">后端项目</h4>\r\n<p>创建目录在目录cmd[初始化]</p>\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">git init</span></span><br></pre></td></tr></table></figure>\r\n<p>[克隆地址]一般为gitLab 或者gitHub 建议使用ssh，没有再使用http</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># git remote add origin &lt;url&gt;克隆地址</span></span><br></pre></td></tr></table></figure>\r\n<p>公司的项目一般来说都有很多分支，[查看分支]</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># git fetch </span></span><br></pre></td></tr></table></figure>\r\n<p>[拉取远程分支到本地]</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># git fetch origin &lt;分支名&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># git pull origin &lt;分支名&gt;</span></span><br></pre></td></tr></table></figure>\r\n<p>[查看当前分支]</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># git branch --show-current</span></span><br></pre></td></tr></table></figure>\r\n<p>[切换分支]</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># git checkout &lt;分支名&gt;</span></span><br></pre></td></tr></table></figure>\r\n<p>将从远程仓库的<code>demo</code>分支拉取最新的提交并自动合并到本地的\r\n<code>master</code> 分支。<code>-Xtheirs</code> 标志指示 Git\r\n在解决合并冲突时选择使用<code>demo</code>分支的更改。</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># git pull -s recursive -Xtheirs origin demo</span></span><br></pre></td></tr></table></figure>\r\n<p>然后使用Maven下载依赖包</p>\r\n<h4 id=\"前端项目\">前端项目</h4>\r\n<p>拉取本地同后端</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># npm install</span></span><br></pre></td></tr></table></figure>\r\n<p>如果node版本过高，请使用nvm管理node</p>\r\n<p>相关链接：\r\nhttps://blog.csdn.net/HuangsTing/article/details/113857145</p>\r\n<h1 id=\"二window下安装并使用nvm\">二、Window下安装并使用nvm</h1>\r\n<h4\r\nid=\"卸载已经安装好的没被nvm管理的node\">1、卸载已经安装好的没被nvm管理的node</h4>\r\n<p>如果你已经安装了node，那么你需要先卸载node，如果你没有安装那直接跳过这一步到下一步。</p>\r\n<p><strong>打开控制面板 -&gt; 打开程序和功能 -&gt; 右上角搜索输入node\r\n-&gt; 右键卸载</strong></p>\r\n<p>为了确保彻底删除node在看看你的node安装目录中还有没有node文件夹，有的话一起删除。再看看C:文件夹下有没有.npmrc以及.yarnrc等等统统删除。再去看看你的环境变量有没有node相关的，有的话也一起删除了。</p>\r\n<h4 id=\"安装nvm\">2、安装nvm</h4>\r\n<p>去github <a\r\nhref=\"https://github.com/coreybutler/nvm-windows/releases\">下载最新的\r\nnvm</a> 找到 <code>nvm-setup.zip</code> 点击下载</p>\r\n<p>选择nvm安装路径</p>\r\n<p>选择nodejs的安装路径</p>\r\n<p>点击next，安装完成后在终端输入<code>nvm version</code>,就能查到版本号说明安装成功了。</p>\r\n<h4 id=\"配置路径和下载源\">3、配置路径和下载源</h4>\r\n<p>安装完nvm后先不要着急安装node。</p>\r\n<p>找到nvm安装路径 -&gt; 找到 settings.txt 文件 -&gt; 配置下载源</p>\r\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 旧：</span></span><br><span class=\"line\"><span class=\"comment\"># node_mirror: https://npm.taobao.org/mirrors/node/</span></span><br><span class=\"line\"><span class=\"comment\"># npm_mirror: https://npm.taobao.org/mirrors/npm/</span></span><br><span class=\"line\"><span class=\"comment\"># 新：</span></span><br><span class=\"line\"><span class=\"comment\"># nvm node_mirror https://npmmirror.com/mirrors/node/</span></span><br><span class=\"line\"><span class=\"comment\"># nvm npm_mirror https://npmmirror.com/mirrors/npm/</span></span><br></pre></td></tr></table></figure>\r\n<h4 id=\"使用nvm安装node\">4、使用nvm安装node</h4>\r\n<p>在终端输入 <code>nvm list available</code>，\r\n查看网络可以安装的版本。</p>\r\n<p>选择一个版本安装，比如 <code>nvm install 14.14.0</code>。</p>\r\n<p>使用这个版本的node，<code>nvm use 14.14.0</code>。输入<code>node -v</code>\r\n和 <code>npm -v</code>可以查询到node和npm的版本号。</p>\r\n<p>输入<code>nvm list</code>\r\n查看已经安装的node，<code>*</code>号表示当前使用的node版本。</p>\r\n<h4 id=\"nvm常用命令\">5、nvm常用命令</h4>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 28%\" />\r\n<col style=\"width: 71%\" />\r\n</colgroup>\r\n<thead>\r\n<tr>\r\n<th style=\"text-align: center;\"><strong>命令</strong></th>\r\n<th style=\"text-align: center;\"><strong>说明</strong></th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align: center;\">nvm list</td>\r\n<td style=\"text-align: center;\">查看已经安装的版本</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">nvm list installed</td>\r\n<td style=\"text-align: center;\">查看已经安装的版本</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">nvm list available</td>\r\n<td style=\"text-align: center;\">查看网络可以安装的版本</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">nvm arch</td>\r\n<td\r\nstyle=\"text-align: center;\">查看当前系统的位数和当前nodejs的位数</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">nvm install [arch]</td>\r\n<td style=\"text-align: center;\">安装制定版本的node 并且可以指定平台\r\nversion 版本号 arch 平台</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">nvm on</td>\r\n<td style=\"text-align: center;\">打开nodejs版本控制</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">nvm off</td>\r\n<td style=\"text-align: center;\">关闭nodejs版本控制</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">nvm proxy [url]</td>\r\n<td style=\"text-align: center;\">查看和设置代理</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">nvm node_mirror [url]</td>\r\n<td\r\nstyle=\"text-align: center;\">设置或者查看setting.txt中的node_mirror，如果不设置的默认是\r\nhttps://nodejs.org/dist/</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">nvm npm_mirror [url]</td>\r\n<td\r\nstyle=\"text-align: center;\">设置或者查看setting.txt中的npm_mirror,如果不设置的话默认的是：https://github.com/npm/npm/archive/.</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">nvm uninstall</td>\r\n<td style=\"text-align: center;\">卸载指定的版本</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">nvm use [version] [arch]</td>\r\n<td style=\"text-align: center;\">切换指定的node版本和位数</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">nvm root [path]</td>\r\n<td style=\"text-align: center;\">设置和查看root路径</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align: center;\">nvm version</td>\r\n<td style=\"text-align: center;\">查看当前的版本</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h4 id=\"全局安装npmcnpm\">6、全局安装npm，cnpm</h4>\r\n<p>安装node的时候，npm其实也已经一起安装了。因为nvm可以管理多个版本的node，如果每次添加一个node版本都要安装一堆的包很麻烦，如果有一个npm可以让各个版本的node共用，就不会这么麻烦了。</p>\r\n<p><strong>简单的三步就可以配置一个全局的npm。</strong></p>\r\n<p>1.npm config set prefix \"E:\"\r\n//配置用npm下载包时全局安装的包路径。</p>\r\n<p>2.npm install npm -g\r\n--registry=https://npmmirror.com/mirrors/安装全局npm，不同的node都使用这个npm。想更新全局的npm的话首先删除全局路径(就是上一行命令的地址，可以使用npm\r\nconfig ls查看)下的npm，再执行一次这个命令即可。</p>\r\n<p>3.在用户变量中添加 NPM_HOME =\r\nE:，path中添加%NPM_HOME%。这里需要注意的是，%NPM_HOME%要添加在%NVM_SYMLINK%之前，避免npm访问到的是nodejs中自带的npm包管理工具。</p>\r\n<p><strong>使用淘宝镜像cnpm。</strong></p>\r\n<p>1.<code>npm install -g cnpm --registry=https://npmmirror.com/mirrors</code>\r\n//使用淘宝镜像cnmp替代npm</p>\r\n<p>2.<code>cnpm config get registry</code> //验证cnpm是否可用</p>\r\n<h4 id=\"遇到的问题\">7、遇到的问题</h4>\r\n<p>1.在安装nvm的时候没有卸载node，导致使用nvm安装完之后，node和npm都不可用。</p>\r\n<p>2.在第一次使用nvm安装node后，要记得使用 nvm use\r\n切换下node版本，以及用 nvm on\r\n打开nodejs版本控制，不然这时候node和npm也都不可用。</p>\r\n<p>3.全局安装完npm的时候，需要关掉终端窗口重新打开，才能装得上cnpm。</p>\r\n",
            "tags": [
                "工作日志",
                "job"
            ]
        },
        {
            "id": "http://example.com/2024/06/13/post/windows/pid/windows%E8%BF%9B%E7%A8%8B/",
            "url": "http://example.com/2024/06/13/post/windows/pid/windows%E8%BF%9B%E7%A8%8B/",
            "title": "windows进程命令",
            "date_published": "2024-06-12T18:42:16.000Z",
            "content_html": "<h1 id=\"windows进程\">windows进程</h1>\r\n<h3 id=\"查看进程\">查看进程</h3>\r\n<p>查看该服务的进程</p>\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">tasklist | findstr <span class=\"string\">&quot;jupyter&quot;</span></span></span><br></pre></td></tr></table></figure>\r\n<p>查看端口占用</p>\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">netstat -ano</span></span><br></pre></td></tr></table></figure>\r\n<p>查看指定端口的占用情况</p>\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">netstat -aon|findstr 8080</span>  </span><br></pre></td></tr></table></figure>\r\n<p>查看PID对应的进程</p>\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">tasklist|findstr 21692</span></span><br></pre></td></tr></table></figure>\r\n<h3 id=\"杀死进程\">杀死进程</h3>\r\n<p>杀程序</p>\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">taskkill /f /t /im jupyter-notebook.exe</span></span><br></pre></td></tr></table></figure>\r\n<p>杀PID</p>\r\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">taskkill /f /PID 22524</span> </span><br></pre></td></tr></table></figure>\r\n",
            "tags": [
                "Windows",
                "进程",
                "Windows",
                "进程"
            ]
        }
    ]
}