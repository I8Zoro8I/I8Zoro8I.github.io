{
    "version": "https://jsonfeed.org/version/1",
    "title": "CYX",
    "subtitle": "Blog",
    "icon": "http://example.com/images/favicon.ico",
    "description": "emm这里什么都有",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/10/17/post/vue/hello-world/",
            "url": "http://example.com/2024/10/17/post/vue/hello-world/",
            "title": "el-select多选但后端要求返回字符串的解决方法",
            "date_published": "2024-10-17T03:08:48.514Z",
            "content_html": "<h1\nid=\"el-select多选但后端要求返回字符串的解决方法\">el-select多选但后端要求返回字符串的解决方法</h1>\n<p><strong>需求：el-select多选但后端要求返回字符串</strong>\n已知：el-select多选时绑定值为数组，如：arr:[‘这是第一个’,‘这是第一个’]\n后端要求以字符串形式返回，使用“，”隔开，如：arr:“这是第一个,这是第一个”\n方法：前端使用自定义中间参数进行转化\n背景：此el-select存在多个，且被包含在列表的n列中，可能涉及新增、删除、换行等，所以不能直接根据index进行存储。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-table-column key=&quot;4&quot; prop=&quot;remark&quot; label=&quot;内容&quot; &gt;</span><br><span class=\"line\">     &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class=\"line\">        &lt;el-select v-model=&quot;checkList[scope.row.id]&quot; multiple placeholder=&quot;请选择&quot;</span><br><span class=\"line\">              @change=&quot;onChangeCheck(scope.row,$event)&quot;  style=&quot;width: 100%&quot;&gt;</span><br><span class=\"line\">            &lt;el-option</span><br><span class=\"line\">                  v-for=&quot;item in options&quot;</span><br><span class=\"line\">                  :key=&quot;item.value&quot;</span><br><span class=\"line\">                  :label=&quot;item.label&quot;</span><br><span class=\"line\">                  :value=&quot;item.value&quot;&gt;</span><br><span class=\"line\">            &lt;/el-option&gt;</span><br><span class=\"line\">        &lt;/el-select&gt;</span><br><span class=\"line\">    &lt;/template&gt;</span><br><span class=\"line\">&lt;/el-table-column&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">data</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 初始化中间参数</span></span><br><span class=\"line\">        <span class=\"attr\">checkList</span>: []</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">methods</span>:&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 改变时（get）</span></span><br><span class=\"line\">    <span class=\"title function_\">onChangeCheck</span>(<span class=\"params\">item,e</span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//更新对象，键为item的id</span></span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;item&quot;</span>,item);</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;event&quot;</span>,e)</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">checkList</span>[item.<span class=\"property\">id</span>] = e;</span><br><span class=\"line\">      item.<span class=\"property\">remark</span> = e.<span class=\"title function_\">join</span>(<span class=\"string\">&quot;、&quot;</span>);</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(item.<span class=\"property\">remark</span>)</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">tableData</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">        <span class=\"comment\">// 获取到数据时需要做初始化（set）</span></span><br><span class=\"line\">    <span class=\"comment\">// 注：初始化方法在获取数据时触发即可</span></span><br><span class=\"line\">    <span class=\"title function_\">setSpecialCheck</span>(<span class=\"params\">item</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(item.<span class=\"property\">remark</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.$set(<span class=\"variable language_\">this</span>.<span class=\"property\">checkList</span>, item.<span class=\"property\">id</span>, item.<span class=\"property\">remark</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;、&#x27;</span>));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>完整代码： (删除了多余代码，只保留了问题所需要的代码)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">&lt;el-table  :data=&quot;tableData&quot; border style=&quot;width: 100%&quot;&gt;</span><br><span class=\"line\">          &lt;el-table-column key=&quot;1&quot; type=&quot;index&quot; label=&quot;序号&quot; width=&quot;60&quot;/&gt;</span><br><span class=\"line\">          &lt;el-table-column key=&quot;4&quot; prop=&quot;remark&quot; label=&quot;内容&quot; &gt;</span><br><span class=\"line\">            &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class=\"line\">              &lt;el-select v-model=&quot;checkList[scope.row.id]&quot; multiple placeholder=&quot;请选择&quot;</span><br><span class=\"line\">              @change=&quot;onChangeCheck(scope.row,$event)&quot;  style=&quot;width: 100%&quot;&gt;</span><br><span class=\"line\">                &lt;el-option</span><br><span class=\"line\">                  v-for=&quot;item in options&quot;</span><br><span class=\"line\">                  :key=&quot;item.value&quot;</span><br><span class=\"line\">                  :label=&quot;item.label&quot;</span><br><span class=\"line\">                  :value=&quot;item.value&quot;&gt;</span><br><span class=\"line\">                &lt;/el-option&gt;</span><br><span class=\"line\">              &lt;/el-select&gt;</span><br><span class=\"line\">            &lt;/template&gt;</span><br><span class=\"line\">          &lt;/el-table-column&gt;</span><br><span class=\"line\">        &lt;/el-table&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;scipt&gt;</span><br><span class=\"line\">export default&#123;</span><br><span class=\"line\">    data()&#123;</span><br><span class=\"line\">    return&#123;</span><br><span class=\"line\">      tableData:[],</span><br><span class=\"line\">      options: [</span><br><span class=\"line\">        &#123; value: &#x27;船舶到港并递交NOR时间&#x27;, label: &#x27;船舶到港并递交NOR时间&#x27; &#125;,</span><br><span class=\"line\">        &#123; value: &#x27;等泊&#x27;, label: &#x27;等泊&#x27; &#125;,</span><br><span class=\"line\">        &#123; value: &#x27;NOR提交后12小时&#x27;, label: &#x27;NOR提交后12小时&#x27; &#125;,</span><br><span class=\"line\">        &#123; value: &#x27;移泊&#x27;, label: &#x27;移泊&#x27; &#125;,</span><br><span class=\"line\">        &#123; value: &#x27;开始卸货&#x27;, label: &#x27;开始卸货&#x27; &#125;,</span><br><span class=\"line\">        &#123; value: &#x27;检验&#x27;, label: &#x27;检验&#x27; &#125;,</span><br><span class=\"line\">        &#123; value: &#x27;水尺&#x27;, label: &#x27;水尺&#x27; &#125;,</span><br><span class=\"line\">        &#123; value: &#x27;卸货&#x27;, label: &#x27;卸货&#x27; &#125;,</span><br><span class=\"line\">        &#123; value: &#x27;卸货完毕&#x27;, label: &#x27;卸货完毕&#x27; &#125;,</span><br><span class=\"line\">      ],</span><br><span class=\"line\">      checkList: []</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">    methods:&#123;</span><br><span class=\"line\">    loadData(id)&#123;</span><br><span class=\"line\">      this.bodyLoading = true</span><br><span class=\"line\">      getDispatchDetail(id).then(res =&gt; &#123;</span><br><span class=\"line\">        //remarks 转 数组  转字符串</span><br><span class=\"line\">        this.tableData=res.data.data.lines</span><br><span class=\"line\">        console.log(&quot;tableData&quot;,this.tableData)</span><br><span class=\"line\">        for (let i=0;i&lt;this.tableData.length;i++)&#123;</span><br><span class=\"line\">          this.setSpecialCheck(this.tableData[i])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        console.log(&quot;checkList&quot;,this.checkList)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    onChangeCheck(item,e)&#123;</span><br><span class=\"line\">      console.log(&quot;item&quot;,item);</span><br><span class=\"line\">      console.log(&quot;event&quot;,e)</span><br><span class=\"line\">      this.checkList[item.id] = e;</span><br><span class=\"line\">      item.remark = e.join(&quot;、&quot;);</span><br><span class=\"line\">      console.log(item.remark)</span><br><span class=\"line\">      console.log(this.tableData)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setSpecialCheck(item)&#123;</span><br><span class=\"line\">      if(item.remark)&#123;</span><br><span class=\"line\">        this.$set(this.checkList, item.id, item.remark.split(&#x27;、&#x27;));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/scipt&gt;</span><br></pre></td></tr></table></figure>\n<p>效果图：</p>\n<p><img\nsrc=\"D:\\Pictures\\typore\\006V2BDqly8ht4liz4fi2j30sc0gqdhe.jpg\" /></p>\n",
            "tags": [
                "前端"
            ]
        },
        {
            "id": "http://example.com/2024/10/17/post/vue/%E4%BF%AE%E6%94%B9avue%E9%BB%98%E8%AE%A4%E7%BB%84%E4%BB%B6%E6%A0%B7%E5%BC%8F/",
            "url": "http://example.com/2024/10/17/post/vue/%E4%BF%AE%E6%94%B9avue%E9%BB%98%E8%AE%A4%E7%BB%84%E4%BB%B6%E6%A0%B7%E5%BC%8F/",
            "title": "修改avue默认组件样式",
            "date_published": "2024-10-17T03:08:48.514Z",
            "content_html": "<h1 id=\"修改avue默认组件样式\">修改avue默认组件样式</h1>\n<p><a\nhref=\"https://blog.csdn.net/fyydashen/article/details/113611506\">参考链接</a></p>\n<p>我们打开F12找到我们需要修改的样式class 名</p>\n<p><img\nsrc=\"https://dlink.host/wx2.sinaimg.cn/large/006V2BDqly8hs1tni3a40j30mq04nwft.jpg\" /></p>\n<p>错误示范1：</p>\n<p>会影响到其他页面的样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\"><span class=\"selector-class\">.avue-crud__menu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>错误示范2：；</p>\n<p>样式无效</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class=\"line\"><span class=\"selector-class\">.avue-crud__menu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>正确示范1</strong>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class=\"line\">/deep/ .avue-crud__menu &#123;</span><br><span class=\"line\">  display: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>正确示范2：</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class=\"line\">::v-deep .el-divider--vertical &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "前端",
                "avue"
            ]
        },
        {
            "id": "http://example.com/2024/10/17/post/vue/D3.js%20%20%20V3%E7%89%88%E6%9C%AC/",
            "url": "http://example.com/2024/10/17/post/vue/D3.js%20%20%20V3%E7%89%88%E6%9C%AC/",
            "title": "D3.js V3版本  学习笔记",
            "date_published": "2024-10-17T03:08:48.440Z",
            "content_html": "<h1 id=\"d3.js-v3版本\">D3.js V3版本</h1>\n<h2 id=\"d3-tree\">D3 Tree</h2>\n<p>vue2 + d3 (3.5.17)</p>\n<h4 id=\"安装组件\">安装组件</h4>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install d3@3.5.17 -s   </span><br></pre></td></tr></table></figure>\n<p><span class=\"citation\"\ndata-cites=\"后面是版本号\">@后面是版本号</span>，不加默认下载最新版</p>\n<p>页面（组件）引用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> d3 <span class=\"keyword\">from</span> <span class=\"string\">&quot;d3&quot;</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"直接上一个简单案例\">直接上一个简单案例</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div id=&quot;screenshot&quot; style=&quot;width:100%;height:90%&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div id=&quot;tree-container&quot; style=&quot;width:100%;height:95%;&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">  &lt;div ref=&quot;container&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import * as d3 from &#x27;d3&#x27;;</span><br><span class=\"line\">import $ from &#x27;jquery&#x27;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  data()&#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      treeData:&#123;</span><br><span class=\"line\">        name: &#x27;收入&#x27;,</span><br><span class=\"line\">        value:100,</span><br><span class=\"line\">        children: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            name: &#x27;电费收入&#x27;,</span><br><span class=\"line\">            value: 10,</span><br><span class=\"line\">            children: []</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            name: &#x27;供热收入&#x27;,</span><br><span class=\"line\">            value: 8,</span><br><span class=\"line\">            children: []</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          ,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            name: &#x27;副产品收入&#x27;,</span><br><span class=\"line\">            value: 8,</span><br><span class=\"line\">            children: []</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            name: &#x27;其他收入&#x27;,</span><br><span class=\"line\">            value: 8,</span><br><span class=\"line\">            children: []</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mounted() &#123;</span><br><span class=\"line\">    this.drawTree();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    drawTree() &#123;</span><br><span class=\"line\">    // 设置图表的宽高和Margin</span><br><span class=\"line\">      var margin = &#123; top: 20, right: 90, bottom: 30, left: 90 &#125;,</span><br><span class=\"line\">          width = 960 - margin.left - margin.right,</span><br><span class=\"line\">          height = 500 - margin.top - margin.bottom;</span><br><span class=\"line\"></span><br><span class=\"line\">      //创建视图</span><br><span class=\"line\">      let svg = d3.select(this.$refs.container)</span><br><span class=\"line\">          .append(&#x27;svg&#x27;)</span><br><span class=\"line\">          .attr(&#x27;width&#x27;, width + margin.right + margin.left)</span><br><span class=\"line\">          .attr(&#x27;height&#x27;, height + margin.top + margin.bottom)</span><br><span class=\"line\">          .append(&#x27;g&#x27;)</span><br><span class=\"line\">          .call(this.zoomListener)</span><br><span class=\"line\">          .attr(&quot;transform&quot;, &quot;translate(&quot; + margin.left + &quot;,&quot; + margin.top + &quot;)&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">      //定义节点拖放行为的拖动侦听器。</span><br><span class=\"line\"></span><br><span class=\"line\">      //建立树布局</span><br><span class=\"line\">      const treeLayout = d3.layout.tree()</span><br><span class=\"line\">          .size([width, height]);</span><br><span class=\"line\"></span><br><span class=\"line\">      const nodes = treeLayout.nodes(this.treeData);</span><br><span class=\"line\">      const links = treeLayout.links(nodes);</span><br><span class=\"line\"></span><br><span class=\"line\">      const nodeGroup = svg.selectAll(&#x27;.node&#x27;)</span><br><span class=\"line\">          .data(nodes)</span><br><span class=\"line\">          .enter()</span><br><span class=\"line\">          .append(&#x27;g&#x27;)</span><br><span class=\"line\">          .attr(&#x27;class&#x27;, &#x27;node&#x27;)</span><br><span class=\"line\">          .attr(&#x27;transform&#x27;, d =&gt; `translate($&#123;d.x&#125;,$&#123;d.y&#125;)`);</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeGroup.append(&#x27;rect&#x27;)//设置为矩形</span><br><span class=\"line\">          .attr(&#x27;width&#x27;, 80) // 设置矩形宽度</span><br><span class=\"line\">          .attr(&#x27;height&#x27;, 30) // 设置矩形高度</span><br><span class=\"line\">          .attr(&#x27;x&#x27;, -40) // 调整矩形位置，使其居中</span><br><span class=\"line\">          .attr(&#x27;y&#x27;, -15)</span><br><span class=\"line\">          .attr(&#x27;rx&#x27;, 5) // 可选，设置矩形圆角</span><br><span class=\"line\">          .attr(&#x27;ry&#x27;, 5)</span><br><span class=\"line\">          .style(&#x27;fill&#x27;, &#x27;transparent&#x27;)</span><br><span class=\"line\">          .style(&#x27;stroke&#x27;, &#x27;#000&#x27;) // 设置矩形边框颜色</span><br><span class=\"line\">          .style(&#x27;stroke-width&#x27;, &#x27;1px&#x27;); // 设置矩形边框宽度; // 透明</span><br><span class=\"line\">      nodeGroup.append(&#x27;line&#x27;) // 添加分割线</span><br><span class=\"line\">          .attr(&#x27;x1&#x27;, -40) // 分割线的起始点 x 坐标</span><br><span class=\"line\">          .attr(&#x27;y1&#x27;, 0) // 分割线的起始点 y 坐标</span><br><span class=\"line\">          .attr(&#x27;x2&#x27;, 40) // 分割线的结束点 x 坐标</span><br><span class=\"line\">          .attr(&#x27;y2&#x27;, 0) // 分割线的结束点 y 坐标</span><br><span class=\"line\">          .style(&#x27;stroke&#x27;, &#x27;#000&#x27;) // 设置分割线颜色</span><br><span class=\"line\">          .style(&#x27;stroke-width&#x27;, &#x27;1px&#x27;); // 设置分割线宽度</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeGroup.append(&#x27;text&#x27;)</span><br><span class=\"line\">          .attr(&#x27;dy&#x27;, -4) // 调整文本的垂直位置，使其居中</span><br><span class=\"line\">          .style(&#x27;text-anchor&#x27;, &#x27;middle&#x27;) // 设置文本水平居中</span><br><span class=\"line\">          .text(d =&gt; d.name);</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeGroup.append(&#x27;text&#x27;)</span><br><span class=\"line\">          .attr(&#x27;dy&#x27;, 13) // 调整文本的垂直位置，使其在矩形内部</span><br><span class=\"line\">          .style(&#x27;text-anchor&#x27;, &#x27;middle&#x27;) // 设置文本水平居中</span><br><span class=\"line\">          .text(d =&gt; d.value);</span><br><span class=\"line\"></span><br><span class=\"line\">      svg.selectAll(&#x27;.link&#x27;)</span><br><span class=\"line\">          .data(links)</span><br><span class=\"line\">          .enter()</span><br><span class=\"line\">          .append(&#x27;path&#x27;)</span><br><span class=\"line\">          .attr(&#x27;class&#x27;, &#x27;link&#x27;)</span><br><span class=\"line\">          .attr(&#x27;d&#x27;, d =&gt; &#123;</span><br><span class=\"line\">            return `M$&#123;d.source.x&#125;,$&#123;d.source.y+15&#125;L$&#123;d.target.x&#125;,$&#123;d.target.y-15&#125;`;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      const zoomHandler = d3.behavior.zoom()</span><br><span class=\"line\">          .on(&#x27;zoom&#x27;, () =&gt; &#123;</span><br><span class=\"line\">            svg.attr(&#x27;transform&#x27;, `translate($&#123;d3.event.translate&#125;)scale($&#123;d3.event.scale&#125;)`);</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      svg.call(zoomHandler);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">circle &#123;</span><br><span class=\"line\">  fill: #ccc;</span><br><span class=\"line\">  stroke: #000;</span><br><span class=\"line\">  stroke-width: 1px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">text &#123;</span><br><span class=\"line\">  font-size: 12px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">path.link &#123;</span><br><span class=\"line\">  fill: none;</span><br><span class=\"line\">  stroke: #ccc;</span><br><span class=\"line\">  stroke-width: 1.5px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>我们可以看到D3.js的步骤其实就是</p>\n<p><code>初始化图表 -&gt; 获取数据 -&gt; 数据转换 -&gt; 元素操作/交互/动画 -&gt; 事件绑定 -&gt; 数据更新 -&gt; 元素更新</code></p>\n<h2 id=\"用d3-tree-做一个指标下钻功能\">用D3 tree 做一个指标下钻功能</h2>\n<p>看完上面哪个例子我们直接上难度，在大数据时代，很多数据客户都会要求直观的展示数据，这个指标下钻就是很普遍的客户需求，展示如下动图。</p>\n<p>[双击收展、任意拖拉、滚轮缩放]</p>\n<figure>\n<img\nsrc=\"http://dlink.host/wx3.sinaimg.cn/large/006V2BDqly8hrp5pe8coxg30b408u41t.gif\"\nalt=\"alt\" />\n<figcaption aria-hidden=\"true\">alt</figcaption>\n</figure>\n<p>我们按照例子中的方法进行介绍：</p>\n<p>图的绘制主要在drawTree 与 update中</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">drawTree</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">     <span class=\"comment\">//show D3 tree</span></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">depths</span> = <span class=\"variable language_\">this</span>.<span class=\"title function_\">treeDepths</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">treeData</span>);</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">depths</span>)</span><br><span class=\"line\">     <span class=\"comment\">//建立树布局</span></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">minHeight</span> = <span class=\"number\">500</span>;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">viewerWidth</span> = $(<span class=\"string\">&quot;#screenshot&quot;</span>).<span class=\"title function_\">width</span>();</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">viewerHeight</span> = $(<span class=\"string\">&quot;#screenshot&quot;</span>).<span class=\"title function_\">height</span>();</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">viewerHeight</span>)</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">viewerHeight</span> &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">minHeight</span>)</span><br><span class=\"line\">       <span class=\"variable language_\">this</span>.<span class=\"property\">viewerHeight</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">minHeight</span></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">viewerHeight</span>=<span class=\"number\">500</span></span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">tree</span> = d3.<span class=\"property\">layout</span>.<span class=\"title function_\">tree</span>()</span><br><span class=\"line\">         .<span class=\"title function_\">size</span>([<span class=\"variable language_\">this</span>.<span class=\"property\">viewerHeight</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">viewerWidth</span>]);</span><br><span class=\"line\">     <span class=\"comment\">//定义一个d3对角线投影，供稍后的节点路径使用</span></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">diagonal</span> = d3.<span class=\"property\">svg</span>.<span class=\"title function_\">diagonal</span>()</span><br><span class=\"line\">         .<span class=\"title function_\">projection</span>(<span class=\"function\"><span class=\"params\">d</span> =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> [d.<span class=\"property\">y</span>, d.<span class=\"property\">x</span>];</span><br><span class=\"line\">         &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"comment\">//call visit to maxLabelLength</span></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"title function_\">visit</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">treeData</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">       <span class=\"variable language_\">this</span>.<span class=\"property\">totalNodes</span>++;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (d.<span class=\"property\">name</span>) &#123;</span><br><span class=\"line\">         <span class=\"variable language_\">this</span>.<span class=\"property\">maxLabelLength</span> = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(d.<span class=\"property\">name</span>.<span class=\"property\">length</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">maxLabelLength</span>);</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">         <span class=\"variable language_\">this</span>.<span class=\"property\">maxLabelLength</span> = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(<span class=\"number\">0</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">maxLabelLength</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> d.<span class=\"property\">children</span> &amp;&amp; d.<span class=\"property\">children</span>.<span class=\"property\">length</span> &gt; <span class=\"number\">0</span> ? d.<span class=\"property\">children</span> : <span class=\"literal\">null</span>;</span><br><span class=\"line\">     &#125;)</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;总节点&quot;</span>,<span class=\"variable language_\">this</span>.<span class=\"property\">totalNodes</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"comment\">//排序树最初是为了防止json没有按排序顺序排列</span></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"title function_\">sortTree</span>()</span><br><span class=\"line\">     <span class=\"comment\">//定义 zoomListener，该 zoomListener 在 scaleExtents 中约束的“zoom”事件上调用缩放</span></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">zoomListener</span> = d3.<span class=\"property\">behavior</span>.<span class=\"title function_\">zoom</span>().<span class=\"title function_\">scaleExtent</span>([<span class=\"number\">0.1</span>, <span class=\"number\">3</span>]).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;zoom&quot;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">       <span class=\"variable language_\">this</span>.<span class=\"title function_\">zoom</span>()</span><br><span class=\"line\">     &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"comment\">//创建视图</span></span><br><span class=\"line\">     <span class=\"keyword\">const</span> baseSvg = d3.<span class=\"title function_\">select</span>(<span class=\"string\">&quot;#tree-container&quot;</span>)</span><br><span class=\"line\">         .<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;svg&#x27;</span>)</span><br><span class=\"line\">         .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">viewerWidth</span>)</span><br><span class=\"line\">         .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">viewerHeight</span>)</span><br><span class=\"line\">         .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;class&quot;</span>,<span class=\"string\">&quot;overlay&quot;</span>)</span><br><span class=\"line\">         .<span class=\"title function_\">append</span>(<span class=\"string\">&quot;g&quot;</span>)</span><br><span class=\"line\">         .<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">zoomListener</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">let</span> dragListener = d3.<span class=\"property\">behavior</span>.<span class=\"title function_\">drag</span>()</span><br><span class=\"line\">         .<span class=\"title function_\">on</span>(<span class=\"string\">&quot;dragstart&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (d === <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>) &#123;</span><br><span class=\"line\">             <span class=\"keyword\">return</span>;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"variable language_\">this</span>.<span class=\"property\">dragStarted</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">           <span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">tree</span>.<span class=\"title function_\">nodes</span>(d);</span><br><span class=\"line\">           d3.<span class=\"property\">event</span>.<span class=\"property\">sourceEvent</span>.<span class=\"title function_\">stopPropagation</span>();</span><br><span class=\"line\">         &#125;).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;drag&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (d === <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>) &#123;</span><br><span class=\"line\">             <span class=\"keyword\">return</span>;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">dragStarted</span>) &#123;</span><br><span class=\"line\">             <span class=\"keyword\">let</span> domNode = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"title function_\">initiateDrag</span>(d, domNode);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"comment\">//获取mouseEvent相对于SVG容器的同弦以允许摇摄</span></span><br><span class=\"line\">           <span class=\"keyword\">let</span> relCoords = d3.<span class=\"title function_\">mouse</span>($(<span class=\"string\">&#x27;svg&#x27;</span>).<span class=\"title function_\">get</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (relCoords[<span class=\"number\">0</span>] &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">panBoundary</span>)&#123;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"title function_\">pan</span>(<span class=\"variable language_\">this</span>, <span class=\"string\">&#x27;left&#x27;</span>);</span><br><span class=\"line\">           &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (relCoords[<span class=\"number\">0</span>] &gt; ($(<span class=\"string\">&#x27;svg&#x27;</span>).<span class=\"title function_\">width</span>() - <span class=\"variable language_\">this</span>.<span class=\"property\">panBoundary</span>)) &#123;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"title function_\">pan</span>(<span class=\"variable language_\">this</span>, <span class=\"string\">&#x27;right&#x27;</span>);</span><br><span class=\"line\">           &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (relCoords[<span class=\"number\">1</span>] &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">panBoundary</span>) &#123;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"title function_\">pan</span>(<span class=\"variable language_\">this</span>, <span class=\"string\">&#x27;up&#x27;</span>);</span><br><span class=\"line\">           &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (relCoords[<span class=\"number\">1</span>] &gt; ($(<span class=\"string\">&#x27;svg&#x27;</span>).<span class=\"title function_\">height</span>() - <span class=\"variable language_\">this</span>.<span class=\"property\">panBoundary</span>)) &#123;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"title function_\">pan</span>(<span class=\"variable language_\">this</span>, <span class=\"string\">&#x27;down&#x27;</span>);</span><br><span class=\"line\">           &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">             <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">               <span class=\"built_in\">clearTimeout</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span>);</span><br><span class=\"line\">             &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           d.<span class=\"property\">x0</span> += d3.<span class=\"property\">event</span>.<span class=\"property\">dy</span>;</span><br><span class=\"line\">           d.<span class=\"property\">y0</span> += d3.<span class=\"property\">event</span>.<span class=\"property\">dx</span>;</span><br><span class=\"line\">           <span class=\"keyword\">var</span> node = d3.<span class=\"title function_\">select</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">           node.<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;transform&quot;</span>, <span class=\"string\">&quot;translate(&quot;</span> + d.<span class=\"property\">y0</span> + <span class=\"string\">&quot;,&quot;</span> + d.<span class=\"property\">x0</span> + <span class=\"string\">&quot;)&quot;</span>);</span><br><span class=\"line\">           <span class=\"comment\">//更新临时连接器</span></span><br><span class=\"line\">           <span class=\"variable language_\">this</span>.<span class=\"title function_\">updateTempConnector</span>();</span><br><span class=\"line\">         &#125;).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;dragend&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (d === <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>) &#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">           <span class=\"variable language_\">this</span>.<span class=\"property\">domNode</span> = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>)&#123;</span><br><span class=\"line\">             <span class=\"keyword\">var</span> index = <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">parent</span>.<span class=\"property\">children</span>.<span class=\"title function_\">indexOf</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>);</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (index &gt; -<span class=\"number\">1</span> )&#123;</span><br><span class=\"line\">               <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">parent</span>.<span class=\"property\">children</span>.<span class=\"title function_\">splice</span>(index, <span class=\"number\">1</span>);</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">children</span> !== <span class=\"string\">&quot;undefined&quot;</span> || <span class=\"keyword\">typeof</span> <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">_children</span> !== <span class=\"string\">&#x27;undefined&#x27;</span>)&#123;</span><br><span class=\"line\">               <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">_children</span> !== <span class=\"string\">&quot;undefined&quot;</span>) &#123;</span><br><span class=\"line\">                 <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">children</span>.<span class=\"title function_\">push</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>)</span><br><span class=\"line\">               &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                 <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">_children</span>.<span class=\"title function_\">push</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>)</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">             &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">               <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">children</span> = []</span><br><span class=\"line\">               <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">children</span>.<span class=\"title function_\">push</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>)</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">             <span class=\"comment\">//确保要添加到的节点已展开，以便用户可以看到添加的节点已正确移动</span></span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"title function_\">expand</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>);</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"title function_\">sortTree</span>();</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"title function_\">endDrag</span>();</span><br><span class=\"line\">           &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"title function_\">endDrag</span>();</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">         &#125;);</span><br><span class=\"line\">     <span class=\"comment\">//附加一个包含所有节点的组，缩放侦听器可以对其进行操作。</span></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">svgGroup</span> = baseSvg.<span class=\"title function_\">append</span>(<span class=\"string\">&quot;g&quot;</span>);</span><br><span class=\"line\">     <span class=\"comment\">//移除双击</span></span><br><span class=\"line\">     d3.<span class=\"title function_\">select</span>(<span class=\"string\">&quot;svg&quot;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;dblclick.zoom&quot;</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">root</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">treeData</span>;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>.<span class=\"property\">x0</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">viewerHeight</span>/<span class=\"number\">2</span>;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>.<span class=\"property\">y0</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">     <span class=\"comment\">//最初布局树并以根节点为中心。</span></span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>.<span class=\"property\">children</span>.<span class=\"title function_\">forEach</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">collapse</span>);</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"title function_\">update</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>);</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"title function_\">centerNode</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>);</span><br><span class=\"line\">   &#125;,</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">update</span>(<span class=\"params\">source</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> width = <span class=\"number\">130</span>,</span><br><span class=\"line\">          height = <span class=\"number\">70</span>;</span><br><span class=\"line\">      <span class=\"comment\">//计算新 树图的布局</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">tree</span>.<span class=\"title function_\">nodes</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">root</span>).<span class=\"title function_\">reverse</span>();</span><br><span class=\"line\">      <span class=\"keyword\">let</span> links = <span class=\"variable language_\">this</span>.<span class=\"property\">tree</span>.<span class=\"title function_\">links</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span>)</span><br><span class=\"line\">      <span class=\"comment\">//设置y坐标点  每层占  200px；</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">d</span>=&gt;</span>&#123;</span><br><span class=\"line\">        d.<span class=\"property\">y</span>=d.<span class=\"property\">depth</span> * <span class=\"number\">200</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//每个node对应一个group</span></span><br><span class=\"line\">      <span class=\"comment\">//data()：绑定一个数组到选择集上，数组的各项值分别与选择集的各元素绑定</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> node = <span class=\"variable language_\">this</span>.<span class=\"property\">svgGroup</span>.<span class=\"title function_\">selectAll</span>(<span class=\"string\">&quot;g.node&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">data</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> d.<span class=\"property\">id</span> || (d.<span class=\"property\">id</span> = ++ <span class=\"variable language_\">this</span>.<span class=\"property\">i</span>)</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//新增节点数据集，设置位置</span></span><br><span class=\"line\">      <span class=\"comment\">//在 svg 中添加一个g，g是 svg 中的一个属性，是 group 的意思，</span></span><br><span class=\"line\">      <span class=\"comment\">// 它表示一组什么东西，如一组 lines ， rects ，circles</span></span><br><span class=\"line\">      <span class=\"comment\">// 其实坐标轴就是由这些东西构成的。</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> nodeEnter = node.<span class=\"title function_\">enter</span>().<span class=\"title function_\">append</span>(<span class=\"string\">&quot;g&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;class&quot;</span>, <span class=\"string\">&quot;node&quot;</span>) <span class=\"comment\">//attr设置html属性，style设置css属性</span></span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;transform&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;translate(&quot;</span> + source.<span class=\"property\">y0</span> + <span class=\"string\">&quot;,&quot;</span> + source.<span class=\"property\">x0</span> + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">          &#125;).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;dblclick&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123; <span class=\"variable language_\">this</span>.<span class=\"title function_\">click</span>(d) &#125;);</span><br><span class=\"line\">      <span class=\"comment\">//添加连接点---此处设置的是圆圈过渡时候的效果（颜色）</span></span><br><span class=\"line\">      nodeEnter.<span class=\"title function_\">append</span>(<span class=\"string\">&quot;rect&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;x&quot;</span>, -<span class=\"number\">65</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;y&quot;</span>,-<span class=\"number\">35</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;width&quot;</span>, width)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;height&quot;</span>, height)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;rx&quot;</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill&quot;</span>, <span class=\"string\">&quot;#FFF&quot;</span>); <span class=\"comment\">//d 代表数据，也就是与某元素绑定的数据。</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//指标名称</span></span><br><span class=\"line\">      nodeEnter.<span class=\"title function_\">append</span>(<span class=\"string\">&quot;text&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;x&quot;</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;dy&quot;</span>, -<span class=\"number\">20</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;text-anchor&quot;</span>, <span class=\"string\">&quot;middle&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">text</span>(<span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> d.<span class=\"property\">name</span>;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill&quot;</span>, <span class=\"string\">&quot;gray&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill-opacity&quot;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;font-size&quot;</span>, <span class=\"string\">&quot;12px&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//指标值</span></span><br><span class=\"line\">      nodeEnter.<span class=\"title function_\">append</span>(<span class=\"string\">&quot;text&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;x&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> d.<span class=\"property\">children</span> || d.<span class=\"property\">_children</span> ? -<span class=\"number\">15</span> : -<span class=\"number\">15</span>;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;dy&quot;</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">          <span class=\"comment\">// .attr(&quot;text-anchor&quot;, (d) &#123; return d.children || d._children ? &quot;end&quot; : &quot;start&quot;; &#125;)</span></span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;text-anchor&quot;</span>, <span class=\"string\">&quot;middle&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">text</span>(<span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> d.<span class=\"property\">value</span>.<span class=\"title function_\">toLocaleString</span>();</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill&quot;</span>, <span class=\"string\">&quot;blue&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;font-size&quot;</span>, <span class=\"string\">&quot;18px&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//指标单位</span></span><br><span class=\"line\">      nodeEnter.<span class=\"title function_\">append</span>(<span class=\"string\">&quot;text&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;x&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> d.<span class=\"property\">children</span> || d.<span class=\"property\">_children</span> ? d.<span class=\"property\">value</span> != <span class=\"literal\">null</span> ? d.<span class=\"property\">value</span>.<span class=\"title function_\">toString</span>().<span class=\"property\">length</span> * <span class=\"number\">6</span> - <span class=\"number\">4</span> : <span class=\"number\">10</span> : d.<span class=\"property\">value</span> != <span class=\"literal\">null</span> ? d.<span class=\"property\">value</span>.<span class=\"title function_\">toString</span>().<span class=\"property\">length</span> * <span class=\"number\">6</span> - <span class=\"number\">4</span> : <span class=\"number\">10</span>;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;dy&quot;</span>, -<span class=\"number\">3</span>)</span><br><span class=\"line\">          <span class=\"comment\">// .attr(&quot;text-anchor&quot;, (d) &#123; return d.children || d._children ? &quot;end&quot; : &quot;start&quot;; &#125;)</span></span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;text-anchor&quot;</span>, <span class=\"string\">&quot;middle&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">text</span>(<span class=\"string\">&quot;万元&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill&quot;</span>, <span class=\"string\">&quot;gray&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;font-size&quot;</span>, <span class=\"string\">&quot;10px&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//展开趋势图</span></span><br><span class=\"line\">      nodeEnter.<span class=\"title function_\">append</span>(<span class=\"string\">&quot;text&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;x&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> d.<span class=\"property\">children</span> || d.<span class=\"property\">_children</span> ? <span class=\"number\">50</span> : <span class=\"number\">50</span>;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;dy&quot;</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;text-anchor&quot;</span>, <span class=\"string\">&quot;middle&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">text</span>(<span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;...&quot;</span></span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill&quot;</span>, <span class=\"string\">&quot;gray&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill-opacity&quot;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;font-size&quot;</span>, <span class=\"string\">&quot;28px&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">on</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\">(<span class=\"params\">d, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;触发点击事件&quot;</span>)</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">      <span class=\"comment\">// Transition nodes to their new position.将节点过渡到一个新的位置-----主要是针对节点过渡过程中的过渡效果</span></span><br><span class=\"line\">      <span class=\"comment\">//node就是保留的数据集，为原来数据的图形添加过渡动画。首先是整个组的位置</span></span><br><span class=\"line\">      <span class=\"comment\">//子节点全出来了</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> nodeUpdate = node.<span class=\"title function_\">transition</span>() <span class=\"comment\">//开始一个动画过度</span></span><br><span class=\"line\">          .<span class=\"title function_\">duration</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">duration</span>) <span class=\"comment\">//过渡延迟时间 此处主要设置的是圆圈节点随斜线的过渡延迟</span></span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;transform&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;translate(&quot;</span> + d.<span class=\"property\">y</span> + <span class=\"string\">&quot;,&quot;</span> + d.<span class=\"property\">x</span> + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeUpdate.<span class=\"title function_\">select</span>(<span class=\"string\">&quot;rect&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;x&quot;</span>, -<span class=\"number\">65</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;y&quot;</span>, -<span class=\"number\">35</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;width&quot;</span>, width)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;height&quot;</span>, height/<span class=\"number\">2</span> + <span class=\"number\">10</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;rx&quot;</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill&quot;</span>, <span class=\"string\">&quot;#FFF&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;stroke&quot;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">d</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(d.<span class=\"property\">value</span> === <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span> <span class=\"string\">&#x27;#6b6b6b&#x27;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;steelblue&#x27;</span></span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;stroke-width&quot;</span>, <span class=\"string\">&quot;1.5px&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Transition exiting nodes to the parent&#x27;s new position.过渡现有的节点到父母的新位置。</span></span><br><span class=\"line\">      <span class=\"comment\">//最后处理消失的数据，添加消失动画</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> nodeExit = node.<span class=\"title function_\">exit</span>().<span class=\"title function_\">transition</span>()</span><br><span class=\"line\">          .<span class=\"title function_\">duration</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">duration</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;transform&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;translate(&quot;</span> + source.<span class=\"property\">y</span> + <span class=\"string\">&quot;,&quot;</span> + source.<span class=\"property\">x</span> + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">remove</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeExit.<span class=\"title function_\">select</span>(<span class=\"string\">&quot;rect&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;x&quot;</span>, -<span class=\"number\">65</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;y&quot;</span>, -<span class=\"number\">35</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;width&quot;</span>, width)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;height&quot;</span>, height/<span class=\"number\">2</span> +<span class=\"number\">10</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;rx&quot;</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill&quot;</span>, <span class=\"string\">&quot;#FFF&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeExit.<span class=\"title function_\">select</span>(<span class=\"string\">&quot;text&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;text-anchor&quot;</span>, <span class=\"string\">&quot;middle&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill-opacity&quot;</span>, <span class=\"number\">1e-6</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Update the links…线操作相关</span></span><br><span class=\"line\">      <span class=\"comment\">//再处理连线集合</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> link = <span class=\"variable language_\">this</span>.<span class=\"property\">svgGroup</span>.<span class=\"title function_\">selectAll</span>(<span class=\"string\">&quot;path.link&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill&quot;</span>, <span class=\"string\">&quot;none&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;stroke&quot;</span>, <span class=\"string\">&quot;steelblue&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;stroke-width&quot;</span>, <span class=\"string\">&quot;1.5px&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">data</span>(links, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> d.<span class=\"property\">target</span>.<span class=\"property\">id</span>;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Enter any new links at the parent&#x27;s previous position.</span></span><br><span class=\"line\">      <span class=\"comment\">//添加新的连线</span></span><br><span class=\"line\"></span><br><span class=\"line\">      link.<span class=\"title function_\">enter</span>().<span class=\"title function_\">insert</span>(<span class=\"string\">&quot;path&quot;</span>, <span class=\"string\">&quot;g&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;fill&quot;</span>, <span class=\"string\">&quot;none&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;stroke&quot;</span>, <span class=\"string\">&quot;steelblue&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">style</span>(<span class=\"string\">&quot;stroke-width&quot;</span>, <span class=\"string\">&quot;1.5px&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;class&quot;</span>, <span class=\"string\">&quot;link&quot;</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;d&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> o = &#123;</span><br><span class=\"line\">              <span class=\"attr\">x</span>: source.<span class=\"property\">x0</span>,</span><br><span class=\"line\">              <span class=\"attr\">y</span>: source.<span class=\"property\">y0</span></span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">diagonal</span>(&#123;</span><br><span class=\"line\">              <span class=\"attr\">source</span>: o,</span><br><span class=\"line\">              <span class=\"attr\">target</span>: o</span><br><span class=\"line\">            &#125;); <span class=\"comment\">//diagonal - 生成一个二维贝塞尔连接器, 用于节点连接图.</span></span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;marker-end&#x27;</span>, <span class=\"string\">&#x27;url(#arrow)&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Transition links to their new position.将斜线过渡到新的位置</span></span><br><span class=\"line\">      <span class=\"comment\">//保留的连线添加过渡动画</span></span><br><span class=\"line\">      link.<span class=\"title function_\">transition</span>()</span><br><span class=\"line\">          .<span class=\"title function_\">duration</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">duration</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;d&quot;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">diagonal</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Transition exiting nodes to the parent&#x27;s new position.过渡现有的斜线到父母的新位置。</span></span><br><span class=\"line\">      <span class=\"comment\">//消失的连线添加过渡动画</span></span><br><span class=\"line\">      link.<span class=\"title function_\">exit</span>().<span class=\"title function_\">transition</span>()</span><br><span class=\"line\">          .<span class=\"title function_\">duration</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">duration</span>)</span><br><span class=\"line\">          .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;d&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> o = &#123;</span><br><span class=\"line\">              <span class=\"attr\">x</span>: source.<span class=\"property\">x</span>,</span><br><span class=\"line\">              <span class=\"attr\">y</span>: source.<span class=\"property\">y</span></span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">diagonal</span>(&#123;</span><br><span class=\"line\">              <span class=\"attr\">source</span>: o,</span><br><span class=\"line\">              <span class=\"attr\">target</span>: o</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .<span class=\"title function_\">remove</span>();</span><br><span class=\"line\">      <span class=\"comment\">// Stash the old positions for transition.将旧的斜线过渡效果隐藏</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        d.<span class=\"property\">x0</span> = d.<span class=\"property\">x</span>;</span><br><span class=\"line\">        d.<span class=\"property\">y0</span> = d.<span class=\"property\">y</span>;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n<p>双击收展方法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//展开节点</span></span><br><span class=\"line\"><span class=\"comment\">//children 展示节点 _children 隐藏节点  缩</span></span><br><span class=\"line\">    <span class=\"title function_\">expand</span>(<span class=\"params\">d</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (d.<span class=\"property\">_children</span>)&#123;</span><br><span class=\"line\">        d.<span class=\"property\">children</span> = d.<span class=\"property\">_children</span>;</span><br><span class=\"line\">        d.<span class=\"property\">children</span>.<span class=\"title function_\">forEach</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">expand</span>)</span><br><span class=\"line\">        d.<span class=\"property\">_children</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">//收缩节点</span></span><br><span class=\"line\">    <span class=\"title function_\">collapse</span>(<span class=\"params\">d</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (d.<span class=\"property\">children</span>)&#123;</span><br><span class=\"line\">        d.<span class=\"property\">_children</span>=d.<span class=\"property\">children</span>;</span><br><span class=\"line\">        d.<span class=\"property\">children</span>=<span class=\"literal\">null</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n<p>根据数据判断层数：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//判断是否多层</span></span><br><span class=\"line\"><span class=\"title function_\">treeDepths</span>(<span class=\"params\">g</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> depths = [];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (g.<span class=\"property\">children</span>)</span><br><span class=\"line\">    g.<span class=\"property\">children</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">v</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">dfs</span>(v, <span class=\"number\">1</span>, depths);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> depths;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">//嵌套循环</span></span><br><span class=\"line\"><span class=\"title function_\">dfs</span>(<span class=\"params\">v, depth, depths</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> children = v.<span class=\"property\">children</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (children &amp;&amp; children.<span class=\"property\">length</span> &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    children.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">child</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">dfs</span>(child, depth + <span class=\"number\">1</span>, depths);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    depths.<span class=\"title function_\">push</span>(v);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>排序节点：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//排序</span></span><br><span class=\"line\"><span class=\"title function_\">sortTree</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;==排序开始==&quot;</span>)</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">tree</span>.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> b.<span class=\"property\">name</span> ? b.<span class=\"property\">name</span>.<span class=\"title function_\">toLowerCase</span>() : b.<span class=\"property\">name</span> &lt; a.<span class=\"property\">name</span> ? a.<span class=\"property\">name</span>.<span class=\"title function_\">toLowerCase</span>() : a.<span class=\"property\">name</span> ? <span class=\"number\">1</span> : -<span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>拖拉行为：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">zoom</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">svgGroup</span>.<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;transform&quot;</span>, <span class=\"string\">&quot;translate(&quot;</span> + d3.<span class=\"property\">event</span>.<span class=\"property\">translate</span> + <span class=\"string\">&quot;)scale(&quot;</span> + d3.<span class=\"property\">event</span>.<span class=\"property\">scale</span> + <span class=\"string\">&quot;)&quot;</span>);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">    </span><br><span class=\"line\">      <span class=\"comment\">//拖拽开始时对节点进行一系列操作，以确保拖拽过程中节点的正确显示和相关连线的调整。</span></span><br><span class=\"line\"><span class=\"title function_\">initiateDrag</span>(<span class=\"params\">d, domNode</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  将当前被拖拽的节点保存在this.draggingNode属性中，</span></span><br><span class=\"line\"><span class=\"comment\">  以便在拖拽过程中能够对其进行操作</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span> = d;</span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  1=</span></span><br><span class=\"line\"><span class=\"comment\">  为了将被拖拽节点的.ghostCircle元素的</span></span><br><span class=\"line\"><span class=\"comment\">  pointer-events属性设置为none，</span></span><br><span class=\"line\"><span class=\"comment\">  以避免拖拽节点时干扰到其他元素</span></span><br><span class=\"line\"><span class=\"comment\">  2=</span></span><br><span class=\"line\"><span class=\"comment\">  为了将所有.ghostCircle元素的类设置为ghostCircle show，</span></span><br><span class=\"line\"><span class=\"comment\">  这可能是用于显示拖拽节点周围的虚拟元素</span></span><br><span class=\"line\"><span class=\"comment\">  3=为了为被拖拽的节点设置类名，可能是用于在拖拽过程中应用特定的样式</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  d3.<span class=\"title function_\">select</span>(domNode).<span class=\"title function_\">select</span>(<span class=\"string\">&#x27;.ghostCircle&#x27;</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;pointer-events&#x27;</span>, <span class=\"string\">&#x27;none&#x27;</span>);</span><br><span class=\"line\">  d3.<span class=\"title function_\">selectAll</span>(<span class=\"string\">&#x27;.ghostCircle&#x27;</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;ghostCircle show&#x27;</span>);</span><br><span class=\"line\">  d3.<span class=\"title function_\">select</span>(domNode).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;node activeDrag&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  重新排序所有节点，将被拖拽的节点置于最前面，</span></span><br><span class=\"line\"><span class=\"comment\">  以确保它能够在拖拽过程中正确显示在其他节点之上</span></span><br><span class=\"line\"><span class=\"comment\">  选择父项并对路径的</span></span><br><span class=\"line\"><span class=\"comment\">  a 不是悬停元素，将“a”发送到后面</span></span><br><span class=\"line\"><span class=\"comment\">  a 是悬停元素，将“a”放在前面</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">svgGroup</span>.<span class=\"title function_\">selectAll</span>(<span class=\"string\">&quot;g.node&quot;</span>).<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123; <span class=\"comment\">// select the parent and sort the path&#x27;s</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a.<span class=\"property\">id</span> !== <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">id</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>; <span class=\"comment\">// a is not the hovered element, send &quot;a&quot; to the back</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> -<span class=\"number\">1</span>; <span class=\"comment\">// a is the hovered element, bring &quot;a&quot; to the front</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"comment\">// 如果节点有子节点，请删除链接和节点</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span>.<span class=\"property\">length</span> &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// remove link paths 删除链接路径</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> links = <span class=\"variable language_\">this</span>.<span class=\"property\">tree</span>.<span class=\"title function_\">links</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> nodePaths = <span class=\"variable language_\">this</span>.<span class=\"property\">svgGroup</span>.<span class=\"title function_\">selectAll</span>(<span class=\"string\">&quot;path.link&quot;</span>)</span><br><span class=\"line\">        .<span class=\"title function_\">data</span>(links, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> d.<span class=\"property\">target</span>.<span class=\"property\">id</span>;</span><br><span class=\"line\">        &#125;).<span class=\"title function_\">remove</span>();</span><br><span class=\"line\">    <span class=\"comment\">// remove child nodes 删除子节点</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> nodesExit = <span class=\"variable language_\">this</span>.<span class=\"property\">svgGroup</span>.<span class=\"title function_\">selectAll</span>(<span class=\"string\">&quot;g.node&quot;</span>)</span><br><span class=\"line\">        .<span class=\"title function_\">data</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> d.<span class=\"property\">id</span>;</span><br><span class=\"line\">        &#125;).<span class=\"title function_\">filter</span>(<span class=\"function\">(<span class=\"params\">d, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (d.<span class=\"property\">id</span> === <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">id</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;).<span class=\"title function_\">remove</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// remove parent link</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> parentLink = <span class=\"variable language_\">this</span>.<span class=\"property\">tree</span>.<span class=\"title function_\">links</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">tree</span>.<span class=\"title function_\">nodes</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">parent</span>));</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">svgGroup</span>.<span class=\"title function_\">selectAll</span>(<span class=\"string\">&#x27;path.link&#x27;</span>).<span class=\"title function_\">filter</span>(<span class=\"function\">(<span class=\"params\">d, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (d.<span class=\"property\">target</span>.<span class=\"property\">id</span> === <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">id</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;).<span class=\"title function_\">remove</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">dragStarted</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//更新指示拖动隶属关系的临时连接器</span></span><br><span class=\"line\"><span class=\"title function_\">updateTempConnector</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> data = [];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span> !== <span class=\"literal\">null</span> &amp;&amp; <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span> !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// have to flip the source coordinates since we did this for the existing connectors on the original tree</span></span><br><span class=\"line\">    data = [&#123;</span><br><span class=\"line\">      <span class=\"attr\">source</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">x</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">y0</span>,</span><br><span class=\"line\">        <span class=\"attr\">y</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">x0</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">target</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">x</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">y0</span>,</span><br><span class=\"line\">        <span class=\"attr\">y</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">x0</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> link = <span class=\"variable language_\">this</span>.<span class=\"property\">svgGroup</span>.<span class=\"title function_\">selectAll</span>(<span class=\"string\">&quot;.templink&quot;</span>).<span class=\"title function_\">data</span>(data);</span><br><span class=\"line\"></span><br><span class=\"line\">  link.<span class=\"title function_\">enter</span>().<span class=\"title function_\">append</span>(<span class=\"string\">&quot;path&quot;</span>)</span><br><span class=\"line\">      .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;class&quot;</span>, <span class=\"string\">&quot;templink&quot;</span>)</span><br><span class=\"line\">      .<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;d&quot;</span>, d3.<span class=\"property\">svg</span>.<span class=\"title function_\">diagonal</span>())</span><br><span class=\"line\">      .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;pointer-events&#x27;</span>, <span class=\"string\">&#x27;none&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  link.<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;d&quot;</span>, d3.<span class=\"property\">svg</span>.<span class=\"title function_\">diagonal</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">  link.<span class=\"title function_\">exit</span>().<span class=\"title function_\">remove</span>();</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"d3-方法介绍\">d3 方法介绍</h2>\n<h4 id=\"append\">append()</h4>\n<p><code>.append('svg')</code>和<code>.append('g')</code>是D3中的方法，用于在DOM中添加SVG元素和G元素。</p>\n<p><code>.append('svg')</code>方法用于在选定的DOM元素中添加一个SVG元素。SVG（可缩放矢量图形）是一种用于在Web上显示矢量图形的XML语言。通过使用<code>.append('svg')</code>方法，你可以在DOM中创建一个包含SVG图形的容器，以便在其中绘制图形、添加元素等。例如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制d3.<span class=\"title function_\">select</span>(<span class=\"string\">&#x27;body&#x27;</span>).<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;svg&#x27;</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">500</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"number\">300</span>);</span><br></pre></td></tr></table></figure>\n<p>上述代码在<code>&lt;body&gt;</code>元素中添加了一个SVG元素，并设置宽度为500像素、高度为300像素。</p>\n<p><code>.append('g')</code>方法用于在已经存在的SVG元素中添加一个G元素。G元素是SVG中的分组元素，可以用于组织和管理其他SVG元素。你可以将G元素看作是一个容器，可以在其中放置其他SVG元素，然后对整个组进行变换、样式设置等操作。例如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制<span class=\"keyword\">const</span> svg = d3.<span class=\"title function_\">select</span>(<span class=\"string\">&#x27;body&#x27;</span>).<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;svg&#x27;</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">500</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"number\">300</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> g = svg.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;g&#x27;</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">&#x27;translate(50, 50)&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">g.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;rect&#x27;</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;width&#x27;</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;fill&#x27;</span>, <span class=\"string\">&#x27;blue&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p>上述代码先在<code>&lt;body&gt;</code>元素中添加了一个SVG元素，然后在SVG元素中添加了一个G元素，设置了G元素的平移变换，最后在G元素中添加了一个矩形元素。</p>\n<p>希望解答了你的问题。如果还有其他疑问，请随时提出。</p>\n<h5 id=\"d3.behavior.drag\">d3.behavior.drag()</h5>\n<ol type=\"1\">\n<li><code>dragstart</code>：当拖拽开始时触发。在这个回调函数中，首先判断拖拽的目标节点<code>d</code>是否为根节点<code>this.root</code>。如果是根节点，则直接返回，不执行后续的拖拽操作。否则，将<code>this.dragStarted</code>标志设置为<code>true</code>，并获取该节点的所有子节点。最后，通过<code>d3.event.sourceEvent.stopPropagation()</code>阻止事件继续传播。</li>\n<li><code>drag</code>：当拖拽过程中持续触发。在这个回调函数中，首先判断拖拽的目标节点<code>d</code>是否为根节点<code>this.root</code>。如果是根节点，则直接返回，不执行后续的拖拽操作。接下来，如果<code>this.dragStarted</code>为<code>true</code>，则调用<code>initiateDrag()</code>方法来初始化拖拽操作。然后，获取鼠标事件相对于SVG容器的坐标，并根据坐标来判断是否需要进行平移操作。最后，更新目标节点的位置，并调用<code>updateTempConnector()</code>方法更新临时连接器。</li>\n<li><code>dragend</code>：当拖拽结束时触发。在这个回调函数中，首先判断拖拽的目标节点<code>d</code>是否为根节点<code>this.root</code>，如果是根节点，则直接返回。接下来，将<code>this.domNode</code>设置为当前节点，并判断是否有选中的节点<code>this.selectedNode</code>。如果有选中的节点，则将被拖拽的节点<code>this.draggingNode</code>从其父节点中移除，并将其添加到选中的节点的子节点或子节点集合中，然后展开选中的节点，对树进行排序，并结束拖拽操作。如果没有选中的节点，则直接结束拖拽操作。</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> dragListener = d3.<span class=\"property\">behavior</span>.<span class=\"title function_\">drag</span>()</span><br><span class=\"line\">          .<span class=\"title function_\">on</span>(<span class=\"string\">&quot;dragstart&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (d === <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>) &#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">dragStarted</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">nodes</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">tree</span>.<span class=\"title function_\">nodes</span>(d);</span><br><span class=\"line\">            d3.<span class=\"property\">event</span>.<span class=\"property\">sourceEvent</span>.<span class=\"title function_\">stopPropagation</span>();</span><br><span class=\"line\">          &#125;).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;drag&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (d === <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>) &#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">dragStarted</span>) &#123;</span><br><span class=\"line\">              <span class=\"keyword\">let</span> domNode = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"title function_\">initiateDrag</span>(d, domNode);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//获取mouseEvent相对于SVG容器的同弦以允许摇摄</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> relCoords = d3.<span class=\"title function_\">mouse</span>($(<span class=\"string\">&#x27;svg&#x27;</span>).<span class=\"title function_\">get</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (relCoords[<span class=\"number\">0</span>] &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">panBoundary</span>)&#123;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"title function_\">pan</span>(<span class=\"variable language_\">this</span>, <span class=\"string\">&#x27;left&#x27;</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (relCoords[<span class=\"number\">0</span>] &gt; ($(<span class=\"string\">&#x27;svg&#x27;</span>).<span class=\"title function_\">width</span>() - <span class=\"variable language_\">this</span>.<span class=\"property\">panBoundary</span>)) &#123;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"title function_\">pan</span>(<span class=\"variable language_\">this</span>, <span class=\"string\">&#x27;right&#x27;</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (relCoords[<span class=\"number\">1</span>] &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">panBoundary</span>) &#123;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"title function_\">pan</span>(<span class=\"variable language_\">this</span>, <span class=\"string\">&#x27;up&#x27;</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (relCoords[<span class=\"number\">1</span>] &gt; ($(<span class=\"string\">&#x27;svg&#x27;</span>).<span class=\"title function_\">height</span>() - <span class=\"variable language_\">this</span>.<span class=\"property\">panBoundary</span>)) &#123;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"title function_\">pan</span>(<span class=\"variable language_\">this</span>, <span class=\"string\">&#x27;down&#x27;</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"built_in\">clearTimeout</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">panTimer</span>);</span><br><span class=\"line\">              &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            d.<span class=\"property\">x0</span> += d3.<span class=\"property\">event</span>.<span class=\"property\">dy</span>;</span><br><span class=\"line\">            d.<span class=\"property\">y0</span> += d3.<span class=\"property\">event</span>.<span class=\"property\">dx</span>;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> node = d3.<span class=\"title function_\">select</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">            node.<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;transform&quot;</span>, <span class=\"string\">&quot;translate(&quot;</span> + d.<span class=\"property\">y0</span> + <span class=\"string\">&quot;,&quot;</span> + d.<span class=\"property\">x0</span> + <span class=\"string\">&quot;)&quot;</span>);</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"title function_\">updateTempConnector</span>();</span><br><span class=\"line\">          &#125;).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;dragend&quot;</span>, <span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (d === <span class=\"variable language_\">this</span>.<span class=\"property\">root</span>) &#123;<span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">domNode</span> = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>)&#123;</span><br><span class=\"line\">              <span class=\"keyword\">var</span> index = <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">parent</span>.<span class=\"property\">children</span>.<span class=\"title function_\">indexOf</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>);</span><br><span class=\"line\">              <span class=\"keyword\">if</span> (index &gt; -<span class=\"number\">1</span> )&#123;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>.<span class=\"property\">parent</span>.<span class=\"property\">children</span>.<span class=\"title function_\">splice</span>(index, <span class=\"number\">1</span>);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">children</span> !== <span class=\"string\">&quot;undefined&quot;</span> || <span class=\"keyword\">typeof</span> <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">_children</span> !== <span class=\"string\">&#x27;undefined&#x27;</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">_children</span> !== <span class=\"string\">&quot;undefined&quot;</span>) &#123;</span><br><span class=\"line\">                  <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">children</span>.<span class=\"title function_\">push</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>)</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                  <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">_children</span>.<span class=\"title function_\">push</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">children</span> = []</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>.<span class=\"property\">children</span>.<span class=\"title function_\">push</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">draggingNode</span>)</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              <span class=\"comment\">//确保要添加到的节点已展开，以便用户可以看到添加的节点已正确移动</span></span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"title function_\">expand</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">selectedNode</span>);</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"title function_\">sortTree</span>();</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"title function_\">endDrag</span>();</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"title function_\">endDrag</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"end-完整代码\">End 完整代码</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div block :scroll=&quot;true&quot;&gt;</span><br><span class=\"line\">    &lt;div style=&quot;background-color: white;border: 3px black;&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--    指标下钻--&gt;</span><br><span class=\"line\">  &lt;div id=&quot;screenshot&quot; style=&quot;width:100%;height:90%&quot;&gt;</span><br><span class=\"line\">    &lt;div id=&quot;tree-container&quot; style=&quot;width:100%;height:95%;&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import * as d3 from &#x27;d3&#x27;;</span><br><span class=\"line\">import $ from &#x27;jquery&#x27;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  data()&#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      treeData:&#123;</span><br><span class=\"line\">        name: &#x27;收入&#x27;,</span><br><span class=\"line\">        value:100,</span><br><span class=\"line\">        analysisContent:&quot;demo&quot;,</span><br><span class=\"line\">        children: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            name: &#x27;电费收入&#x27;,</span><br><span class=\"line\">            value: 10,</span><br><span class=\"line\">            analysisContent:&quot;demo&quot;,</span><br><span class=\"line\">            children: []</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            name: &#x27;供热收入&#x27;,</span><br><span class=\"line\">            value: 8,</span><br><span class=\"line\">            analysisContent:&quot;demo&quot;,</span><br><span class=\"line\">            children: []</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          ,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            name: &#x27;副产品收入&#x27;,</span><br><span class=\"line\">            value: 8,</span><br><span class=\"line\">            analysisContent:&quot;demo&quot;,</span><br><span class=\"line\">            children: []</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            name: &#x27;其他收入&#x27;,</span><br><span class=\"line\">            value: 8,</span><br><span class=\"line\">            analysisContent:&quot;demo&quot;,</span><br><span class=\"line\">            children: []</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      //视图大小</span><br><span class=\"line\">      viewerWidth:null,</span><br><span class=\"line\">      viewerHeight:null,</span><br><span class=\"line\">      minHeight:null,</span><br><span class=\"line\">      //层数 判断是否多层，默认显示2层</span><br><span class=\"line\">      depths:[],</span><br><span class=\"line\">      //对角线投影，供稍后的节点路径使用</span><br><span class=\"line\">      diagonal:null,</span><br><span class=\"line\">      //树布局</span><br><span class=\"line\">      tree:null,</span><br><span class=\"line\">      //总节点数</span><br><span class=\"line\">      totalNodes:null,</span><br><span class=\"line\">      //文字最大长度</span><br><span class=\"line\">      maxLabelLength:null,</span><br><span class=\"line\">      zoomListener:null,</span><br><span class=\"line\">      //dragListener  dragstart</span><br><span class=\"line\">      root:null,</span><br><span class=\"line\">      dragStarted:null,</span><br><span class=\"line\">      nodes:null,</span><br><span class=\"line\">      //dragListener  drag</span><br><span class=\"line\">      panTimer:null,</span><br><span class=\"line\">      //initiateDrag  用于拖放的变量</span><br><span class=\"line\">      draggingNode:null,</span><br><span class=\"line\">      selectedNode:null,</span><br><span class=\"line\">      // panning variables  平移变量</span><br><span class=\"line\">      panSpeed: 200,</span><br><span class=\"line\">      panBoundary: 20, // 拖动时，距离边缘 20px 以内将平移。</span><br><span class=\"line\">      // Misc. variables 其他变量</span><br><span class=\"line\">      i:0,</span><br><span class=\"line\">      domNode:null,</span><br><span class=\"line\"></span><br><span class=\"line\">      //centerNode</span><br><span class=\"line\">      duration:750,</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mounted() &#123;</span><br><span class=\"line\">    this.drawTree();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    drawTree() &#123;</span><br><span class=\"line\">      //show D3 tree</span><br><span class=\"line\">      this.depths = this.treeDepths(this.treeData);</span><br><span class=\"line\">      console.log(this.depths)</span><br><span class=\"line\">      //建立树布局</span><br><span class=\"line\">      this.minHeight = 500;</span><br><span class=\"line\">      this.viewerWidth = $(&quot;#screenshot&quot;).width();</span><br><span class=\"line\">      this.viewerHeight = $(&quot;#screenshot&quot;).height();</span><br><span class=\"line\">      console.log(this.viewerHeight)</span><br><span class=\"line\">      if (this.viewerHeight &lt; this.minHeight)</span><br><span class=\"line\">        this.viewerHeight = this.minHeight</span><br><span class=\"line\">      this.viewerHeight=500</span><br><span class=\"line\"></span><br><span class=\"line\">      this.tree = d3.layout.tree()</span><br><span class=\"line\">          .size([this.viewerHeight, this.viewerWidth]);</span><br><span class=\"line\">      //定义一个d3对角线投影，供稍后的节点路径使用</span><br><span class=\"line\">      this.diagonal = d3.svg.diagonal()</span><br><span class=\"line\">          .projection(d =&gt; &#123;</span><br><span class=\"line\">            return [d.y, d.x];</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">      //call visit to maxLabelLength</span><br><span class=\"line\">      this.visit(this.treeData, (d) =&gt; &#123;</span><br><span class=\"line\">        this.totalNodes++;</span><br><span class=\"line\">        if (d.name) &#123;</span><br><span class=\"line\">          this.maxLabelLength = Math.max(d.name.length, this.maxLabelLength);</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">          this.maxLabelLength = Math.max(0, this.maxLabelLength);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;, (d) =&gt; &#123;</span><br><span class=\"line\">        return d.children &amp;&amp; d.children.length &gt; 0 ? d.children : null;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      console.log(&quot;总节点&quot;,this.totalNodes)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">      //排序树最初是为了防止json没有按排序顺序排列</span><br><span class=\"line\">      this.sortTree()</span><br><span class=\"line\">      //定义 zoomListener，该 zoomListener 在 scaleExtents 中约束的“zoom”事件上调用缩放</span><br><span class=\"line\">      this.zoomListener = d3.behavior.zoom().scaleExtent([0.1, 3]).on(&quot;zoom&quot;, () =&gt; &#123;</span><br><span class=\"line\">        this.zoom()</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      //创建视图</span><br><span class=\"line\">      const baseSvg = d3.select(&quot;#tree-container&quot;)</span><br><span class=\"line\">          .append(&#x27;svg&#x27;)</span><br><span class=\"line\">          .attr(&#x27;width&#x27;, this.viewerWidth)</span><br><span class=\"line\">          .attr(&#x27;height&#x27;, this.viewerHeight)</span><br><span class=\"line\">          .attr(&quot;class&quot;,&quot;overlay&quot;)</span><br><span class=\"line\">          .append(&quot;g&quot;)</span><br><span class=\"line\">          .call(this.zoomListener)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">      let dragListener = d3.behavior.drag()</span><br><span class=\"line\">          .on(&quot;dragstart&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            if (d === this.root) &#123;</span><br><span class=\"line\">              return;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            this.dragStarted = true;</span><br><span class=\"line\">            this.nodes = this.tree.nodes(d);</span><br><span class=\"line\">            d3.event.sourceEvent.stopPropagation();</span><br><span class=\"line\">          &#125;).on(&quot;drag&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            if (d === this.root) &#123;</span><br><span class=\"line\">              return;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if (this.dragStarted) &#123;</span><br><span class=\"line\">              let domNode = this;</span><br><span class=\"line\">              this.initiateDrag(d, domNode);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            //获取mouseEvent相对于SVG容器的同弦以允许摇摄</span><br><span class=\"line\">            let relCoords = d3.mouse($(&#x27;svg&#x27;).get(0));</span><br><span class=\"line\">            if (relCoords[0] &lt; this.panBoundary)&#123;</span><br><span class=\"line\">              this.panTimer = true;</span><br><span class=\"line\">              this.pan(this, &#x27;left&#x27;);</span><br><span class=\"line\">            &#125;else if (relCoords[0] &gt; ($(&#x27;svg&#x27;).width() - this.panBoundary)) &#123;</span><br><span class=\"line\">              this.panTimer = true;</span><br><span class=\"line\">              this.pan(this, &#x27;right&#x27;);</span><br><span class=\"line\">            &#125;else if (relCoords[1] &lt; this.panBoundary) &#123;</span><br><span class=\"line\">              this.panTimer = true;</span><br><span class=\"line\">              this.pan(this, &#x27;up&#x27;);</span><br><span class=\"line\">            &#125;else if (relCoords[1] &gt; ($(&#x27;svg&#x27;).height() - this.panBoundary)) &#123;</span><br><span class=\"line\">              this.panTimer = true;</span><br><span class=\"line\">              this.pan(this, &#x27;down&#x27;);</span><br><span class=\"line\">            &#125;else &#123;</span><br><span class=\"line\">              try &#123;</span><br><span class=\"line\">                clearTimeout(this.panTimer);</span><br><span class=\"line\">              &#125; catch (e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            d.x0 += d3.event.dy;</span><br><span class=\"line\">            d.y0 += d3.event.dx;</span><br><span class=\"line\">            var node = d3.select(this);</span><br><span class=\"line\">            node.attr(&quot;transform&quot;, &quot;translate(&quot; + d.y0 + &quot;,&quot; + d.x0 + &quot;)&quot;);</span><br><span class=\"line\">            //更新临时连接器</span><br><span class=\"line\">            this.updateTempConnector();</span><br><span class=\"line\">          &#125;).on(&quot;dragend&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            if (d === this.root) &#123;return;&#125;</span><br><span class=\"line\">            this.domNode = this;</span><br><span class=\"line\">            if (this.selectedNode)&#123;</span><br><span class=\"line\">              var index = this.draggingNode.parent.children.indexOf(this.draggingNode);</span><br><span class=\"line\">              if (index &gt; -1 )&#123;</span><br><span class=\"line\">                this.draggingNode.parent.children.splice(index, 1);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              if (typeof this.selectedNode.children !== &quot;undefined&quot; || typeof this.selectedNode._children !== &#x27;undefined&#x27;)&#123;</span><br><span class=\"line\">                if (typeof this.selectedNode._children !== &quot;undefined&quot;) &#123;</span><br><span class=\"line\">                  this.selectedNode.children.push(this.draggingNode)</span><br><span class=\"line\">                &#125;else &#123;</span><br><span class=\"line\">                  this.selectedNode._children.push(this.draggingNode)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;else &#123;</span><br><span class=\"line\">                this.selectedNode.children = []</span><br><span class=\"line\">                this.selectedNode.children.push(this.draggingNode)</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              //确保要添加到的节点已展开，以便用户可以看到添加的节点已正确移动</span><br><span class=\"line\">              this.expand(this.selectedNode);</span><br><span class=\"line\">              this.sortTree();</span><br><span class=\"line\">              this.endDrag();</span><br><span class=\"line\">            &#125;else&#123;</span><br><span class=\"line\">              this.endDrag();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">      //附加一个包含所有节点的组，缩放侦听器可以对其进行操作。</span><br><span class=\"line\">      this.svgGroup = baseSvg.append(&quot;g&quot;);</span><br><span class=\"line\">      //移除双击</span><br><span class=\"line\">      d3.select(&quot;svg&quot;).on(&quot;dblclick.zoom&quot;, null);</span><br><span class=\"line\">      this.root = this.treeData;</span><br><span class=\"line\">      this.root.x0 = this.viewerHeight/2;</span><br><span class=\"line\">      this.root.y0 = 0;</span><br><span class=\"line\">      //最初布局树并以根节点为中心。</span><br><span class=\"line\">      //添加提示框 div</span><br><span class=\"line\">      this.tooltip = d3.select(&quot;#tree-container&quot;).append(&quot;div&quot;)</span><br><span class=\"line\">          .attr(&quot;class&quot;, &quot;tooltip&quot;)</span><br><span class=\"line\">          .style(&quot;opacity&quot;, &quot;1.0&quot;)</span><br><span class=\"line\">          .style(&quot;display&quot;,&quot;none&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">      this.root.children.forEach(this.collapse);</span><br><span class=\"line\">      this.update(this.root);</span><br><span class=\"line\">      this.centerNode(this.root);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    //判断是否多层</span><br><span class=\"line\">    treeDepths(g) &#123;</span><br><span class=\"line\">      var depths = [];</span><br><span class=\"line\">      if (g.children)</span><br><span class=\"line\">        g.children.forEach((v) =&gt; &#123;</span><br><span class=\"line\">          this.dfs(v, 1, depths);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      return depths;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    //嵌套循环</span><br><span class=\"line\">    dfs(v, depth, depths) &#123;</span><br><span class=\"line\">      var children = v.children;</span><br><span class=\"line\">      if (children &amp;&amp; children.length &gt; 0) &#123;</span><br><span class=\"line\">        children.forEach((child) =&gt; &#123;</span><br><span class=\"line\">          this.dfs(child, depth + 1, depths);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        depths.push(v);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    //递归 通过遍历所有节点  执行某些设置</span><br><span class=\"line\">    visit(parent, visitFn, childrenFn) &#123;</span><br><span class=\"line\">      if (!parent) return;</span><br><span class=\"line\">      visitFn(parent);</span><br><span class=\"line\">      var children = childrenFn(parent);</span><br><span class=\"line\">      if (children) &#123;</span><br><span class=\"line\">        var count = children.length;</span><br><span class=\"line\">        for (var i = 0; i &lt; count; i++) &#123;</span><br><span class=\"line\">          this.visit(children[i], visitFn, childrenFn);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    //排序</span><br><span class=\"line\">    sortTree() &#123;</span><br><span class=\"line\">      console.log(&quot;==排序开始==&quot;)</span><br><span class=\"line\">      this.tree.sort((a, b) =&gt; &#123;</span><br><span class=\"line\">        return b.name ? b.name.toLowerCase() : b.name &lt; a.name ? a.name.toLowerCase() : a.name ? 1 : -1;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    zoom() &#123;</span><br><span class=\"line\">      this.svgGroup.attr(&quot;transform&quot;, &quot;translate(&quot; + d3.event.translate + &quot;)scale(&quot; + d3.event.scale + &quot;)&quot;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    //拖拽开始时对节点进行一系列操作，以确保拖拽过程中节点的正确显示和相关连线的调整。</span><br><span class=\"line\">    initiateDrag(d, domNode) &#123;</span><br><span class=\"line\">      /*</span><br><span class=\"line\">      将当前被拖拽的节点保存在this.draggingNode属性中，</span><br><span class=\"line\">      以便在拖拽过程中能够对其进行操作</span><br><span class=\"line\">       */</span><br><span class=\"line\">      this.draggingNode = d;</span><br><span class=\"line\">      /*</span><br><span class=\"line\">      1=</span><br><span class=\"line\">      为了将被拖拽节点的.ghostCircle元素的</span><br><span class=\"line\">      pointer-events属性设置为none，</span><br><span class=\"line\">      以避免拖拽节点时干扰到其他元素</span><br><span class=\"line\">      2=</span><br><span class=\"line\">      为了将所有.ghostCircle元素的类设置为ghostCircle show，</span><br><span class=\"line\">      这可能是用于显示拖拽节点周围的虚拟元素</span><br><span class=\"line\">      3=为了为被拖拽的节点设置类名，可能是用于在拖拽过程中应用特定的样式</span><br><span class=\"line\">       */</span><br><span class=\"line\">      d3.select(domNode).select(&#x27;.ghostCircle&#x27;).attr(&#x27;pointer-events&#x27;, &#x27;none&#x27;);</span><br><span class=\"line\">      d3.selectAll(&#x27;.ghostCircle&#x27;).attr(&#x27;class&#x27;, &#x27;ghostCircle show&#x27;);</span><br><span class=\"line\">      d3.select(domNode).attr(&#x27;class&#x27;, &#x27;node activeDrag&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">      /*</span><br><span class=\"line\">      重新排序所有节点，将被拖拽的节点置于最前面，</span><br><span class=\"line\">      以确保它能够在拖拽过程中正确显示在其他节点之上</span><br><span class=\"line\">      选择父项并对路径的</span><br><span class=\"line\">      a 不是悬停元素，将“a”发送到后面</span><br><span class=\"line\">      a 是悬停元素，将“a”放在前面</span><br><span class=\"line\">       */</span><br><span class=\"line\">      this.svgGroup.selectAll(&quot;g.node&quot;).sort((a, b) =&gt; &#123; // select the parent and sort the path&#x27;s</span><br><span class=\"line\">        if (a.id !== this.draggingNode.id) return 1; // a is not the hovered element, send &quot;a&quot; to the back</span><br><span class=\"line\">        else return -1; // a is the hovered element, bring &quot;a&quot; to the front</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      // 如果节点有子节点，请删除链接和节点</span><br><span class=\"line\">      if (this.nodes.length &gt; 1) &#123;</span><br><span class=\"line\">        // remove link paths 删除链接路径</span><br><span class=\"line\">        let links = this.tree.links(this.nodes);</span><br><span class=\"line\">        let nodePaths = this.svgGroup.selectAll(&quot;path.link&quot;)</span><br><span class=\"line\">            .data(links, (d) =&gt; &#123;</span><br><span class=\"line\">              return d.target.id;</span><br><span class=\"line\">            &#125;).remove();</span><br><span class=\"line\">        // remove child nodes 删除子节点</span><br><span class=\"line\">        let nodesExit = this.svgGroup.selectAll(&quot;g.node&quot;)</span><br><span class=\"line\">            .data(this.nodes, (d) =&gt; &#123;</span><br><span class=\"line\">              return d.id;</span><br><span class=\"line\">            &#125;).filter((d, i) =&gt; &#123;</span><br><span class=\"line\">              if (d.id === this.draggingNode.id) &#123;</span><br><span class=\"line\">                return false;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              return true;</span><br><span class=\"line\">            &#125;).remove();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      // remove parent link</span><br><span class=\"line\">      let parentLink = this.tree.links(this.tree.nodes(this.draggingNode.parent));</span><br><span class=\"line\">      this.svgGroup.selectAll(&#x27;path.link&#x27;).filter((d, i) =&gt; &#123;</span><br><span class=\"line\">        if (d.target.id === this.draggingNode.id) &#123;</span><br><span class=\"line\">          return true;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">      &#125;).remove();</span><br><span class=\"line\"></span><br><span class=\"line\">      this.dragStarted = null;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    pan(domNode, direction)&#123;</span><br><span class=\"line\">      let speed = this.panSpeed,translateX,translateY;</span><br><span class=\"line\">      if (this.panTimer)&#123;</span><br><span class=\"line\">        clearTimeout(this.panTimer);</span><br><span class=\"line\">        let translateCoords = d3.transform(this.svgGroup.attr(&quot;transform&quot;));</span><br><span class=\"line\">        if (direction === &#x27;left&#x27; || direction === &#x27;right&#x27;) &#123;</span><br><span class=\"line\">          translateX = direction === &#x27;left&#x27; ? translateCoords.translate[0] + speed : translateCoords.translate[0] - speed;</span><br><span class=\"line\">          translateY = translateCoords.translate[1];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (direction === &#x27;up&#x27; || direction === &#x27;down&#x27;) &#123;</span><br><span class=\"line\">          translateX = translateCoords.translate[0];</span><br><span class=\"line\">          translateY = direction === &#x27;up&#x27; ? translateCoords.translate[1] + speed : translateCoords.translate[1] - speed;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        let scaleX = translateCoords.scale[0];</span><br><span class=\"line\">        let scaleY = translateCoords.scale[1];</span><br><span class=\"line\">        let scale = this.zoomListener.scale();</span><br><span class=\"line\">        this.svgGroup.transition().attr(&quot;transform&quot;, &quot;translate(&quot; + translateX + &quot;,&quot; + translateY + &quot;)scale(&quot; + scale + &quot;)&quot;);</span><br><span class=\"line\">        d3.select(domNode).select(&#x27;g.node&#x27;).attr(&quot;transform&quot;, &quot;translate(&quot; + translateX + &quot;,&quot; + translateY + &quot;)&quot;);</span><br><span class=\"line\">        this.zoomListener.scale(this.zoomListener.scale());</span><br><span class=\"line\">        this.zoomListener.translate([translateX, translateY]);</span><br><span class=\"line\">        this.panTimer = setTimeout(()=&gt;&#123;</span><br><span class=\"line\">          this.pan(domNode, direction);</span><br><span class=\"line\">        &#125;,50)</span><br><span class=\"line\"></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    //to update the temporary connector indicating dragging affiliation</span><br><span class=\"line\">    //更新指示拖动隶属关系的临时连接器</span><br><span class=\"line\">    updateTempConnector() &#123;</span><br><span class=\"line\">      var data = [];</span><br><span class=\"line\">      if (this.draggingNode !== null &amp;&amp; this.selectedNode !== null) &#123;</span><br><span class=\"line\">        // have to flip the source coordinates since we did this for the existing connectors on the original tree</span><br><span class=\"line\">        data = [&#123;</span><br><span class=\"line\">          source: &#123;</span><br><span class=\"line\">            x: this.selectedNode.y0,</span><br><span class=\"line\">            y: this.selectedNode.x0</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          target: &#123;</span><br><span class=\"line\">            x: this.draggingNode.y0,</span><br><span class=\"line\">            y: this.draggingNode.x0</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      let link = this.svgGroup.selectAll(&quot;.templink&quot;).data(data);</span><br><span class=\"line\"></span><br><span class=\"line\">      link.enter().append(&quot;path&quot;)</span><br><span class=\"line\">          .attr(&quot;class&quot;, &quot;templink&quot;)</span><br><span class=\"line\">          .attr(&quot;d&quot;, d3.svg.diagonal())</span><br><span class=\"line\">          .attr(&#x27;pointer-events&#x27;, &#x27;none&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">      link.attr(&quot;d&quot;, d3.svg.diagonal());</span><br><span class=\"line\"></span><br><span class=\"line\">      link.exit().remove();</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    //展开节点</span><br><span class=\"line\">    expand(d)&#123;</span><br><span class=\"line\">      if (d._children)&#123;</span><br><span class=\"line\">        d.children = d._children;</span><br><span class=\"line\">        d.children.forEach(this.expand)</span><br><span class=\"line\">        d._children = null</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    //在拖拽操作结束后，重置节点和虚拟节点的样式和属性，以确保它们恢复到正常状态并且不再响应鼠标事件。</span><br><span class=\"line\">    endDrag()&#123;</span><br><span class=\"line\">      this.selectedNode = null;</span><br><span class=\"line\">      d3.selectAll(&#x27;.ghostCircle&#x27;).attr(&#x27;class&#x27;,&#x27;ghostCircle&#x27;);</span><br><span class=\"line\">      d3.select(this.domNode).attr(&#x27;class&#x27;, &#x27;node&#x27;);</span><br><span class=\"line\">      //禁用这些元素的鼠标事件，使其在拖拽过程中不再响应鼠标交互</span><br><span class=\"line\">      d3.select(this.domNode).select(&#x27;.ghostCircle&#x27;).attr(&#x27;pointer-events&#x27;, &#x27;none&#x27;);</span><br><span class=\"line\">      this.updateTempConnector()</span><br><span class=\"line\">      if (this.draggingNode !=null )&#123;</span><br><span class=\"line\">        this.update(this.root)</span><br><span class=\"line\">        this.centerNode(this.draggingNode)</span><br><span class=\"line\">        this.draggingNode = null;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    //节点更新   重点</span><br><span class=\"line\">    update(source)&#123;</span><br><span class=\"line\">      var width = 130,</span><br><span class=\"line\">          height = 70;</span><br><span class=\"line\">      //计算新 树图的布局</span><br><span class=\"line\">      this.nodes = this.tree.nodes(this.root).reverse();</span><br><span class=\"line\">      let links = this.tree.links(this.nodes)</span><br><span class=\"line\">      //设置y坐标点  每层占  200px；</span><br><span class=\"line\">      this.nodes.forEach(d=&gt;&#123;</span><br><span class=\"line\">        d.y=d.depth * 200</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">      //每个node对应一个group</span><br><span class=\"line\">      //data()：绑定一个数组到选择集上，数组的各项值分别与选择集的各元素绑定</span><br><span class=\"line\">      let node = this.svgGroup.selectAll(&quot;g.node&quot;)</span><br><span class=\"line\">          .data(this.nodes, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.id || (d.id = ++ this.i)</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">      //新增节点数据集，设置位置</span><br><span class=\"line\">      //在 svg 中添加一个g，g是 svg 中的一个属性，是 group 的意思，</span><br><span class=\"line\">      // 它表示一组什么东西，如一组 lines ， rects ，circles</span><br><span class=\"line\">      // 其实坐标轴就是由这些东西构成的。</span><br><span class=\"line\">      let nodeEnter = node.enter().append(&quot;g&quot;)</span><br><span class=\"line\">          .attr(&quot;class&quot;, &quot;node&quot;) //attr设置html属性，style设置css属性</span><br><span class=\"line\">          .attr(&quot;transform&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return &quot;translate(&quot; + source.y0 + &quot;,&quot; + source.x0 + &quot;)&quot;;</span><br><span class=\"line\">          &#125;).on(&quot;dblclick&quot;, (d) =&gt; &#123; this.click(d) &#125;);</span><br><span class=\"line\">      //添加连接点---此处设置的是圆圈过渡时候的效果（颜色）</span><br><span class=\"line\">      nodeEnter.append(&quot;rect&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, -65)</span><br><span class=\"line\">          .attr(&quot;y&quot;,-35)</span><br><span class=\"line\">          .attr(&quot;width&quot;, width)</span><br><span class=\"line\">          .attr(&quot;height&quot;, height)</span><br><span class=\"line\">          .attr(&quot;rx&quot;, 10)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;#FFF&quot;); //d 代表数据，也就是与某元素绑定的数据。</span><br><span class=\"line\"></span><br><span class=\"line\">      //指标名称</span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, 0)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, -25)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text((d) =&gt; &#123;</span><br><span class=\"line\">            return d.name;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;gray&quot;)</span><br><span class=\"line\">          .style(&quot;fill-opacity&quot;, 1)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;10px&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">      //指标值</span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.children || d._children ? -15 : -15;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, -5)</span><br><span class=\"line\">          // .attr(&quot;text-anchor&quot;, (d) &#123; return d.children || d._children ? &quot;end&quot; : &quot;start&quot;; &#125;)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text((d) =&gt; &#123;</span><br><span class=\"line\">            return d.value.toLocaleString();</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;blue&quot;)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;18px&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">      //指标单位</span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.children || d._children ? d.value != null ? d.value.toString().length * 6 - 4 : 10 : d.value != null ? d.value.toString().length * 6 - 4 : 10;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, -5)</span><br><span class=\"line\">          // .attr(&quot;text-anchor&quot;, (d) &#123; return d.children || d._children ? &quot;end&quot; : &quot;start&quot;; &#125;)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text(&quot;万元&quot;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;gray&quot;)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;10px&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeEnter.append(&quot;line&quot;)</span><br><span class=\"line\">          .attr(&quot;x1&quot;, -width / 2)</span><br><span class=\"line\">          .attr(&quot;y1&quot;, 5)</span><br><span class=\"line\">          .attr(&quot;x2&quot;, width / 2)</span><br><span class=\"line\">          .attr(&quot;y2&quot;, 5)</span><br><span class=\"line\">          .attr(&quot;stroke&quot;,function(d)&#123;</span><br><span class=\"line\">            if(d.value === 0)&#123;</span><br><span class=\"line\">              return &#x27;#6b6b6b&#x27;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            return &#x27;steelblue&#x27;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.children || d._children ? -40 : -40;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, 15)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text((d) =&gt; &#123;</span><br><span class=\"line\">            return &quot;同比&quot;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;gray&quot;)</span><br><span class=\"line\">          .style(&quot;fill-opacity&quot;, 1)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;10px&quot;);;</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.children || d._children ? -58 : -58;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, 30)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text(&quot;↑&quot;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;red&quot;)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;15px&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">      // 新增标签标识</span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, 50)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, 29)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text((d) =&gt; &#123;</span><br><span class=\"line\">            // return &quot;📌&quot;;📑🔖🔗🎫✎</span><br><span class=\"line\">            // return d.labelId != null ? &quot;📑&quot; : &quot;&quot;;</span><br><span class=\"line\">            return &quot;📌&quot;;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;fill&quot;,&quot;#2f6db3&quot;)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;12px&quot;);//75px</span><br><span class=\"line\">      //同比值</span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.children || d._children ? -40 : -40;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, 30)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text((d) =&gt; &#123;</span><br><span class=\"line\">            return d.anValue != null ? Math.abs(d.anValue)+&#x27;%&#x27; : &quot;&quot;;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return &quot;black&quot;;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;10px&quot;)</span><br><span class=\"line\">          //-鼠标移入事件</span><br><span class=\"line\">          .on(&quot;mouseover&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">              let xPosition = d3.event.offsetX;</span><br><span class=\"line\">              let yPosition = d3.event.offsetY + 60;</span><br><span class=\"line\">              //添加标签</span><br><span class=\"line\">              this.tooltip.html(d.analysisContent.replace(/\\r/g, &quot;&lt;br&gt;&quot;).replace(/\\r\\n/g, &quot;&lt;br&gt;&quot;))</span><br><span class=\"line\">                  //设置tooltip的位置(left,top 相对于页面的距离)</span><br><span class=\"line\">                  .style(&quot;left&quot;, xPosition + &quot;px&quot;)</span><br><span class=\"line\">                  .style(&quot;top&quot;, yPosition + &quot;px&quot;)</span><br><span class=\"line\">                  .style(&quot;border-radius&quot;, &quot;10px&quot;)</span><br><span class=\"line\">                  .style(&quot;border&quot;, &quot; 1px solid #999&quot;)</span><br><span class=\"line\">                  .style(&quot;padding&quot;, &quot;5px 10px&quot;)</span><br><span class=\"line\">                  .style(&quot;display&quot;, &quot;block&quot;);</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          //--鼠标移出事件</span><br><span class=\"line\">          .on(&quot;mouseout&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            this.tooltip.style(&quot;display&quot;, &quot;none&quot;);</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">//计划值名称</span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.children || d._children ? 10 : 10;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, 15)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text((d) =&gt; &#123;</span><br><span class=\"line\">            return &quot;计划值&quot;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;gray&quot;)</span><br><span class=\"line\">          .style(&quot;fill-opacity&quot;, 1)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;10px&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">      //计划值</span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.children || d._children ? 10 : 10;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, 30)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text((d) =&gt; &#123;</span><br><span class=\"line\">            return d.value;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;blue&quot;)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;12px&quot;);</span><br><span class=\"line\">      //展开趋势图</span><br><span class=\"line\">      nodeEnter.append(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.children || d._children ? 50 : 50;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .attr(&quot;dy&quot;, 15)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .text((d) =&gt; &#123;</span><br><span class=\"line\">            return &quot;...&quot;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;gray&quot;)</span><br><span class=\"line\">          .style(&quot;fill-opacity&quot;, 1)</span><br><span class=\"line\">          .style(&quot;font-size&quot;, &quot;28px&quot;)</span><br><span class=\"line\">          .on(&quot;click&quot;, (d, i) =&gt; &#123;</span><br><span class=\"line\">            console.log(&quot;触发点击事件&quot;)</span><br><span class=\"line\">            // this.getChartsData()</span><br><span class=\"line\">            // this.dialogVisible.three = true</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">      // Transition nodes to their new position.将节点过渡到一个新的位置-----主要是针对节点过渡过程中的过渡效果</span><br><span class=\"line\">      //node就是保留的数据集，为原来数据的图形添加过渡动画。首先是整个组的位置</span><br><span class=\"line\">      //子节点全出来了</span><br><span class=\"line\">      var nodeUpdate = node.transition() //开始一个动画过度</span><br><span class=\"line\">          .duration(this.duration) //过渡延迟时间 此处主要设置的是圆圈节点随斜线的过渡延迟</span><br><span class=\"line\">          .attr(&quot;transform&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return &quot;translate(&quot; + d.y + &quot;,&quot; + d.x + &quot;)&quot;;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeUpdate.select(&quot;rect&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, -65)</span><br><span class=\"line\">          .attr(&quot;y&quot;, -35)</span><br><span class=\"line\">          .attr(&quot;width&quot;, width)</span><br><span class=\"line\">          .attr(&quot;height&quot;, height)</span><br><span class=\"line\">          .attr(&quot;rx&quot;, 10)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;#FFF&quot;)</span><br><span class=\"line\">          .style(&quot;stroke&quot;,function(d)&#123;</span><br><span class=\"line\">            if(d.value === 0)&#123;</span><br><span class=\"line\">              return &#x27;#6b6b6b&#x27;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            return &#x27;steelblue&#x27;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .style(&quot;stroke-width&quot;, &quot;1.5px&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeUpdate.select(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .style(&quot;fill-opacity&quot;, 1);</span><br><span class=\"line\"></span><br><span class=\"line\">      // Transition exiting nodes to the parent&#x27;s new position.过渡现有的节点到父母的新位置。</span><br><span class=\"line\">      //最后处理消失的数据，添加消失动画</span><br><span class=\"line\">      var nodeExit = node.exit().transition()</span><br><span class=\"line\">          .duration(this.duration)</span><br><span class=\"line\">          .attr(&quot;transform&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            return &quot;translate(&quot; + source.y + &quot;,&quot; + source.x + &quot;)&quot;;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .remove();</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeExit.select(&quot;rect&quot;)</span><br><span class=\"line\">          .attr(&quot;x&quot;, -65)</span><br><span class=\"line\">          .attr(&quot;y&quot;, -35)</span><br><span class=\"line\">          .attr(&quot;width&quot;, width)</span><br><span class=\"line\">          .attr(&quot;height&quot;, height)</span><br><span class=\"line\">          .attr(&quot;rx&quot;, 10)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;#FFF&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">      nodeExit.select(&quot;text&quot;)</span><br><span class=\"line\">          .attr(&quot;text-anchor&quot;, &quot;middle&quot;)</span><br><span class=\"line\">          .style(&quot;fill-opacity&quot;, 1e-6);</span><br><span class=\"line\"></span><br><span class=\"line\">      // Update the links…线操作相关</span><br><span class=\"line\">      //再处理连线集合</span><br><span class=\"line\">      let link = this.svgGroup.selectAll(&quot;path.link&quot;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;none&quot;)</span><br><span class=\"line\">          .style(&quot;stroke&quot;, &quot;steelblue&quot;)</span><br><span class=\"line\">          .style(&quot;stroke-width&quot;, &quot;1.5px&quot;)</span><br><span class=\"line\">          .data(links, (d) =&gt; &#123;</span><br><span class=\"line\">            return d.target.id;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      // Enter any new links at the parent&#x27;s previous position.</span><br><span class=\"line\">      //添加新的连线</span><br><span class=\"line\"></span><br><span class=\"line\">      link.enter().insert(&quot;path&quot;, &quot;g&quot;)</span><br><span class=\"line\">          .style(&quot;fill&quot;, &quot;none&quot;)</span><br><span class=\"line\">          .style(&quot;stroke&quot;, &quot;steelblue&quot;)</span><br><span class=\"line\">          .style(&quot;stroke-width&quot;, &quot;1.5px&quot;)</span><br><span class=\"line\">          .attr(&quot;class&quot;, &quot;link&quot;)</span><br><span class=\"line\">          .attr(&quot;d&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            var o = &#123;</span><br><span class=\"line\">              x: source.x0,</span><br><span class=\"line\">              y: source.y0</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\">            return this.diagonal(&#123;</span><br><span class=\"line\">              source: o,</span><br><span class=\"line\">              target: o</span><br><span class=\"line\">            &#125;); //diagonal - 生成一个二维贝塞尔连接器, 用于节点连接图.</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .attr(&#x27;marker-end&#x27;, &#x27;url(#arrow)&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">      // Transition links to their new position.将斜线过渡到新的位置</span><br><span class=\"line\">      //保留的连线添加过渡动画</span><br><span class=\"line\">      link.transition()</span><br><span class=\"line\">          .duration(this.duration)</span><br><span class=\"line\">          .attr(&quot;d&quot;, this.diagonal);</span><br><span class=\"line\"></span><br><span class=\"line\">      // Transition exiting nodes to the parent&#x27;s new position.过渡现有的斜线到父母的新位置。</span><br><span class=\"line\">      //消失的连线添加过渡动画</span><br><span class=\"line\">      link.exit().transition()</span><br><span class=\"line\">          .duration(this.duration)</span><br><span class=\"line\">          .attr(&quot;d&quot;, (d) =&gt; &#123;</span><br><span class=\"line\">            var o = &#123;</span><br><span class=\"line\">              x: source.x,</span><br><span class=\"line\">              y: source.y</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\">            return this.diagonal(&#123;</span><br><span class=\"line\">              source: o,</span><br><span class=\"line\">              target: o</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .remove();</span><br><span class=\"line\">      // Stash the old positions for transition.将旧的斜线过渡效果隐藏</span><br><span class=\"line\">      this.nodes.forEach((d) =&gt; &#123;</span><br><span class=\"line\">        d.x0 = d.x;</span><br><span class=\"line\">        d.y0 = d.y;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    //收缩节点</span><br><span class=\"line\">    collapse(d)&#123;</span><br><span class=\"line\">      if (d.children)&#123;</span><br><span class=\"line\">        d._children=d.children;</span><br><span class=\"line\">        d.children=null</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    //当点击/删除时，中心节点，这样节点在折叠/移动时不会丢失大量的子节点。</span><br><span class=\"line\">    centerNode(source)&#123;</span><br><span class=\"line\">      //scale()方法用于返回当前的缩放比例值  缩放比例值</span><br><span class=\"line\">      let scale = this.zoomListener.scale();</span><br><span class=\"line\">      let x = -source.y0;</span><br><span class=\"line\">      let y = -source.x0;</span><br><span class=\"line\">      x = x* scale +100;</span><br><span class=\"line\">      y = y* scale +this.viewerHeight /2;</span><br><span class=\"line\">      d3.select(&#x27;g&#x27;).transition()</span><br><span class=\"line\">          .duration(this.duration)</span><br><span class=\"line\">          .attr(&quot;transform&quot;, &quot;translate(&quot; + x + &quot;,&quot; + y + &quot;)scale(&quot; + scale + &quot;)&quot;);</span><br><span class=\"line\">      this.zoomListener.scale(scale);</span><br><span class=\"line\">      this.zoomListener.translate([x, y]);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    //点击事件</span><br><span class=\"line\">    click(d)&#123;</span><br><span class=\"line\">      if (d.children)&#123;</span><br><span class=\"line\">        d._children=d.children;</span><br><span class=\"line\">        d.children = null</span><br><span class=\"line\">      &#125;else&#123;</span><br><span class=\"line\">        d.children = d._children</span><br><span class=\"line\">        if (d.children === [] || d.children == null)&#123;</span><br><span class=\"line\">          return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        d.children.forEach(this.collapse)</span><br><span class=\"line\">        d._children = null;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      let depths = this.treeDepths(this.treeData);</span><br><span class=\"line\">      this.viewerHeight = depths.length * 100;</span><br><span class=\"line\">      if (this.viewerHeight &lt; this.minHeight)</span><br><span class=\"line\">        this.viewerHeight = this.minHeight;</span><br><span class=\"line\">      this.tree = d3.layout.tree()</span><br><span class=\"line\">          .size([this.viewerHeight, this.viewerWidth]);</span><br><span class=\"line\">      this.update(d)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">circle &#123;</span><br><span class=\"line\">  fill: #ccc;</span><br><span class=\"line\">  stroke: #000;</span><br><span class=\"line\">  stroke-width: 1px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">text &#123;</span><br><span class=\"line\">  font-size: 12px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">path.link &#123;</span><br><span class=\"line\">  fill: none;</span><br><span class=\"line\">  stroke: #ccc;</span><br><span class=\"line\">  stroke-width: 1.5px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "前端",
                "D3.js"
            ]
        },
        {
            "id": "http://example.com/2024/10/17/post/utils/utils/",
            "url": "http://example.com/2024/10/17/post/utils/utils/",
            "title": "实用小工具",
            "date_published": "2024-10-17T03:08:48.332Z",
            "content_html": "<h1 id=\"实用小工具\">实用小工具</h1>\n<h2 id=\"windows系统\">Windows系统</h2>\n<h4 id=\"geek软件卸载工具\">1、Geek：软件卸载工具</h4>\n<p><strong>简介</strong>：GeekUninstaller正式版是一款相当不错的单文件绿色卸载软件，它体积轻巧，反映迅速，并且完全免费，支持多国语言，完美支持支持32位与64位系统，并且它只有一个exe文件\n(软件大小不到2M)，你不需要安装即可直接卸载软件、强制彻底清除软件残留垃圾文件或是查看某软件的注册表项目等等，让你的系统瞬间变得高速流畅。</p>\n<p>果核剥壳链接：https://www.ghxi.com/geek.html</p>\n<p>网盘分享链接：</p>\n<h4 id=\"everything数据检索工具\">2、Everything：数据检索工具</h4>\n<p><strong>简介</strong>：Everything是速度最快的文件搜索软件，可以瞬间搜索到你需要的文件。如果你用过Windows自Everything是速度最快的文件搜索软件，可以瞬间搜索到你需要的文件。如果你用过Windows自带的搜索工具、Total\nCommander的搜索、Google\n桌面搜索或百度硬盘搜索，都因为速度或其他原因而不满意；或者用了Locate32也不满意（或满意），推荐这款体积小巧、免安装、免费、速度极快（比Locate32更快）的文件搜索工具Everything！</p>\n<p>果核剥壳链接：https://www.ghxi.com/everything.html</p>\n<h4\nid=\"formatfactory格式工厂格式转换工具\">3、FormatFactory格式工厂：格式转换工具</h4>\n<p><strong>简介</strong>：格式工厂是套万能的多媒体格式转换器，提供以下功能：所有类型视频转到MP4/3GP/MPG/AVI/WMV/FLV/SWF。所有类型音频转到MP3/WMA/MMF/AMR/OGG/M4A/WAV。你可以在格式工厂中文版界面的左侧列表中看到软件提供的主要功能，如视频转换、音频转换、图片转换、DVD/CD/ISO转换，以及视频合并、音频合并、混流等高级功能。格式工厂强大的格式转换功能和友好的操作性，无疑使格式工厂成为同类软件中的佼者。</p>\n<p>果核剥壳链接：https://www.ghxi.com/formatfactory-2.html</p>\n<h4 id=\"timesync系统时间校准工具\">4、Timesync：系统时间校准工具</h4>\n<p><strong>简介</strong>：<strong>TimeSync</strong>\n是一款由德国知名自由软件开发工程师 <strong>Horst Schaeffer</strong>\n精心设计与荣誉出品的可用于获取来自 <strong>NIST</strong>\n标准互联网时间服务的当前时间并在必要时校准与同步用户计算机时钟时间的实用管理工具。尽管当前系统的确切时间可以由较新版本的微软\nWindows\n平台的官方服务器或者您的路由器提供，然而在特定需要时您可能希望拥有这样一款额外的时间校准同步助手随叫随到。</p>\n<p>下载地址：</p>\n<p>【网站】<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGFuem91eC5jb20vYjA1YW8xYTRm\">蓝奏云</span> <a\nhref=\"https://www.90pan.com/o143870\">90网盘</a> <a\nhref=\"https://cloud.degoo.com/share/rbCgElQIOSaJMY\">Degoo网盘</a></p>\n<h4\nid=\"contextmenumanager.net.3.5-右键管理工具\">5、ContextMenuManager.NET.3.5\n： 右键管理工具</h4>\n<p><strong>简介</strong>：ContextMenuManager是一款C#开发的Windows10右键菜单管理软件，软件小巧，功能强大，使用起来非常方便。遗憾的是软件只支持Windows10。</p>\n<p>果核剥壳链接：https://www.ghxi.com/contextmenumanager.html</p>\n<h4 id=\"iobit-unlocker文件文件夹解锁工具\">6、IObit\nUnlocker：文件/文件夹解锁工具</h4>\n<p><strong>简介</strong>：Obit Unlocker\n是一款小巧、易用和免费的文件/文件夹解锁工具，您可通过拖放或点击添加按钮对目标文件/文件夹进行删除、重命名、移动和复制等操作，解决无法删除或访问被拒绝等问题。</p>\n<p>使用 IObit\nUnlocker，您不会再收到“无法删除文件”、“访问被拒绝”、“文件未删除”、“该文件正被另一个程序或用户使用”或“共享冲突”等提示消息。它是一个强大的工具，通过终止所有阻止您删除或访问文件/文件夹的相关进程解决这些问题。</p>\n<p>通过“解锁 &amp; 删除”、“解锁 &amp; 重命名”、“解锁 &amp; 移动”和“解锁\n&amp;\n复制”功能，为您提供了一种安全的方法修改您计算机上的文件和文件夹，以确保您的数据安全和磁盘的稳定性。</p>\n<p>果核剥壳链接：https://www.ghxi.com/iobitunlocker.html</p>\n<h4 id=\"spacesniffer磁盘分析工具\">7、SpaceSniffer：磁盘分析工具</h4>\n<p><strong>简介</strong>：有时候我们在整理磁盘时，想知道磁盘中哪些文件或文件夹占用了多少空间，要是一个个文件夹点进去看，那岂不是非常浪费时间，对整体也没有一个很直观的印象。\nSpaceSniffer 可让您了解文件夹和文件在磁盘上的结构。通过使用可视化布局,\n您可以立即看到某个文件在磁盘中到底有“多大”！看看是哪个文件夹或文件占用了大量空间，以便迅速一键删除。</p>\n<p>果核剥壳链接：https://www.ghxi.com/spacesniffer.html</p>\n<h2 id=\"开发工具\">开发工具</h2>\n<h4 id=\"idea-jrebel热部署插件\">1、idea-&gt;JRebel热部署插件</h4>\n<h4 id=\"datagrip-数据库jetbrains系列工具\">2、DataGrip\n数据库jetbrains系列工具</h4>\n",
            "tags": [
                "实用小工具",
                "tools"
            ]
        },
        {
            "id": "http://example.com/2024/10/17/post/utils/Localtunnel/",
            "url": "http://example.com/2024/10/17/post/utils/Localtunnel/",
            "title": "Localtunnel本地暴露公网",
            "date_published": "2024-10-17T03:08:48.247Z",
            "content_html": "<h1 id=\"localtunnel\">Localtunnel</h1>\n<p>简易使用</p>\n<p>1、安装</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g localtunnel</span><br></pre></td></tr></table></figure>\n<p>2、启动本地服务：确保本地服务正在运行中，比如8080端口</p>\n<p>3、运行Localtunnel：在命令行中输入以下命令，替换端口</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lt --port 8080</span><br></pre></td></tr></table></figure>\n<p>注意：如显示lt非命令，带上完成路径<code>D:\\iot\\nvm\\v20.17.0\\node_global\\lt</code></p>\n<p>4、获取URL：运行后会显示一个公共URL（如：<code>https://randomsubdomain.loca.lt</code>），可以将这个URL用作webhook的接收地址</p>\n<p>项目介绍</p>\n<p>1、目录结构</p>\n<p>Localtunnel\n是一个轻量级的开源工具，允许您将本地开发环境暴露给互联网，以便测试和分享。以下是该项目的基本目录结构：</p>\n<p>. ├── bin # 包含可执行脚本 │ └── localtunnel # 主要的命令行工具 ├──\nlib # 库文件 │ ├── eslintrc.js # ESLint 配置 │ └── ... ├── CHANGELOG.md\n# 更新日志 ├── LICENSE # 开源许可证（MIT） ├── README.md # 项目说明文档\n├── localtunnel.js # 主应用程序代码 └── ... # 其他支持文件\nbin/localtunnel 文件是用于从命令行启动 localtunnel 服务的主要脚本。 lib\n目录包含了项目的核心逻辑和其他辅助库。</p>\n<p>2、启动文件</p>\n<p>主启动文件是 lib/localtunnel.js。它实现了命令行接口 (bin/localtunnel)\n调用时所需的逻辑，包括解析参数，建立隧道连接，并管理与本地服务器的通信。要运行本地tunnel服务，通常你会通过全局安装后的\nlocaltunnel 命令行工具，而不是直接执行这个文件。</p>\n<p>3、配置文件</p>\n<p>Localtunnel\n并没有明确的全局配置文件。大部分配置是通过命令行参数传递的，如 --port 和\n--subdomain。如果你希望自定义默认行为，你可以对项目进行克隆并修改\nbin/localtunnel 或 lib/localtunnel.js\n中的代码，或者创建自己的包装脚本来覆盖默认配置。</p>\n<p>常见命令行选项： --port：指定要转发的本地端口号，默认值是 8080。\n--subdomain：设置一个特定的子域名，使你的公共URL更易记忆。\n--host（非标准）：用来指定服务端的主机名，如果你需要使用自托管的服务。\n例如，如果你想始终使用子域名 \"myapp\" 并映射到本地的 8001\n端口，你可以这样做：</p>\n<p>npx localtunnel --subdomain myapp --port 8001 这就创建了一个通过\n<your-subdomain>.localtunnel.me 访问的隧道，指向本地的 8001 端口。</p>\n<p>请注意，尽管 localtunnel\n不提供传统意义上的配置文件，但它可以根据需要集成到现有的开发工作流程中，例如通过Node.js脚本或npm\nscripts来定制启动命令。</p>\n<p>并没有明确的全局配置文件。大部分配置是通过命令行参数传递的，如 --port\n和 --subdomain。如果你希望自定义默认行为，你可以对项目进行克隆并修改\nbin/localtunnel 或 lib/localtunnel.js\n中的代码，或者创建自己的包装脚本来覆盖默认配置。</p>\n<p>常见命令行选项： --port：指定要转发的本地端口号，默认值是 8080。\n--subdomain：设置一个特定的子域名，使你的公共URL更易记忆。\n--host（非标准）：用来指定服务端的主机名，如果你需要使用自托管的服务。\n例如，如果你想始终使用子域名 \"myapp\" 并映射到本地的 8001\n端口，你可以这样做：</p>\n<p>npx localtunnel --subdomain myapp --port 8001 这就创建了一个通过\n<your-subdomain>.localtunnel.me 访问的隧道，指向本地的 8001 端口。</p>\n<p>请注意，尽管 localtunnel\n不提供传统意义上的配置文件，但它可以根据需要集成到现有的开发工作流程中，例如通过Node.js脚本或npm\nscripts来定制启动命令。</p>\n",
            "tags": [
                "实用小工具",
                "tools"
            ]
        },
        {
            "id": "http://example.com/2024/10/17/post/utils/JRebel%20%E4%BD%BF%E7%94%A8debug%E7%BC%96%E8%AF%91%E5%8D%A1%E4%BD%8F%E9%97%AE%E9%A2%98/",
            "url": "http://example.com/2024/10/17/post/utils/JRebel%20%E4%BD%BF%E7%94%A8debug%E7%BC%96%E8%AF%91%E5%8D%A1%E4%BD%8F%E9%97%AE%E9%A2%98/",
            "title": "实用小工具",
            "date_published": "2024-10-17T03:08:48.221Z",
            "content_html": "<h4 id=\"jrebel-使用debug编译卡住问题\">JRebel 使用debug编译卡住问题</h4>\n<p><img\nsrc=\"https://dlink.host/wx4.sinaimg.cn/large/006V2BDqly8hsob5h5rwuj30rr0jhdiq.jpg\" /></p>\n",
            "tags": [
                "实用小工具",
                "tools"
            ]
        },
        {
            "id": "http://example.com/2024/10/17/post/sql/redis/04-Redis%E9%97%AE%E9%A2%98%E5%B0%8F%E8%AE%B0/",
            "url": "http://example.com/2024/10/17/post/sql/redis/04-Redis%E9%97%AE%E9%A2%98%E5%B0%8F%E8%AE%B0/",
            "title": "Redis问题小记",
            "date_published": "2024-10-17T03:08:48.175Z",
            "content_html": "<h1 id=\"redis问题小记\">Redis问题小记</h1>\n<h2 id=\"redis为什么这么快\">1、Redis为什么这么快？</h2>\n<p>Redis内部做了非常多的性能优化，比较重要的有下面3点：</p>\n<p>1.Redis基于内存，内存的访问速度比磁盘快很多；</p>\n<p>2.Redis基于Reactor模式设计开发了一套高效的事件处理模型，主要是单线程事件循环和IO多路复用；</p>\n<p>3.Redis内置了多种优化过后的数据类型/结构实现，性能非常高</p>\n<p>4.Redis通信协议实现简单且解析高效。</p>\n<p><img\nsrc=\"D:\\Pictures\\typore\\006V2BDqly8htd3bxd9m4j31b00u0ae5.jpg\" /></p>\n<p>那既然都这么快了，为什么不直接用Redis当主数据库呢？主要是因为内存成本太高了且Redis提供的数据持久化仍然有数据丢失的风险。</p>\n<h2 id=\"redis应用\">Redis应用</h2>\n<p>redis出了做缓存，还能做什么？</p>\n<ul>\n<li><strong>分布式锁</strong>：通过 Redis\n来做分布式锁是一种比较常见的方式。通常情况下，我们都是基于 Redisson\n来实现分布式锁。</li>\n<li><strong>限流</strong>：一般是通过 Redis + Lua\n脚本的方式来实现限流。如果不想自己写 Lua 脚本的话，也可以直接利用\nRedisson 中的 <code>RRateLimiter</code>\n来实现分布式限流，其底层实现就是基于 Lua 代码+令牌桶算法。</li>\n<li><strong>消息队列</strong>：Redis 自带的 List\n数据结构可以作为一个简单的队列使用。Redis 5.0 中增加的 Stream\n类型的数据结构更加适合用来做消息队列。它比较类似于\nKafka，有主题和消费组的概念，支持消息持久化以及 ACK 机制。</li>\n<li><strong>延时队列</strong>：Redisson 内置了延时队列（基于 Sorted Set\n实现的）。</li>\n<li><strong>分布式 Session</strong> ：利用 String 或者 Hash 数据类型保存\nSession 数据，所有的服务器都可以访问。</li>\n<li><strong>复杂业务场景</strong>：通过 Redis 以及 Redis 扩展（比如\nRedisson）提供的数据结构，我们可以很方便地完成很多复杂的业务场景比如通过\nBitmap 统计活跃用户、通过 Sorted Set 维护排行榜。</li>\n<li>……</li>\n</ul>\n<h2 id=\"redis-事务\">Redis 事务</h2>\n<h3 id=\"什么是-redis-事务\">什么是 Redis 事务？</h3>\n<p>你可以将 Redis 中的事务理解为：Redis\n事务提供了一种将多个命令请求打包的功能。然后，再按顺序执行打包的所有命令，并且不会被中途打断。</p>\n<p>Redis\n事务实际开发中使用的非常少，功能比较鸡肋，不要将其和我们平时理解的关系型数据库的事务混淆了。</p>\n<p>除了不满足原子性和持久性之外，事务中的每条命令都会与 Redis\n服务器进行网络交互，这是比较浪费资源的行为。明明一次批量执行多个命令就可以了，这种操作实在是看不懂。</p>\n<p>因此，Redis 事务是不建议在日常开发中使用的。</p>\n<h3 id=\"如何使用-redis-事务\">如何使用 Redis 事务？</h3>\n<p>Redis 可以通过 MULTI，EXEC，DISCARD 和 WATCH\n等命令来实现事务(Transaction)功能。</p>\n<blockquote>\n<p>MULTI OK SET PROJECT \"JavaGuide\" QUEUED GET PROJECT QUEUED EXEC 1) OK\n2) \"JavaGuide\" MULTIopen in new window 命令后可以输入多个命令，Redis\n不会立即执行这些命令，而是将它们放到队列，当调用了 EXECopen in new\nwindow 命令后，再执行所有的命令。</p>\n</blockquote>\n<p>这个过程是这样的：</p>\n<p>开始事务（MULTI）； 命令入队(批量操作 Redis\n的命令，先进先出（FIFO）的顺序执行)； 执行事务(EXEC)。 你也可以通过\nDISCARDopen in new window\n命令取消一个事务，它会清空事务队列中保存的所有命令。</p>\n<blockquote>\n<p>MULTI OK SET PROJECT \"JavaGuide\" QUEUED GET PROJECT QUEUED DISCARD OK\n你可以通过WATCHopen in new window 命令监听指定的 Key，当调用 EXEC\n命令执行事务时，如果一个被 WATCH 命令监视的 Key 被 其他客户端/Session\n修改的话，整个事务都不会被执行。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 客户端 1</span><br><span class=\"line\">SET PROJECT &quot;RustGuide&quot;</span><br><span class=\"line\">OK</span><br><span class=\"line\">WATCH PROJECT</span><br><span class=\"line\">OK</span><br><span class=\"line\">MULTI</span><br><span class=\"line\">OK</span><br><span class=\"line\">SET PROJECT &quot;JavaGuide&quot;</span><br><span class=\"line\">QUEUED</span><br><span class=\"line\"></span><br><span class=\"line\"># 客户端 2</span><br><span class=\"line\"># 在客户端 1 执行 EXEC 命令提交事务之前修改 PROJECT 的值</span><br><span class=\"line\">SET PROJECT &quot;GoGuide&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 客户端 1</span><br><span class=\"line\"># 修改失败，因为 PROJECT 的值被客户端2修改了</span><br><span class=\"line\">EXEC</span><br><span class=\"line\">(nil)</span><br><span class=\"line\">GET PROJECT</span><br><span class=\"line\">&quot;GoGuide&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>不过，如果 WATCH 与 事务 在同一个 Session 里，并且被 WATCH 监视的 Key\n被修改的操作发生在事务内部，这个事务是可以被执行成功的（相关\nissue：WATCH 命令碰到 MULTI 命令时的不同效果open in new window）。</p>\n</blockquote>\n<p>事务内部修改 WATCH 监视的 Key：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; SET PROJECT &quot;JavaGuide&quot;</span><br><span class=\"line\">&gt; OK</span><br><span class=\"line\">&gt; WATCH PROJECT</span><br><span class=\"line\">&gt; OK</span><br><span class=\"line\">&gt; MULTI</span><br><span class=\"line\">&gt; OK</span><br><span class=\"line\">&gt; SET PROJECT &quot;JavaGuide1&quot;</span><br><span class=\"line\">&gt; QUEUED</span><br><span class=\"line\">&gt; SET PROJECT &quot;JavaGuide2&quot;</span><br><span class=\"line\">&gt; QUEUED</span><br><span class=\"line\">&gt; SET PROJECT &quot;JavaGuide3&quot;</span><br><span class=\"line\">&gt; QUEUED</span><br><span class=\"line\">&gt; EXEC</span><br><span class=\"line\"></span><br><span class=\"line\">1) OK</span><br><span class=\"line\">2) OK</span><br><span class=\"line\">3) OK</span><br><span class=\"line\">   127.0.0.1:6379&gt; GET PROJECT</span><br><span class=\"line\">   &quot;JavaGuide3&quot;</span><br></pre></td></tr></table></figure>\n<p>事务外部修改 WATCH 监视的 Key：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SET PROJECT &quot;JavaGuide&quot;</span><br><span class=\"line\">OK</span><br><span class=\"line\">WATCH PROJECT</span><br><span class=\"line\">OK</span><br><span class=\"line\">SET PROJECT &quot;JavaGuide2&quot;</span><br><span class=\"line\">OK</span><br><span class=\"line\">MULTI</span><br><span class=\"line\">OK</span><br><span class=\"line\">GET USER</span><br><span class=\"line\">QUEUED</span><br><span class=\"line\">EXEC</span><br><span class=\"line\">(nil)</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "数据库",
                "redis"
            ]
        },
        {
            "id": "http://example.com/2024/10/17/post/sql/redis/03-Redis%E5%91%BD%E4%BB%A4/",
            "url": "http://example.com/2024/10/17/post/sql/redis/03-Redis%E5%91%BD%E4%BB%A4/",
            "title": "Redis命令",
            "date_published": "2024-10-17T03:08:48.126Z",
            "content_html": "<h1 id=\"redis命令\">Redis命令</h1>\n<h2 id=\"redis数据备份与恢复\">Redis数据备份与恢复</h2>\n<p>Redis SAVE 命令用于创建当前数据库的备份</p>\n<h3 id=\"语法\">语法</h3>\n<p>redis save 命令基本语法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis 127.0.0.1:6379&gt; SAVE </span><br></pre></td></tr></table></figure>\n<p>该命令将在redis安装目录下中创建dump.rdb文件</p>\n<h3 id=\"恢复数据\">恢复数据</h3>\n<p>如果需要恢复数据，只需将备份文件 (dump.rdb) 移动到 redis\n安装目录并启动服务即可。获取 redis 目录可以使用 <strong>CONFIG</strong>\n命令，如下所示：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis 127.0.0.1:6379&gt; CONFIG GET dir</span><br><span class=\"line\">1) &quot;dir&quot;</span><br><span class=\"line\">2) &quot;/usr/local/redis/bin&quot;</span><br></pre></td></tr></table></figure>\n<p>以上命令 <strong>CONFIG GET dir</strong> 输出的 redis 安装目录为\n/usr/local/redis/bin。</p>\n<hr />\n<h3 id=\"bgsave\">Bgsave</h3>\n<p>创建 redis 备份文件也可以使用命令\n<strong>BGSAVE</strong>，该命令在后台执行。</p>\n<h4 id=\"实例\">实例</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; BGSAVE</span><br><span class=\"line\"></span><br><span class=\"line\">Background saving started</span><br></pre></td></tr></table></figure>\n<h2 id=\"redis安全\">Redis安全</h2>\n<p>我们可以通过redis的配置文件设置密码参数，这样客户端连接到redis服务就需要密码验证，这样可以让我们的redis服务更安全。</p>\n<h4 id=\"实例-1\">实例</h4>\n<p>我们可以通过以下命令查看是否设置了密码验证：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; CONFIG get requirepass</span><br><span class=\"line\">1) &quot;requirepass&quot;</span><br><span class=\"line\">2) &quot;&quot;</span><br></pre></td></tr></table></figure>\n<p>默认情况下 requirepass\n参数是空的，这就意味着你无需通过密码验证就可以连接到 redis 服务。</p>\n<p>你可以通过以下命令来修改该参数：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; CONFIG set requirepass &quot;runoob&quot;</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; CONFIG get requirepass</span><br><span class=\"line\">1) &quot;requirepass&quot;</span><br><span class=\"line\">2) &quot;runoob&quot;</span><br></pre></td></tr></table></figure>\n<p>设置密码后，客户端连接 redis\n服务就需要密码验证，否则无法执行命令。</p>\n<h4 id=\"语法-1\">语法</h4>\n<p><strong>AUTH</strong> 命令基本语法格式如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; AUTH password</span><br></pre></td></tr></table></figure>\n<h4 id=\"实例-2\">实例</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; AUTH &quot;runoob&quot;</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; SET mykey &quot;Test value&quot;</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; GET mykey</span><br><span class=\"line\">&quot;Test value&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"redis性能测试\">Redis性能测试</h2>\n<p>Redis 性能测试是通过同时执行多个命令实现的。</p>\n<h3 id=\"语法-2\">语法</h3>\n<p>redis 性能测试的基本命令如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-benchmark [option] [option value]</span><br></pre></td></tr></table></figure>\n<p><strong>注意</strong>：该命令是在 redis 的目录下执行的，而不是 redis\n客户端的内部指令。</p>\n<p>实例</p>\n<p>以下实例同时执行 10000 个请求来检测性能：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ redis-benchmark -n 10000  -q</span><br><span class=\"line\"></span><br><span class=\"line\">PING_INLINE: 141043.72 requests per second</span><br><span class=\"line\">PING_BULK: 142857.14 requests per second</span><br><span class=\"line\">SET: 141442.72 requests per second</span><br><span class=\"line\">GET: 145348.83 requests per second</span><br><span class=\"line\">INCR: 137362.64 requests per second</span><br><span class=\"line\">LPUSH: 145348.83 requests per second</span><br><span class=\"line\">LPOP: 146198.83 requests per second</span><br><span class=\"line\">SADD: 146198.83 requests per second</span><br><span class=\"line\">SPOP: 149253.73 requests per second</span><br><span class=\"line\">LPUSH (needed to benchmark LRANGE): 148588.42 requests per second</span><br><span class=\"line\">LRANGE_100 (first 100 elements): 58411.21 requests per second</span><br><span class=\"line\">LRANGE_300 (first 300 elements): 21195.42 requests per second</span><br><span class=\"line\">LRANGE_500 (first 450 elements): 14539.11 requests per second</span><br><span class=\"line\">LRANGE_600 (first 600 elements): 10504.20 requests per second</span><br><span class=\"line\">MSET (10 keys): 93283.58 requests per second</span><br></pre></td></tr></table></figure>\n<p>redis 性能测试工具可选参数如下所示：</p>\n<table>\n<colgroup>\n<col style=\"width: 5%\" />\n<col style=\"width: 31%\" />\n<col style=\"width: 52%\" />\n<col style=\"width: 11%\" />\n</colgroup>\n<thead>\n<tr>\n<th style=\"text-align: left;\">序号</th>\n<th style=\"text-align: left;\">选项</th>\n<th style=\"text-align: left;\">描述</th>\n<th style=\"text-align: left;\">默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left;\">1</td>\n<td style=\"text-align: left;\"><strong>-h</strong></td>\n<td style=\"text-align: left;\">指定服务器主机名</td>\n<td style=\"text-align: left;\">127.0.0.1</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">2</td>\n<td style=\"text-align: left;\"><strong>-p</strong></td>\n<td style=\"text-align: left;\">指定服务器端口</td>\n<td style=\"text-align: left;\">6379</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">3</td>\n<td style=\"text-align: left;\"><strong>-s</strong></td>\n<td style=\"text-align: left;\">指定服务器 socket</td>\n<td style=\"text-align: left;\"></td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">4</td>\n<td style=\"text-align: left;\"><strong>-c</strong></td>\n<td style=\"text-align: left;\">指定并发连接数</td>\n<td style=\"text-align: left;\">50</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">5</td>\n<td style=\"text-align: left;\"><strong>-n</strong></td>\n<td style=\"text-align: left;\">指定请求数</td>\n<td style=\"text-align: left;\">10000</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">6</td>\n<td style=\"text-align: left;\"><strong>-d</strong></td>\n<td style=\"text-align: left;\">以字节的形式指定 SET/GET 值的数据大小</td>\n<td style=\"text-align: left;\">2</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">7</td>\n<td style=\"text-align: left;\"><strong>-k</strong></td>\n<td style=\"text-align: left;\">1=keep alive 0=reconnect</td>\n<td style=\"text-align: left;\">1</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">8</td>\n<td style=\"text-align: left;\"><strong>-r</strong></td>\n<td style=\"text-align: left;\">SET/GET/INCR 使用随机 key, SADD\n使用随机值</td>\n<td style=\"text-align: left;\"></td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">9</td>\n<td style=\"text-align: left;\"><strong>-P</strong></td>\n<td style=\"text-align: left;\">通过管道传输 <numreq> 请求</td>\n<td style=\"text-align: left;\">1</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">10</td>\n<td style=\"text-align: left;\"><strong>-q</strong></td>\n<td style=\"text-align: left;\">强制退出 redis。仅显示 query/sec 值</td>\n<td style=\"text-align: left;\"></td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">11</td>\n<td style=\"text-align: left;\"><strong>--csv</strong></td>\n<td style=\"text-align: left;\">以 CSV 格式输出</td>\n<td style=\"text-align: left;\"></td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">12</td>\n<td style=\"text-align: left;\">*<strong>-l*（L 的小写字母）</strong></td>\n<td style=\"text-align: left;\">生成循环，永久执行测试</td>\n<td style=\"text-align: left;\"></td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">13</td>\n<td style=\"text-align: left;\"><strong>-t</strong></td>\n<td style=\"text-align: left;\">仅运行以逗号分隔的测试命令列表。</td>\n<td style=\"text-align: left;\"></td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">14</td>\n<td style=\"text-align: left;\">*<strong>-I*（i 的大写字母）</strong></td>\n<td style=\"text-align: left;\">Idle 模式。仅打开 N 个 idle\n连接并等待。</td>\n<td style=\"text-align: left;\"></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"实例-3\">实例</h4>\n<p>以下实例我们使用了多个参数来测试 redis 性能：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ redis-benchmark -h 127.0.0.1 -p 6379 -t set,lpush -n 10000 -q</span><br><span class=\"line\"></span><br><span class=\"line\">SET: 146198.83 requests per second</span><br><span class=\"line\">LPUSH: 145560.41 requests per second</span><br></pre></td></tr></table></figure>\n<p>以上实例中主机为 127.0.0.1，端口号为 6379，执行的命令为\nset,lpush，请求数为 10000，通过 -q\n参数让结果只显示每秒执行的请求数。</p>\n<h2 id=\"redis-客户端连接\">Redis 客户端连接</h2>\n<p>Redis 通过监听一个 TCP 端口或者 Unix socket\n的方式来接收来自客户端的连接，当一个连接建立后，Redis\n内部会进行以下一些操作：</p>\n<ul>\n<li>首先，客户端 socket 会被设置为非阻塞模式，因为 Redis\n在网络事件处理上采用的是非阻塞多路复用模型。</li>\n<li>然后为这个 socket 设置 TCP_NODELAY 属性，禁用 Nagle 算法</li>\n<li>然后创建一个可读的文件事件用于监听这个客户端 socket 的数据发送</li>\n</ul>\n<hr />\n<h3 id=\"最大连接数\">最大连接数</h3>\n<p>在 Redis2.4\n中，最大连接数是被直接硬编码在代码里面的，而在2.6版本中这个值变成可配置的。</p>\n<p>maxclients 的默认值是 10000，你也可以在 redis.conf\n中对这个值进行修改。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config get maxclients</span><br><span class=\"line\"></span><br><span class=\"line\">1) &quot;maxclients&quot;</span><br><span class=\"line\">2) &quot;10000&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"实例-4\">实例</h4>\n<p>以下实例我们在服务启动时设置最大连接数为 100000：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-server --maxclients 100000</span><br></pre></td></tr></table></figure>\n<hr />\n<h3 id=\"客户端命令\">客户端命令</h3>\n<table>\n<colgroup>\n<col style=\"width: 6%\" />\n<col style=\"width: 28%\" />\n<col style=\"width: 65%\" />\n</colgroup>\n<thead>\n<tr>\n<th style=\"text-align: left;\">S.N.</th>\n<th style=\"text-align: left;\">命令</th>\n<th style=\"text-align: left;\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left;\">1</td>\n<td style=\"text-align: left;\"><strong>CLIENT LIST</strong></td>\n<td style=\"text-align: left;\">返回连接到 redis 服务的客户端列表</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">2</td>\n<td style=\"text-align: left;\"><strong>CLIENT SETNAME</strong></td>\n<td style=\"text-align: left;\">设置当前连接的名称</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">3</td>\n<td style=\"text-align: left;\"><strong>CLIENT GETNAME</strong></td>\n<td style=\"text-align: left;\">获取通过 CLIENT SETNAME\n命令设置的服务名称</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">4</td>\n<td style=\"text-align: left;\"><strong>CLIENT PAUSE</strong></td>\n<td\nstyle=\"text-align: left;\">挂起客户端连接，指定挂起的时间以毫秒计</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">5</td>\n<td style=\"text-align: left;\"><strong>CLIENT KILL</strong></td>\n<td style=\"text-align: left;\">关闭客户端连接</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"redis-管道技术\">Redis 管道技术</h2>\n<p>Redis是一种基于客户端-服务端模型以及请求/响应协议的TCP服务。这意味着通常情况下一个请求会遵循以下步骤：</p>\n<ul>\n<li>客户端向服务端发送一个查询请求，并监听Socket返回，通常是以阻塞模式，等待服务端响应。</li>\n<li>服务端处理命令，并将结果返回给客户端。</li>\n</ul>\n<hr />\n<h3 id=\"redis-管道技术-1\">Redis 管道技术</h3>\n<p>Redis\n管道技术可以在服务端未响应时，客户端可以继续向服务端发送请求，并最终一次性读取所有服务端的响应。</p>\n<h4 id=\"实例-5\">实例</h4>\n<p>查看 redis 管道，只需要启动 redis 实例并输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(echo -en &quot;PING\\r\\n SET runoobkey redis\\r\\nGET runoobkey\\r\\nINCR visitor\\r\\nINCR visitor\\r\\nINCR visitor\\r\\n&quot;; sleep 10) | nc localhost 6379</span><br><span class=\"line\"></span><br><span class=\"line\">+PONG</span><br><span class=\"line\">+OK</span><br><span class=\"line\">redis</span><br><span class=\"line\">:1</span><br><span class=\"line\">:2</span><br><span class=\"line\">:3</span><br></pre></td></tr></table></figure>\n<p>以上实例中我们通过使用 <strong>PING</strong>\n命令查看redis服务是否可用， 之后我们设置了 runoobkey 的值为\nredis，然后我们获取 runoobkey 的值并使得 visitor 自增 3 次。</p>\n<p>在返回的结果中我们可以看到这些命令一次性向 redis\n服务提交，并最终一次性读取所有服务端的响应</p>\n<hr />\n<h3 id=\"管道技术的优势\">管道技术的优势</h3>\n<p>管道技术最显著的优势是提高了 redis 服务的性能。</p>\n<p><strong>一些测试数据</strong></p>\n<p>在下面的测试中，我们将使用Redis的Ruby客户端，支持管道技术特性，测试管道技术对速度的提升效果。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">require &#x27;rubygems&#x27; </span><br><span class=\"line\">require &#x27;redis&#x27;</span><br><span class=\"line\">def bench(descr) </span><br><span class=\"line\">start = Time.now </span><br><span class=\"line\">yield </span><br><span class=\"line\">puts &quot;#&#123;descr&#125; #&#123;Time.now-start&#125; seconds&quot; </span><br><span class=\"line\">end</span><br><span class=\"line\">def without_pipelining </span><br><span class=\"line\">r = Redis.new </span><br><span class=\"line\">10000.times &#123; </span><br><span class=\"line\">    r.ping </span><br><span class=\"line\">&#125; </span><br><span class=\"line\">end</span><br><span class=\"line\">def with_pipelining </span><br><span class=\"line\">r = Redis.new </span><br><span class=\"line\">r.pipelined &#123; </span><br><span class=\"line\">    10000.times &#123; </span><br><span class=\"line\">        r.ping </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\">end</span><br><span class=\"line\">bench(&quot;without pipelining&quot;) &#123; </span><br><span class=\"line\">    without_pipelining </span><br><span class=\"line\">&#125; </span><br><span class=\"line\">bench(&quot;with pipelining&quot;) &#123; </span><br><span class=\"line\">    with_pipelining </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>从处于局域网中的Mac OS\nX系统上执行上面这个简单脚本的数据表明，开启了管道操作后，往返延时已经被改善得相当低了。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">without pipelining 1.185238 seconds </span><br><span class=\"line\">with pipelining 0.250783 seconds</span><br></pre></td></tr></table></figure>\n<p>如你所见，开启管道后，我们的速度效率提升了5倍。</p>\n<h2 id=\"redis-分区\">Redis 分区</h2>\n<p>分区是分割数据到多个Redis实例的处理过程，因此每个实例只保存key的一个子集。</p>\n<h3 id=\"分区的优势\">分区的优势</h3>\n<ul>\n<li>通过利用多台计算机内存的和值，允许我们构造更大的数据库。</li>\n<li>通过多核和多台计算机，允许我们扩展计算能力；通过多台计算机和网络适配器，允许我们扩展网络带宽。</li>\n</ul>\n<h3 id=\"分区的不足\">分区的不足</h3>\n<p>redis的一些特性在分区方面表现的不是很好：</p>\n<ul>\n<li>涉及多个key的操作通常是不被支持的。举例来说，当两个set映射到不同的redis实例上时，你就不能对这两个set执行交集操作。</li>\n<li>涉及多个key的redis事务不能使用。</li>\n<li>当使用分区时，数据处理较为复杂，比如你需要处理多个rdb/aof文件，并且从多个实例和主机备份持久化文件。</li>\n<li>增加或删除容量也比较复杂。redis集群大多数支持在运行时增加、删除节点的透明数据平衡的能力，但是类似于客户端分区、代理等其他系统则不支持这项特性。然而，一种叫做presharding的技术对此是有帮助的。</li>\n</ul>\n<hr />\n<h3 id=\"分区类型\">分区类型</h3>\n<p>Redis 有两种类型分区。 假设有4个Redis实例\nR0，R1，R2，R3，和类似user:1，user:2这样的表示用户的多个key，对既定的key有多种不同方式来选择这个key存放在哪个实例中。也就是说，有不同的系统来映射某个key到某个Redis服务。</p>\n<h4 id=\"范围分区\">范围分区</h4>\n<p>最简单的分区方式是按范围分区，就是映射一定范围的对象到特定的Redis实例。</p>\n<p>比如，ID从0到10000的用户会保存到实例R0，ID从10001到\n20000的用户会保存到R1，以此类推。</p>\n<p>这种方式是可行的，并且在实际中使用，不足就是要有一个区间范围到实例的映射表。这个表要被管理，同时还需要各\n种对象的映射表，通常对Redis来说并非是好的方法。</p>\n<h4 id=\"哈希分区\">哈希分区</h4>\n<p>另外一种分区方法是hash分区。这对任何key都适用，也无需是object_name:这种形式，像下面描述的一样简单：</p>\n<ul>\n<li>用一个hash函数将key转换为一个数字，比如使用crc32 hash函数。对key\nfoobar执行crc32(foobar)会输出类似93024922的整数。</li>\n<li>对这个整数取模，将其转化为0-3之间的数字，就可以将这个整数映射到4个Redis实例中的一个了。93024922\n% 4 = 2，就是说key\nfoobar应该被存到R2实例中。注意：取模操作是取除的余数，通常在多种编程语言中用%操作符实现。</li>\n</ul>\n",
            "tags": [
                "数据库",
                "redis"
            ]
        },
        {
            "id": "http://example.com/2024/10/17/post/sql/redis/02-Java%E4%BD%BF%E7%94%A8Redis/",
            "url": "http://example.com/2024/10/17/post/sql/redis/02-Java%E4%BD%BF%E7%94%A8Redis/",
            "title": "Java使用Redis",
            "date_published": "2024-10-17T03:08:48.100Z",
            "content_html": "<h1 id=\"java使用redis\">Java使用Redis</h1>\n<h4 id=\"安装\">安装</h4>\n<p>开始在 Java 中使用 Redis 前， 我们需要确保已经安装了 redis 服务及\nJava redis 驱动，且你的机器上能正常使用 Java。\nJava的安装配置可以参考我们的 <a\nhref=\"https://www.runoob.com/redis/java-environment-setup.html\">Java\n开发环境配置</a>接下来让我们安装 Java redis 驱动：</p>\n<ul>\n<li>首先你需要下载驱动包 <a\nhref=\"https://mvnrepository.com/artifact/redis.clients/jedis\"><strong>下载\njedis.jar</strong></a>，确保下载最新驱动包。</li>\n<li>在你的 classpath 中包含该驱动包。</li>\n</ul>\n<div class=\"info\">\n<p><em>本站提供了 2.9.0 jar 版本下载：</em> <a\nhref=\"https://static.runoob.com/download/jedis-2.9.0.jar\">jedis-2.9.0.jar</a></p>\n</div>\n<h2 id=\"连接到redis服务\">连接到Redis服务</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RedisJava</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//连接本地的 Redis 服务</span></span><br><span class=\"line\">        <span class=\"type\">Jedis</span> <span class=\"variable\">jedis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Jedis</span>(<span class=\"string\">&quot;localhost&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 如果 Redis 服务设置了密码，需要下面这行，没有就不需要</span></span><br><span class=\"line\">        <span class=\"comment\">// jedis.auth(&quot;123456&quot;); </span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;连接成功&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//查看服务是否运行</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;服务正在运行: &quot;</span>+jedis.ping());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">连接成功</span><br><span class=\"line\">服务正在运行: PONG</span><br></pre></td></tr></table></figure>\n<h2 id=\"redis-java-string字符串-实例\">Redis Java String(字符串)\n实例</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RedisStringJava</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//连接本地的 Redis 服务</span></span><br><span class=\"line\">        <span class=\"type\">Jedis</span> <span class=\"variable\">jedis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Jedis</span>(<span class=\"string\">&quot;localhost&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;连接成功&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//设置 redis 字符串数据</span></span><br><span class=\"line\">        jedis.set(<span class=\"string\">&quot;runoobkey&quot;</span>, <span class=\"string\">&quot;www.runoob.com&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 获取存储的数据并输出</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;redis 存储的字符串为: &quot;</span>+ jedis.get(<span class=\"string\">&quot;runoobkey&quot;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">连接成功</span><br><span class=\"line\">redis 存储的字符串为: www.runoob.com</span><br></pre></td></tr></table></figure>\n<h2 id=\"redis-java-list列表-实例\">Redis Java List(列表) 实例</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> redis.clients.jedis.Jedis;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RedisListJava</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//连接本地的 Redis 服务</span></span><br><span class=\"line\">        <span class=\"type\">Jedis</span> <span class=\"variable\">jedis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Jedis</span>(<span class=\"string\">&quot;localhost&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;连接成功&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//存储数据到列表中</span></span><br><span class=\"line\">        jedis.lpush(<span class=\"string\">&quot;site-list&quot;</span>, <span class=\"string\">&quot;Runoob&quot;</span>);</span><br><span class=\"line\">        jedis.lpush(<span class=\"string\">&quot;site-list&quot;</span>, <span class=\"string\">&quot;Google&quot;</span>);</span><br><span class=\"line\">        jedis.lpush(<span class=\"string\">&quot;site-list&quot;</span>, <span class=\"string\">&quot;Taobao&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 获取存储的数据并输出</span></span><br><span class=\"line\">        List&lt;String&gt; list = jedis.lrange(<span class=\"string\">&quot;site-list&quot;</span>, <span class=\"number\">0</span> ,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;list.size(); i++) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;列表项为: &quot;</span>+list.get(i));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">连接成功</span><br><span class=\"line\">列表项为: Taobao</span><br><span class=\"line\">列表项为: Google</span><br><span class=\"line\">列表项为: Runoob</span><br></pre></td></tr></table></figure>\n<h2 id=\"redis-java-keys-实例\">Redis Java Keys 实例</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"><span class=\"keyword\">import</span> redis.clients.jedis.Jedis;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RedisKeyJava</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//连接本地的 Redis 服务</span></span><br><span class=\"line\">        <span class=\"type\">Jedis</span> <span class=\"variable\">jedis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Jedis</span>(<span class=\"string\">&quot;localhost&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;连接成功&quot;</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">// 获取数据并输出</span></span><br><span class=\"line\">        Set&lt;String&gt; keys = jedis.keys(<span class=\"string\">&quot;*&quot;</span>); </span><br><span class=\"line\">        Iterator&lt;String&gt; it=keys.iterator() ;   </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(it.hasNext())&#123;   </span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">key</span> <span class=\"operator\">=</span> it.next();   </span><br><span class=\"line\">            System.out.println(key);   </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">连接成功</span><br><span class=\"line\">runoobkey</span><br><span class=\"line\">site-list</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "数据库",
                "redis"
            ]
        },
        {
            "id": "http://example.com/2024/10/17/post/sql/redis/01-Redis%E7%AE%80%E4%BB%8B/",
            "url": "http://example.com/2024/10/17/post/sql/redis/01-Redis%E7%AE%80%E4%BB%8B/",
            "title": "Redis简介",
            "date_published": "2024-10-17T03:08:48.035Z",
            "content_html": "<h1 id=\"redis简介\">Redis简介</h1>\n<p>Redis是一个开源的内存数据库，遵守<a\nhref=\"https://www.runoob.com/note/13176\">BSD协议</a>,它提供了一个高性能的键值（key-value）存储系统，常用于缓存、消息队列、会话存储等应用场景。</p>\n<ul>\n<li><strong>性能极高</strong>：Redis以其极高的性能而著称，能够支持每秒数十万次的读写操作。这使得Redis成为处理高并发请求的理想选择，尤其是在需要快速响应的场景中，如缓存、会话管理、排行榜等。</li>\n<li><strong>丰富的数据类型</strong>：Redis不仅支持基本的键值存储，还提供了丰富的数据类型，包括字符串，列表，集合，哈希表，有序集合等。</li>\n<li><strong>原子性操作</strong>：Redis的所有操作都是原子性的，这意味着操作要么完全执行，要么完全不执行。这种特性对于确保数据的一致性和完整性至关重要，尤其是再高并发环境下处理事务时。</li>\n<li><strong>持久化</strong>：Redis\n支持数据的持久化，可以将内存中的数据保存到磁盘中，以便在系统重启后恢复数据。这为\nRedis 提供了数据安全性，确保数据不会因为系统故障而丢失。</li>\n<li><strong>支持发布/订阅模式：</strong>Redis\n内置了发布/订阅模式（Pub/Sub），允许客户端之间通过消息传递进行通信。这使得\nRedis 可以作为消息队列和实时数据传输的平台。</li>\n<li><strong>单线程模型：</strong>尽管 Redis\n是单线程的，但它通过高效的事件驱动模型来处理并发请求，确保了高性能和低延迟。单线程模型也简化了并发控制的复杂性</li>\n<li><strong>主从复制：</strong>Redis\n支持主从复制，可以通过从节点来备份数据或分担读请求，提高数据的可用性和系统的伸缩性。</li>\n<li><strong>应用场景广泛：</strong>Redis\n被广泛应用于各种场景，包括但不限于缓存系统、会话存储、排行榜、实时分析、地理空间数据索引等。</li>\n<li><strong>社区支持：</strong>Redis\n拥有一个活跃的开发者社区，提供了大量的文档、教程和第三方库，这为开发者提供了强大的支持和丰富的资源。</li>\n<li><strong>跨平台兼容性：</strong>Redis 可以在多种操作系统上运行，包括\nLinux、macOS 和 Windows，这使得它能够在不同的技术栈中灵活部署。</li>\n</ul>\n<h2 id=\"redis-与其他-key-value-存储有什么不同\">Redis 与其他 key-value\n存储有什么不同？</h2>\n<p>Redis 与其他 key-value\n存储系统的主要区别在于其提供了丰富的数据类型、高性能的读写能力、原子性操作、持久化机制、以及丰富的特性集。</p>\n<p>以下是 Redis 的一些独特之处：</p>\n<ul>\n<li><strong>丰富的数据类型：</strong>Redis 不仅仅支持简单的 key-value\n类型的数据，还提供了 list、set、zset（有序集合）、hash\n等数据结构的存储。这些数据类型可以更好地满足特定的业务需求，使得 Redis\n可以用于更广泛的应用场景。</li>\n<li><strong>高性能的读写能力：</strong>Redis 能读的速度是\n110000次/s，写的速度是 81000次/s。这种高性能主要得益于 Redis\n将数据存储在内存中，从而显著提高了数据的访问速度。</li>\n<li><strong>原子性操作：</strong>Redis\n的所有操作都是原子性的，这意味着操作要么完全执行，要么完全不执行。这种特性对于确保数据的一致性和完整性非常重要。</li>\n<li><strong>持久化机制：</strong>Redis\n支持数据的持久化，可以将内存中的数据保存在磁盘中，以便在系统重启后能够再次加载使用。这为\nRedis 提供了数据安全性，确保数据不会因为系统故障而丢失。</li>\n<li><strong>丰富的特性集：</strong>Redis 还支持\npublish/subscribe（发布/订阅）模式、通知、key\n过期等高级特性。这些特性使得 Redis\n可以用于消息队列、实时数据分析等复杂的应用场景。</li>\n<li><strong>主从复制和高可用性：</strong>Redis 支持 master-slave\n模式的数据备份，提供了数据的备份和主从复制功能，增强了数据的可用性和容错性。</li>\n<li><strong>支持 Lua 脚本：</strong>Redis 支持使用 Lua\n脚本来编写复杂的操作，这些脚本可以在服务器端执行，提供了更多的灵活性和强大的功能。</li>\n<li><strong>单线程模型：</strong>尽管 Redis\n是单线程的，但它通过高效的事件驱动模型来处理并发请求，确保了高性能和低延迟。</li>\n</ul>\n",
            "tags": [
                "数据库",
                "redis"
            ]
        },
        {
            "id": "http://example.com/2024/10/17/post/sql/02-%E6%97%B6%E9%97%B4%E5%88%A4%E6%96%AD%E6%9F%A5%E8%AF%A2/",
            "url": "http://example.com/2024/10/17/post/sql/02-%E6%97%B6%E9%97%B4%E5%88%A4%E6%96%AD%E6%9F%A5%E8%AF%A2/",
            "title": "PostgreSQL中筛选月份和年份查询数据集",
            "date_published": "2024-10-17T03:08:47.935Z",
            "content_html": "<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--        日期查询  PostgreSQL中筛选月份和年份查询数据集   三种方法</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> srm.cux_5_offline_purchase <span class=\"keyword\">where</span>  <span class=\"built_in\">extract</span>(<span class=\"keyword\">year</span> <span class=\"keyword\">from</span> op_createdate )<span class=\"operator\">=</span><span class=\"number\">2024</span> <span class=\"keyword\">and</span> <span class=\"built_in\">extract</span>(<span class=\"keyword\">month</span> <span class=\"keyword\">from</span> op_createdate)<span class=\"operator\">=</span><span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> srm.cux_5_offline_purchase <span class=\"keyword\">where</span>  date_part(<span class=\"string\">&#x27;year&#x27;</span>, op_createdate) <span class=\"operator\">=</span> <span class=\"number\">2024</span> <span class=\"keyword\">AND</span> date_part(<span class=\"string\">&#x27;month&#x27;</span>, op_createdate) <span class=\"operator\">=</span> <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"comment\">-- SELECT * FROM srm.cux_5_offline_purchase WHERE op_createdate &gt;= &#x27;2024-2-01&#x27; AND op_createdate &lt;= &#x27;2024-2-28&#x27;;  不推荐</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "数据库",
                "time"
            ]
        },
        {
            "id": "http://example.com/2024/10/17/post/sql/01-sql/",
            "url": "http://example.com/2024/10/17/post/sql/01-sql/",
            "title": "数据库",
            "date_published": "2024-10-17T03:08:47.889Z",
            "content_html": "<h1 id=\"数据库小记\">数据库小记</h1>\n<h3 id=\"字符串排序转类型\">1、字符串排序，转类型</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在这个查询中，<span class=\"built_in\">CAST</span>(j.ops_jl_start <span class=\"keyword\">AS</span> <span class=\"type\">INTEGER</span>) 将 j.ops_jl_start 字符串转换为整数，然后按整数值进行排序，从而确保排序顺序为 <span class=\"number\">1</span>、<span class=\"number\">2</span>、<span class=\"number\">3</span>、<span class=\"number\">5</span>。</span><br><span class=\"line\"></span><br><span class=\"line\">如果你的数据库系统不支持 CAST 函数（例如在某些数据库系统中，可能需要使用 <span class=\"keyword\">CONVERT</span> 函数），你可以根据具体的数据库系统语法进行调整。例如，在 MySQL 中，可以使用：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">sql</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"built_in\">CAST</span>(j.ops_jl_start <span class=\"keyword\">AS</span> <span class=\"type\">INTEGER</span>);</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">CONVERT</span>(j.ops_jl_start, SIGNED <span class=\"type\">INTEGER</span>);</span><br></pre></td></tr></table></figure>\n<h3\nid=\"左连接按照某种条件只保留一条\">2、左连接按照某种条件只保留一条</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  (<span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span>,</span><br><span class=\"line\">          <span class=\"built_in\">ROW_NUMBER</span>() <span class=\"keyword\">OVER</span> (<span class=\"keyword\">PARTITION</span> <span class=\"keyword\">BY</span> supplier_id</span><br><span class=\"line\">                               <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> approve_date <span class=\"keyword\">DESC</span>) num</span><br><span class=\"line\">   <span class=\"keyword\">FROM</span> black_vl</span><br><span class=\"line\">   <span class=\"keyword\">WHERE</span> status <span class=\"operator\">=</span> <span class=\"string\">&#x27;XX&#x27;</span></span><br><span class=\"line\">     <span class=\"keyword\">AND</span> mean <span class=\"operator\">=</span> <span class=\"string\">&#x27;XXX&#x27;</span>) h</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> num <span class=\"operator\">=</span> <span class=\"number\">1</span>) h <span class=\"keyword\">ON</span> h.supplier_id <span class=\"operator\">=</span> cps.supplier_id</span><br><span class=\"line\">这边就是按照有多条按照approve_date最大值保存</span><br></pre></td></tr></table></figure>\n<h3 id=\"数据库查询优化\">3、数据库查询优化</h3>\n<h3 id=\"section\">4、</h3>\n",
            "tags": [
                "数据库"
            ]
        },
        {
            "id": "http://example.com/2024/10/17/post/springboot/04-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/",
            "url": "http://example.com/2024/10/17/post/springboot/04-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/",
            "title": "正则表达式",
            "date_published": "2024-10-17T03:08:47.817Z",
            "content_html": "<h1 id=\"正则表达式\">正则表达式</h1>\n<p>正则表达式是一种用于匹配和操作文本的强大工具，它是由一系列字符和特殊字符组成的模式，用于描述要匹配的文本模式。</p>\n<p>正则表达式可以在文本中查找、替换、提取和验证特定的模式。</p>\n<h2 id=\"使用方法\">使用方法</h2>\n<h4 id=\"普通字符\">普通字符</h4>\n<p>普通字符包括没有显式指定为元字符的所有可打印和不可打印字符。这包括所有大写和小写字母、所有数字、所有标点符号和一些其他符号。</p>\n<table>\n<colgroup>\n<col style=\"width: 14%\" />\n<col style=\"width: 85%\" />\n</colgroup>\n<thead>\n<tr>\n<th>字符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>[ABC]</strong></td>\n<td>匹配 <strong>[...]</strong> 中的所有字符，例如\n<strong>[aeiou]</strong> 匹配字符串 \"google runoob taobao\" 中所有的 e o\nu a 字母。<img\nsrc=\"https://www.runoob.com/wp-content/uploads/2014/03/E691DDE1-E5CB-4EA8-8D16-759BD0D2B09D.jpg\"\nalt=\"img\" /></td>\n</tr>\n<tr>\n<td><strong>[^ABC]</strong></td>\n<td>匹配除了 <strong>[...]</strong> 中字符的所有字符，例如\n<strong>[^aeiou]</strong> 匹配字符串 \"google runoob taobao\" 中除了 e o u\na 字母的所有字符。<img\nsrc=\"https://www.runoob.com/wp-content/uploads/2014/03/ED971D92-30F4-4768-A2C7-02A84A3A9DEB.jpg\"\nalt=\"img\" /></td>\n</tr>\n<tr>\n<td><strong>[A-Z]</strong></td>\n<td>[A-Z] 表示一个区间，匹配所有大写字母，[a-z] 表示所有小写字母。<img\nsrc=\"https://www.runoob.com/wp-content/uploads/2014/03/C5E357BD-65E3-4EB3-9D80-10D096F19287.jpg\"\nalt=\"img\" /></td>\n</tr>\n<tr>\n<td><strong>.</strong></td>\n<td>匹配除换行符（、之外的任何单个字符，相等于 [^\\n\\r]。<img\nsrc=\"https://www.runoob.com/wp-content/uploads/2014/03/0FD7E77D-38A7-43BC-B51A-7DBA23A77756.jpg\"\nalt=\"img\" /></td>\n</tr>\n<tr>\n<td><strong>[]</strong></td>\n<td>匹配所有。是匹配所有空白符，包括换行，非空白符，不包括换行。<img\nsrc=\"https://www.runoob.com/wp-content/uploads/2014/03/47CA6C59-64CF-433A-909E-1E342349A4E0.jpg\"\nalt=\"img\" /></td>\n</tr>\n<tr>\n<td>***</td>\n<td>匹配字母、数字、下划线。等价于 [A-Za-z0-9_]<img\nsrc=\"https://www.runoob.com/wp-content/uploads/2014/03/F35A5971-3519-4CAE-8BEC-9DE8F4A55257.jpg\"\nalt=\"img\" /></td>\n</tr>\n<tr>\n<td>**</td>\n<td>匹配任意一个阿拉伯数字（0 到 9）。等价于 <strong>[0-9]</strong></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"非打印字符\">非打印字符</h4>\n<p>非打印字符也可以是正则表达式的组成部分。下表列出了表示非打印字符的转义序列：</p>\n<table>\n<colgroup>\n<col style=\"width: 6%\" />\n<col style=\"width: 93%\" />\n</colgroup>\n<thead>\n<tr>\n<th>字符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td>匹配由x指明的控制字符。例如， 匹配一个 Control-M 或回车符。x\n的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 'c' 字符。</td>\n</tr>\n<tr>\n<td> 匹配一个换页符。等价于 0c 和 。</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>匹配一个换行符。等价于 0a 和 。</td>\n</tr>\n<tr>\n<td> 匹配一个回车符。等价于 0d 和 。</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ 。注意\nUnicode 正则表达式会匹配全角空格符。</td>\n</tr>\n<tr>\n<td></td>\n<td>匹配任何非空白字符。等价于 [^ 。</td>\n</tr>\n<tr>\n<td> 匹配一个制表符。等价于 和 。</td>\n<td></td>\n</tr>\n<tr>\n<td> 匹配一个垂直制表符。等价于 0b 和 。</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"特殊字符\">特殊字符</h4>\n<p>所谓特殊字符，就是一些有特殊含义的字符，如上面说的\n<strong>runoo*b</strong> 中的\n*****，简单的说就是表示任何字符串的意思。如果要查找字符串中的 *****\n符号，则需要对 ***** 进行转义，即在其前加一个\n****，<strong>runo*ob</strong> 匹配字符串 <strong>runo*ob</strong>。</p>\n<p>许多元字符要求在试图匹配它们时特别对待。若要匹配这些特殊字符，必须首先使字符\"转义\"，即，将反斜杠字符****\n放在它们前面。下表列出了正则表达式中的特殊字符：</p>\n<table>\n<colgroup>\n<col style=\"width: 11%\" />\n<col style=\"width: 88%\" />\n</colgroup>\n<thead>\n<tr>\n<th>特别字符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$</td>\n<td>匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline\n属性，则 $ 也匹配 '' 或 '。要匹配 $ 字符本身，请使用 $。</td>\n</tr>\n<tr>\n<td>( )</td>\n<td>标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用\n( 和 )。</td>\n</tr>\n<tr>\n<td>*</td>\n<td>匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 *。</td>\n</tr>\n<tr>\n<td>+</td>\n<td>匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 +。</td>\n</tr>\n<tr>\n<td>.</td>\n<td>匹配除换行符 之外的任何单字符。要匹配 . ，请使用 . 。</td>\n</tr>\n<tr>\n<td>[</td>\n<td>标记一个中括号表达式的开始。要匹配 [，请使用 [。</td>\n</tr>\n<tr>\n<td>?</td>\n<td>匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ?\n字符，请使用 ?。</td>\n</tr>\n<tr>\n<td>\\</td>\n<td>将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如，\n'n' 匹配字符 'n'。'' 匹配换行符。序列 '\\' 匹配 \"\"，而 '(' 则匹配\n\"(\"。</td>\n</tr>\n<tr>\n<td>^</td>\n<td>匹配输入字符串的开始位置，除非在方括号表达式中使用，当该符号在方括号表达式中使用时，表示不接受该方括号表达式中的字符集合。要匹配\n^ 字符本身，请使用 ^。</td>\n</tr>\n<tr>\n<td>{</td>\n<td>标记限定符表达式的开始。要匹配 {，请使用 {。</td>\n</tr>\n<tr>\n<td>|</td>\n<td>指明两项之间的一个选择。要匹配 |，请使用 |。</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"限定符\">限定符</h4>\n<p>限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有\n***** 或 <strong>+</strong> 或 <strong>?</strong> 或\n<strong>{n}</strong> 或 <strong>{n,}</strong> 或 <strong>{n,m}</strong>\n共6种。</p>\n<p>正则表达式的限定符有：</p>\n<table>\n<colgroup>\n<col style=\"width: 7%\" />\n<col style=\"width: 92%\" />\n</colgroup>\n<thead>\n<tr>\n<th>字符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>*</td>\n<td>匹配前面的子表达式零次或多次。例如，<strong>zo*</strong> 能匹配\n<strong>\"z\"</strong> 以及 <strong>\"zoo\"</strong>。***** 等价于\n<strong>{0,}</strong>。</td>\n</tr>\n<tr>\n<td>+</td>\n<td>匹配前面的子表达式一次或多次。例如，<strong>zo+</strong> 能匹配\n<strong>\"zo\"</strong> 以及 \"<strong>zoo\"</strong>，但不能匹配\n<strong>\"z\"</strong>。<strong>+</strong> 等价于\n<strong>{1,}</strong>。</td>\n</tr>\n<tr>\n<td>?</td>\n<td>匹配前面的子表达式零次或一次。例如，<strong>do(es)?</strong>\n可以匹配 <strong>\"do\"</strong> 、 <strong>\"does\"</strong>、\n<strong>\"doxy\"</strong> 中的 <strong>\"do\"</strong> 和\n<strong>\"does\"</strong>。<strong>?</strong> 等价于\n<strong>{0,1}</strong>。<img\nsrc=\"https://www.runoob.com/wp-content/uploads/2014/03/CA742DA3-826D-463B-85F5-316DAB3515C1.jpeg\"\nalt=\"img\" /></td>\n</tr>\n<tr>\n<td>{n}</td>\n<td>n 是一个非负整数。匹配确定的 <strong>n</strong>\n次。例如，<strong>o{2}</strong> 不能匹配 <strong>\"Bob\"</strong> 中的\n<strong>o</strong>，但是能匹配 <strong>\"food\"</strong> 中的两个\n<strong>o</strong>。</td>\n</tr>\n<tr>\n<td>{n,}</td>\n<td>n 是一个非负整数。至少匹配n 次。例如，<strong>o{2,}</strong>\n不能匹配 <strong>\"Bob\"</strong> 中的 <strong>o</strong>，但能匹配\n<strong>\"foooood\"</strong> 中的所有\n<strong>o</strong>。<strong>o{1,}</strong> 等价于\n<strong>o+</strong>。<strong>o{0,}</strong> 则等价于\n<strong>o*</strong>。</td>\n</tr>\n<tr>\n<td>{n,m}</td>\n<td>m 和 n 均为非负整数，其中 n &lt;= m。最少匹配 n 次且最多匹配 m\n次。例如，<strong>o{1,3}</strong> 将匹配 <strong>\"fooooood\"</strong>\n中的前三个 <strong>o</strong>。<strong>o{0,1}</strong> 等价于\n<strong>o?</strong>。请注意在逗号和两个数之间不能有空格。</td>\n</tr>\n</tbody>\n</table>\n<p>以下正则表达式匹配一个正整数，<strong>[1-9]</strong>设置第一个数字不是\n0，<strong>[0-9]*</strong> 表示任意多个数字：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/[1-9][0-9]*/</span><br></pre></td></tr></table></figure>\n<figure>\n<img data-src=\"D:\\Pictures\\typore\\F249891D-F3D9-48D5-A3CB-6FD8FD029117.jpg\"\nalt=\"img\" />\n<figcaption aria-hidden=\"true\">img</figcaption>\n</figure>\n<p>请注意，限定符出现在范围表达式之后。因此，它应用于整个范围表达式，在本例中，只指定从\n0 到 9 的数字（包括 0 和 9）。</p>\n<p>这里不使用 +\n限定符，因为在第二个位置或后面的位置不一定需要有一个数字。也不使用 ?\n字符，因为使用 ? 会将整数限制到只有两位数。</p>\n<p>如果你想设置 0~99\n的两位数，可以使用下面的表达式来至少指定一位但至多两位数字。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/[0-9]&#123;1,2&#125;/</span><br></pre></td></tr></table></figure>\n<p>上面的表达式的缺点是，只能匹配两位数字，而且可以匹配 0、00、01、10 99\n的章节编号仍只匹配开头两位数字。</p>\n<p>改进下，匹配 1~99 的正整数表达式如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/[1-9][0-9]?/</span><br></pre></td></tr></table></figure>\n<p>或</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/[1-9][0-9]&#123;0,1&#125;/</span><br></pre></td></tr></table></figure>\n<p><strong><em>*</em>** 和 *<em>+*</em>\n限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个\n? 就可以实现非贪婪或最小匹配。</strong></p>\n<p>例如，您可能搜索 HTML 文档，以查找在 <strong>h1</strong>\n标签内的内容。HTML 代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;h1&gt;RUNOOB-菜鸟教程&lt;/h1&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>贪婪：</strong>下面的表达式匹配从开始小于符号 (&lt;) 到关闭\nh1 标记的大于符号 (&gt;) 之间的所有内容。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/&lt;.*&gt;/</span><br></pre></td></tr></table></figure>\n<figure>\n<img data-src=\"D:\\Pictures\\typore\\AD8F3320-2F2E-4513-9BB5-84450D62783D.jpg\"\nalt=\"img\" />\n<figcaption aria-hidden=\"true\">img</figcaption>\n</figure>\n<strong>非贪婪：</strong>如果您只需要匹配开始和结束 h1\n标签，下面的非贪婪表达式只匹配\n<h1>\n<p>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/&lt;.*?&gt;/</span><br></pre></td></tr></table></figure>\n<figure>\n<img data-src=\"D:\\Pictures\\typore\\A6E72665-CE61-46F4-A72B-A34BC13F5820.jpg\"\nalt=\"img\" />\n<figcaption aria-hidden=\"true\">img</figcaption>\n</figure>\n<p>也可以使用以下正则表达式来匹配 h1 标签，表达式则是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/&lt;\\w+?&gt;/</span><br></pre></td></tr></table></figure>\n<figure>\n<img data-src=\"D:\\Pictures\\typore\\C6E89F76-D059-4600-A507-74C42306A790.jpg\"\nalt=\"img\" />\n<figcaption aria-hidden=\"true\">img</figcaption>\n</figure>\n<p>通过在 *****、<strong>+</strong> 或 <strong>?</strong> 限定符之后放置\n<strong>?</strong>，该表达式从\"贪婪\"表达式转换为\"非贪婪\"表达式或者最小匹配。</p>\n<h4 id=\"定位符\">定位符</h4>\n<p>定位符使您能够将正则表达式固定到行首或行尾。它们还使您能够创建这样的正则表达式，这些正则表达式出现在一个单词内、在一个单词的开头或者一个单词的结尾。</p>\n<p>定位符用来描述字符串或单词的边界，<strong>^</strong> 和\n<strong>$</strong> 分别指字符串的开始与结束，<strong>\n描述单词的前或后边界，</strong>* 表示非单词边界。</p>\n<p>正则表达式的定位符有：</p>\n<table>\n<colgroup>\n<col style=\"width: 6%\" />\n<col style=\"width: 93%\" />\n</colgroup>\n<thead>\n<tr>\n<th style=\"text-align: left;\">字符</th>\n<th style=\"text-align: left;\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left;\">^</td>\n<td style=\"text-align: left;\">匹配输入字符串开始的位置。如果设置了\nRegExp 对象的 Multiline 属性，^ 还会与 或 后的位置匹配。</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">$</td>\n<td style=\"text-align: left;\">匹配输入字符串结尾的位置。如果设置了\nRegExp 对象的 Multiline 属性，$ 还会与 或 前的位置匹配。</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">\n匹配一个单词边界，即字与空格间的位置。</td>\n<td style=\"text-align: left;\"></td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"></td>\n<td style=\"text-align: left;\">非单词边界匹配。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>注意</strong>：不能将限定符与定位符一起使用。由于在紧靠换行或者单词边界的前面或后面不能有一个以上位置，因此不允许诸如\n<strong>^*</strong> 之类的表达式。</p>\n<p>若要匹配一行文本开始处的文本，请在正则表达式的开始使用\n<strong>^</strong> 字符。不要将 <strong>^</strong>\n的这种用法与中括号表达式内的用法混淆。</p>\n<p>若要匹配一行文本的结束处的文本，请在正则表达式的结束处使用\n<strong>$</strong> 字符。</p>\n<p>若要在搜索章节标题时使用定位点，下面的正则表达式匹配一个章节标题，该标题只包含两个尾随数字，并且出现在行首：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^Chapter [1-9][0-9]&#123;0,1&#125;/</span><br></pre></td></tr></table></figure>\n<p>真正的章节标题不仅出现行的开始处，而且它还是该行中仅有的文本。它既出现在行首又出现在同一行的结尾。下面的表达式能确保指定的匹配只匹配章节而不匹配交叉引用。通过创建只匹配一行文本的开始和结尾的正则表达式，就可做到这一点。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^Chapter [1-9][0-9]&#123;0,1&#125;$/</span><br></pre></td></tr></table></figure>\n<p>匹配单词边界稍有不同，但向正则表达式添加了很重要的能力。单词边界是单词和空格之间的位置。非单词边界是任何其他位置。下面的表达式匹配单词\nChapter 的开头三个字符，因为这三个字符出现在单词边界后面：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/\\bCha/</span><br></pre></td></tr></table></figure>\n<p>**\n字符的位置是非常重要的。如果它位于要匹配的字符串的开始，它在单词的开始处查找匹配项。如果它位于字符串的结尾，它在单词的结尾处查找匹配项。例如，下面的表达式匹配单词\nChapter 中的字符串 ter，因为它出现在单词边界的前面：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/ter\\b/</span><br></pre></td></tr></table></figure>\n<p>下面的表达式匹配 Chapter 中的字符串 apt，但不匹配 aptitude 中的字符串\napt：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/\\Bapt/</span><br></pre></td></tr></table></figure>\n<p>字符串 apt 出现在单词 Chapter 中的非单词边界处，但出现在单词 aptitude\n中的单词边界处。对于 ***\n非单词边界运算符，不可以匹配单词的开头或结尾，如果是下面的表达式，就不匹配\nChapter 中的 Cha：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\BCha</span><br></pre></td></tr></table></figure>\n<h4 id=\"选择\">选择</h4>\n<p>用圆括号 <strong>()</strong> 将所有选择项括起来，相邻的选择项之间用\n<strong>|</strong> 分隔。</p>\n<p><strong>()</strong> 表示捕获分组，<strong>()</strong>\n会把每个分组里的匹配的值保存起来， 多个匹配值可以通过数字 n\n来查看(<strong>n</strong> 是一个数字，表示第 n 个捕获组的内容)。</p>\n<figure>\n<img data-src=\"D:\\Pictures\\typore\\366574CC-3706-4B4C-8782-1BFF4CF57582.jpg\"\nalt=\"img\" />\n<figcaption aria-hidden=\"true\">img</figcaption>\n</figure>\n<figure>\n<img data-src=\"D:\\Pictures\\typore\\82A7298A-2A94-49E3-AA27-A7778EE89711.jpg\"\nalt=\"img\" />\n<figcaption aria-hidden=\"true\">img</figcaption>\n</figure>\n<p>但用圆括号会有一个副作用，使相关的匹配会被缓存，此时可用\n<strong>?:</strong> 放在第一个选项前来消除这种副作用。</p>\n<p>其中 <strong>?:</strong> 是非捕获元之一，还有两个非捕获元是\n<strong>?=</strong> 和\n<strong>?!</strong>，这两个还有更多的含义，前者为正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串，后者为负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串。</p>\n<h3 id=\"以下列出-的使用区别\">以下列出 ?=、?&lt;=、?!、?&lt;!\n的使用区别</h3>\n<p><strong>exp1(?=exp2)</strong>：查找 exp2 前面的 exp1。</p>\n<figure>\n<img data-src=\"D:\\Pictures\\typore\\reg-111.jpg\" alt=\"img\" />\n<figcaption aria-hidden=\"true\">img</figcaption>\n</figure>\n<p><strong>(?&lt;=exp2)exp1</strong>：查找 exp2 后面的 exp1。</p>\n<figure>\n<img data-src=\"D:\\Pictures\\typore\\reg-222.jpg\" alt=\"img\" />\n<figcaption aria-hidden=\"true\">img</figcaption>\n</figure>\n<p><strong>exp1(?!exp2)</strong>：查找后面不是 exp2 的 exp1。</p>\n<figure>\n<img data-src=\"D:\\Pictures\\typore\\reg-333.jpg\" alt=\"img\" />\n<figcaption aria-hidden=\"true\">img</figcaption>\n</figure>\n<p><strong>(?&lt;!exp2)exp1</strong>：查找前面不是 exp2 的 exp1。</p>\n<figure>\n<img data-src=\"D:\\Pictures\\typore\\reg-444.jpg\" alt=\"img\" />\n<figcaption aria-hidden=\"true\">img</figcaption>\n</figure>\n<h2 id=\"示例\">示例</h2>\n<h5 id=\"匹配-html-标签及内容\">1、匹配 HTML 标签及内容</h5>\n<p>以下正则表达式用于匹配 iframe 标签：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/&lt;iframe(([\\s\\S])*?)&lt;\\/iframe&gt;/</span><br></pre></td></tr></table></figure>\n<p>其他标签的匹配可以替换 <strong>iframe</strong> 。</p>\n<p>匹配 id=\"mydiv\" 的 div 标签：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/&lt;div id=&quot;mydiv&quot;(([\\s\\S])*?)&lt;\\/div&gt;/</span><br></pre></td></tr></table></figure>\n<h5 id=\"中文正则表达式\">2、中文正则表达式</h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/[\\u4E00-\\u9FA5]/;</span><br></pre></td></tr></table></figure>\n<h5 id=\"密码强度正则表达式\">3、密码强度正则表达式</h5>\n<p>最少六位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^.*(?=.&#123;6,&#125;)(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&amp;*? ]).*$/;、</span><br></pre></td></tr></table></figure>\n<h5 id=\"邮箱正则表达式\">4、邮箱正则表达式</h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^(([^&lt;&gt;()[\\]\\\\.,;:\\s@\\&quot;]+(\\.[^&lt;&gt;()[\\]\\\\.,;:\\s@\\&quot;]+)*)|(\\&quot;.+\\&quot;))@((\\[[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]&#123;2,&#125;))$/</span><br><span class=\"line\"> );</span><br></pre></td></tr></table></figure>\n<p>附录：</p>\n<table>\n<colgroup>\n<col style=\"width: 40%\" />\n<col style=\"width: 59%\" />\n</colgroup>\n<thead>\n<tr>\n<th style=\"text-align: left;\">正则表达式</th>\n<th style=\"text-align: left;\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left;\"><code>/\\b([a-z]+) \\1\\b/gi</code></td>\n<td style=\"text-align: left;\">一个单词连续出现的位置。</td>\n</tr>\n<tr>\n<td\nstyle=\"text-align: left;\"><code>/(\\w+):\\/\\/([^/:]+)(:\\d*)?([^# ]*)/</code></td>\n<td style=\"text-align: left;\">匹配一个 URL\n解析为协议、域、端口及相对路径。</td>\n</tr>\n<tr>\n<td\nstyle=\"text-align: left;\"><code>/^(?:Chapter|Section) [1-9][0-9]&#123;0,1&#125;$/</code></td>\n<td style=\"text-align: left;\">定位章节的位置。</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>/[-a-z]/</code></td>\n<td style=\"text-align: left;\">a 至 z 共 26个 字母再加一个\n<strong>-</strong> 号。</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>/ter\\b/</code></td>\n<td style=\"text-align: left;\">可匹配 chapter，而不能匹配 terminal。</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>/\\Bapt/</code></td>\n<td style=\"text-align: left;\">可匹配 chapter，而不能匹配 aptitude。</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>/Windows(?=95 |98 |NT )/</code></td>\n<td style=\"text-align: left;\">可匹配 Windows95 或 Windows98 或\nWindowsNT，当找到一个匹配后，从 Windows\n后面开始进行下一次的检索匹配。</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>/^\\s*$/</code></td>\n<td style=\"text-align: left;\">匹配空行。</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>/\\d&#123;2&#125;-\\d&#123;5&#125;/</code></td>\n<td style=\"text-align: left;\">验证由两位数字、一个连字符再加 5\n位数字组成的 ID 号。</td>\n</tr>\n<tr>\n<td\nstyle=\"text-align: left;\"><code>&lt;[a-zA-Z]+.*?&gt;([\\s\\S]*?)&lt;/[a-zA-Z]*?&gt;</code></td>\n<td style=\"text-align: left;\">匹配 HTML 标记。</td>\n</tr>\n</tbody>\n</table>\n<table>\n<colgroup>\n<col style=\"width: 25%\" />\n<col style=\"width: 74%\" />\n</colgroup>\n<thead>\n<tr>\n<th style=\"text-align: left;\">正则表达式</th>\n<th style=\"text-align: left;\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left;\"><code>hello</code></td>\n<td style=\"text-align: left;\">匹配 {hello}</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>gray|grey</code></td>\n<td style=\"text-align: left;\">匹配 {gray, grey}</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>gr(a|e)y</code></td>\n<td style=\"text-align: left;\">匹配 {gray, grey}</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>gr[ae]y</code></td>\n<td style=\"text-align: left;\">匹配 {gray, grey}</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>b[aeiou]bble</code></td>\n<td style=\"text-align: left;\">匹配 {babble, bebble, bibble, bobble,\nbubble}</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>[b-chm-pP]at|ot</code></td>\n<td style=\"text-align: left;\">匹配 {bat, cat, hat, mat, nat, oat, pat,\nPat, ot}</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>colou?r</code></td>\n<td style=\"text-align: left;\">匹配 {color, colour}</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>rege(x(es)?|xps?)</code></td>\n<td style=\"text-align: left;\">匹配 {regex, regexes, regexp,\nregexps}</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>go*gle</code></td>\n<td style=\"text-align: left;\">匹配 {ggle, gogle, google, gooogle,\ngoooogle, ...}</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>go+gle</code></td>\n<td style=\"text-align: left;\">匹配 {gogle, google, gooogle, goooogle,\n...}</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>g(oog)+le</code></td>\n<td style=\"text-align: left;\">匹配 {google, googoogle, googoogoogle,\ngoogoogoogoogle, ...}</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>z&#123;3&#125;</code></td>\n<td style=\"text-align: left;\">匹配 {zzz}</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>z&#123;3,6&#125;</code></td>\n<td style=\"text-align: left;\">匹配 {zzz, zzzz, zzzzz, zzzzzz}</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>z&#123;3,&#125;</code></td>\n<td style=\"text-align: left;\">匹配 {zzz, zzzz, zzzzz, ...}</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>[Bb]rainf\\*\\*k</code></td>\n<td style=\"text-align: left;\">匹配 {Brainf<strong>k,\nbrainf</strong>k}</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>\\d</code></td>\n<td style=\"text-align: left;\">匹配 {0,1,2,3,4,5,6,7,8,9}</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>1\\d&#123;10&#125;</code></td>\n<td style=\"text-align: left;\">匹配 11 个数字，以 1 开头</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>[2-9]|[12]\\d|3[0-6]</code></td>\n<td style=\"text-align: left;\">匹配 2 到 36 范围内的整数</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>Hello\\nworld</code></td>\n<td style=\"text-align: left;\">匹配 Hello 后跟换行符，后跟 world</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>\\d+(\\.\\d\\d)?</code></td>\n<td\nstyle=\"text-align: left;\">包含一个正整数或包含两位小数位的浮点数。</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>[^*@#]</code></td>\n<td style=\"text-align: left;\">排除 *、@ 、# 三个特色符号</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>//[^\\r\\n]*[\\r\\n]</code></td>\n<td style=\"text-align: left;\">匹配 <strong>//</strong> 开头的注释</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>^dog</code></td>\n<td style=\"text-align: left;\">匹配以 \"dog\" 开始</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>dog$</code></td>\n<td style=\"text-align: left;\">匹配以 \"dog\" 结尾</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\"><code>^dog$</code></td>\n<td style=\"text-align: left;\">is exactly \"dog\"</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "后端",
                "正则"
            ]
        },
        {
            "id": "http://example.com/2024/10/17/post/springboot/03-Mybatis-Plus%20@SqlParser%E6%B3%A8%E8%A7%A3/",
            "url": "http://example.com/2024/10/17/post/springboot/03-Mybatis-Plus%20@SqlParser%E6%B3%A8%E8%A7%A3/",
            "title": "03-Mybatis-Plus @SqlParser注解",
            "date_published": "2024-10-17T03:08:47.769Z",
            "content_html": "<h1 id=\"mybatis-plus-sqlparser注解\">Mybatis-Plus <span class=\"citation\"\ndata-cites=\"SqlParser注解\">@SqlParser注解</span></h1>\n<p><span class=\"citation\" data-cites=\"SqlParser\">@SqlParser</span>\n注解在<a\nhref=\"https://so.csdn.net/so/search?q=多租户&amp;spm=1001.2101.3001.7020\">多租户</a>的模式下，用来过滤的注解，在最新的\nMybatis Plus 中这个 <span class=\"citation\"\ndata-cites=\"SqlParser1\">@SqlParser1</span> 注解已经过时。</p>\n<h4 id=\"那什么是多租户模式\">那什么是多租户模式？</h4>\n<p>MyBatis\n的多租户模式是指在数据库设计和应用程序开发中，针对需要支持多个独立用户群体（如企业客户A、B、C等，每个都有各自的业务数据）的情况，通过一些特定的技术手段来处理。在这种模式下，我们通常会做以下几个步骤：</p>\n<ol type=\"1\">\n<li><strong>数据库表设计</strong>：为每个租户创建单独的数据表空间或者隔离区，比如添加一个<code>tenant_id</code>字段用于标识租户。</li>\n<li><strong>Mapper配置</strong>：在MyBatis的mapper\nXML文件中，通过<code>where</code>条件基于<code>tenant_id</code>动态过滤查询结果，只返回对应租户的数据。</li>\n<li><strong>事务管理</strong>：在多租户环境下，可能需要为每个租户维护单独的数据库连接或事务，避免数据交叉污染。</li>\n<li><strong>服务层封装</strong>：在业务层，使用工厂模式或者策略模式，为每个租户创建对应的Service实例，调用对应的Mapper。</li>\n<li><strong>安全访问控制</strong>：除了数据库层面，还需要在应用层对租户进行权限验证和访问控制。</li>\n</ol>\n<h4 id=\"替代注解\">替代注解</h4>\n<p>当我们的需要过滤多租户，我们就需要用 <span class=\"citation\"\ndata-cites=\"InterceptorIgnore\">@InterceptorIgnore</span>(tenantLine =\n“1”) 注解来代替。</p>\n<p>拦截忽略注解 <span class=\"citation\"\ndata-cites=\"InterceptorIgnore\">@InterceptorIgnore</span></p>\n<table>\n<colgroup>\n<col style=\"width: 24%\" />\n<col style=\"width: 9%\" />\n<col style=\"width: 9%\" />\n<col style=\"width: 56%\" />\n</colgroup>\n<thead>\n<tr>\n<th style=\"text-align: center;\">属性名</th>\n<th style=\"text-align: center;\">类型</th>\n<th style=\"text-align: center;\">默认值</th>\n<th style=\"text-align: center;\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: center;\">tenantLine</td>\n<td style=\"text-align: center;\">String</td>\n<td style=\"text-align: center;\">\"\"</td>\n<td style=\"text-align: center;\">行级租户</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">dynamicTableName</td>\n<td style=\"text-align: center;\">String</td>\n<td style=\"text-align: center;\">\"\"</td>\n<td style=\"text-align: center;\">动态表名</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">blockAttack</td>\n<td style=\"text-align: center;\">String</td>\n<td style=\"text-align: center;\">\"\"</td>\n<td\nstyle=\"text-align: center;\">攻击SQL阻断解析器，防止全表更新与删除</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">iillegeSql</td>\n<td style=\"text-align: center;\">String</td>\n<td style=\"text-align: center;\">\"\"</td>\n<td style=\"text-align: center;\">垃圾SQL拦截</td>\n</tr>\n</tbody>\n</table>\n<p>该注解作用于 xxMapper.java 方法之上 各属性代表对应的插件\n各属性不给值则默认为 false 设置为 true 忽略拦截 更多说明详见源码注释</p>\n<p><span class=\"citation\"\ndata-cites=\"SqlParser\">@SqlParser</span>(filter = true) 与 <span\nclass=\"citation\"\ndata-cites=\"InterceptorIgnore\">@InterceptorIgnore</span>(tenantLine =\n“1”) 等价</p>\n",
            "tags": [
                "后端",
                "Mybatis-Plus"
            ]
        },
        {
            "id": "http://example.com/2024/10/17/post/springboot/02-String%E3%80%81Date%E3%80%81LocalDate%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/",
            "url": "http://example.com/2024/10/17/post/springboot/02-String%E3%80%81Date%E3%80%81LocalDate%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/",
            "title": "02-String、Date、LocalDate之间的转换",
            "date_published": "2024-10-17T03:08:47.752Z",
            "content_html": "<h1\nid=\"stringdatelocaldate之间的转换\">String、Date、LocalDate之间的转换</h1>\n<h3 id=\"一date和string\">一、Date和String</h3>\n<blockquote>\n<p>使用SimpleDateFormat对象指定目标日期格式</p>\n</blockquote>\n<h4 id=\"date转string\">1、Date转String</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//主要根据&quot;yyyy-MM-dd HH:mm:ss&quot;进行格式的变换</span></span><br><span class=\"line\"><span class=\"type\">Date</span> <span class=\"variable\">date</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">\t<span class=\"type\">SimpleDateFormat</span> <span class=\"variable\">formatter</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class=\"line\">\tSystem.out.println(formatter.format(date));</span><br></pre></td></tr></table></figure>\n<h4 id=\"string转date\">2、String转Date</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">date</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;2023-05-31 22:41:21&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">SimpleDateFormat</span> <span class=\"variable\">formatter</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class=\"line\">    System.out.println(formatter.parse(date));</span><br></pre></td></tr></table></figure>\n<h3 id=\"二date和localdate\">二、Date和LocalDate</h3>\n<blockquote>\n<p>转变为中间对象Instant，都需要用到ZoneId时区</p>\n</blockquote>\n<h4 id=\"date转localdate\">1、Date转LocalDate</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;====LocalDate====&quot;</span></span><br><span class=\"line\"><span class=\"type\">Date</span> <span class=\"variable\">date</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\"><span class=\"type\">LocalDate</span> <span class=\"variable\">localDate</span> <span class=\"operator\">=</span> date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();</span><br><span class=\"line\">System.out.println(localDate);</span><br><span class=\"line\"><span class=\"string\">&quot;====LocalDateTime====&quot;</span></span><br><span class=\"line\"><span class=\"type\">LocalDateTime</span> <span class=\"variable\">localDateTime</span> <span class=\"operator\">=</span> date.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();</span><br><span class=\"line\">System.out.println(localDateTime);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"localdate转date\">2、LocalDate转Date</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">ZoneId</span> <span class=\"variable\">zone</span> <span class=\"operator\">=</span> ZoneId.systemDefault();</span><br><span class=\"line\"><span class=\"string\">&quot;====LocalDate====&quot;</span></span><br><span class=\"line\">    <span class=\"type\">LocalDate</span> <span class=\"variable\">localDate</span> <span class=\"operator\">=</span> LocalDate.of(<span class=\"number\">2023</span>, <span class=\"number\">5</span>, <span class=\"number\">31</span>);</span><br><span class=\"line\">    <span class=\"type\">Instant</span> <span class=\"variable\">instant</span> <span class=\"operator\">=</span> localDate.atStartOfDay().atZone(zone).toInstant();</span><br><span class=\"line\">    Sy stem.out.println(Date.from(instant));</span><br><span class=\"line\"></span><br><span class=\"line\"> \t<span class=\"type\">LocalDate</span> <span class=\"variable\">date2</span> <span class=\"operator\">=</span> LocalDate.parse(<span class=\"string\">&quot;2023-05-13&quot;</span>, DateTimeFormatter.ISO_LOCAL_DATE);</span><br><span class=\"line\">    <span class=\"type\">Instant</span> <span class=\"variable\">instant2</span> <span class=\"operator\">=</span> date2.atStartOfDay().atZone(zone).toInstant();</span><br><span class=\"line\">    System.out.println(Date.from(instant2));</span><br><span class=\"line\"><span class=\"string\">&quot;====LocalDateTime====&quot;</span></span><br><span class=\"line\">    <span class=\"type\">LocalDateTime</span> <span class=\"variable\">localDateTime2</span> <span class=\"operator\">=</span> LocalDateTime.of(<span class=\"number\">2023</span>, <span class=\"number\">5</span>, <span class=\"number\">31</span>, <span class=\"number\">23</span>, <span class=\"number\">13</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"type\">Instant</span> <span class=\"variable\">instant3</span> <span class=\"operator\">=</span> localDateTime2.atZone(zone).toInstant();</span><br><span class=\"line\">    System.out.println(Date.from(instant3));</span><br></pre></td></tr></table></figure>\n<h3 id=\"三localdate和string\">三、LocalDate和String</h3>\n<blockquote>\n<p>使用DateTimeFormatter指定目标日期格式</p>\n</blockquote>\n<h4 id=\"localdate转string\">1、LocalDate转String</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;====LocalDate====&quot;</span></span><br><span class=\"line\">\t<span class=\"type\">DateTimeFormatter</span> <span class=\"variable\">df</span> <span class=\"operator\">=</span> DateTimeFormatter.ofPattern(<span class=\"string\">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class=\"line\">\t<span class=\"type\">LocalDate</span> <span class=\"variable\">localDate</span> <span class=\"operator\">=</span> LocalDate.of(<span class=\"string\">&quot;2020-2-5&quot;</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//LocalDate localDate = LocalDate.of(2020, 2, 5);</span></span><br><span class=\"line\">    System.out.println(localDate.format(df));</span><br><span class=\"line\"><span class=\"string\">&quot;====LocalDateTime====&quot;</span></span><br><span class=\"line\">    <span class=\"type\">DateTimeFormatter</span> <span class=\"variable\">df3</span> <span class=\"operator\">=</span> DateTimeFormatter.ofPattern(YYYY_MM_DD_HH_MM_SS_12);</span><br><span class=\"line\">\t<span class=\"comment\">//DateTimeFormatter df3 = DateTimeFormatter.ofPattern(&quot;yyyy-MM-dd HH:mm:ss&quot;);</span></span><br><span class=\"line\">    <span class=\"type\">LocalDateTime</span> <span class=\"variable\">localDateTime</span> <span class=\"operator\">=</span> LocalDateTime.of(<span class=\"number\">2020</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">14</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\">    System.out.println(df3.format(localDateTime));</span><br></pre></td></tr></table></figure>\n<h4 id=\"string转localdate\">2、String转LocalDate</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;====LocalDate====&quot;</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">dateStr</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;2023-05-31&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">DateTimeFormatter</span> <span class=\"variable\">df</span> <span class=\"operator\">=</span> DateTimeFormatter.ofPattern(<span class=\"string\">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class=\"line\">    System.out.println(LocalDate.parse(dateStr, df));</span><br><span class=\"line\"><span class=\"string\">&quot;====LocalDateTime====&quot;</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">timeStr</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;2023-05-31 16:41:21&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">DateTimeFormatter</span> <span class=\"variable\">df3</span> <span class=\"operator\">=</span> DateTimeFormatter.ofPattern(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class=\"line\">    System.out.println(LocalDateTime.parse(timeStr, df3));</span><br></pre></td></tr></table></figure>\n<h3 id=\"四localdate日期判断\">四、LocalDate日期判断</h3>\n<p>例子：</p>\n<h4 id=\"判断月份与时间\">1、判断月份与时间</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">DateTimeFormatter</span> <span class=\"variable\">df</span> <span class=\"operator\">=</span> DateTimeFormatter.ofPattern(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">LocalDateTime</span> <span class=\"variable\">time</span> <span class=\"operator\">=</span> LocalDateTime.parse(TimeStr,df);</span><br><span class=\"line\"><span class=\"comment\">//判断是这个月的最后一天且 时间没有过中午十二点</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(time.getDayOfMonth()==time.getMonth().maxLength() &amp;&amp; sj.getHour()&lt;<span class=\"number\">12</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">//判断日期小于24号，如果为24号，也小于下午四点</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(time.getDayOfMonth()&lt;<span class=\"number\">24</span> || (time.getDayOfMonth()==<span class=\"number\">24</span> &amp;&amp; time.getHour()&lt;<span class=\"number\">16</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"设置时间\">2、设置时间</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//比time 多一个月，设1日  00:00:00</span></span><br><span class=\"line\"><span class=\"type\">LocalDateTime</span> <span class=\"variable\">transDate</span> <span class=\"operator\">=</span> time.plusMonths(<span class=\"number\">1</span>).withDayOfMonth(<span class=\"number\">1</span>).withHour(<span class=\"number\">0</span>).withMinute(<span class=\"number\">0</span>).withSecond(<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "后端",
                "Java",
                "数据类型"
            ]
        },
        {
            "id": "http://example.com/2024/10/17/post/linux/linux%E5%9F%BA%E7%A1%80/",
            "url": "http://example.com/2024/10/17/post/linux/linux%E5%9F%BA%E7%A1%80/",
            "title": "linux基础",
            "date_published": "2024-10-17T03:08:47.554Z",
            "content_html": "<h1 id=\"linux基础\">Linux基础</h1>\n<h3 id=\"linux-简介\"><a href=\"#linux-简介\">Linux 简介</a></h3>\n<p>通过以下三点可以概括 Linux 到底是什么：</p>\n<ul>\n<li><strong>类 Unix 系统</strong>：Linux 是一种自由、开放源码的类似 Unix\n的操作系统</li>\n<li><strong>Linux 本质是指 Linux 内核</strong>：严格来讲，Linux\n这个词本身只表示 Linux 内核，单独的 Linux\n内核并不能成为一个可以正常工作的操作系统。所以，就有了各种 Linux\n发行版。</li>\n<li><strong>Linux 之父(林纳斯·本纳第克特·托瓦兹 Linus Benedict\nTorvalds)</strong>：一个编程领域的传奇式人物，真大佬！我辈崇拜敬仰之楷模。他是\n<strong>Linux 内核</strong> 的最早作者，随后发起了这个开源项目，担任\nLinux 内核的首要架构师。他还发起了 Git\n这个开源项目，并为主要的开发者。</li>\n</ul>\n<h2 id=\"linux文件系统\">Linux文件系统</h2>\n<h3 id=\"linux文件系统简介\"><a\nhref=\"#Linux文件系统简介\">Linux文件系统简介</a></h3>\n<p>在 Linux\n操作系统中，一切被操作系统管理的资源，如网络接口卡、磁盘驱动器、打印机、输入输出设备、普通文件或目录等，都被视为文件。这是\nLinux 系统中一个重要的概念，即\"一切都是文件\"。</p>\n<p>这种概念源自 UNIX\n哲学，即将所有资源都抽象为文件的方式来进行管理和访问。Linux\n的文件系统也借鉴了 UNIX 文件系统的设计理念。这种设计使得 Linux\n系统可以通过统一的文件接口来管理和操作不同类型的资源，从而实现了一种统一的文件操作方式。例如，可以使用类似于读写文件的方式来对待网络接口、磁盘驱动器、设备文件等，使得操作和管理这些资源更加统一和简便。</p>\n<p>这种文件为中心的设计理念为 Linux 系统带来了灵活性和可扩展性，使得\nLinux 成为一种强大的操作系统。同时，这也是 Linux\n系统的一大特点，深受广大用户和开发者的喜欢和推崇。</p>\n<h3 id=\"inode-介绍\"><a href=\"#inode-介绍\">inode 介绍</a></h3>\n<p>inode 是 Linux/Unix 文件系统的基础。那 inode\n到是什么?有什么作用呢?</p>\n<p>通过以下五点可以概括 inode 到底是什么：</p>\n<p>硬盘的最小存储单位是扇区(Sector)，块(block)由多个扇区组成。文件数据存储在块中。块的最常见的大小是\n4kb，约为 8 个连续的扇区组成（每个扇区存储 512\n字节）。一个文件可能会占用多个\nblock，但是一个块只能存放一个文件。虽然，我们将文件存储在了块(block)中，但是我们还需要一个空间来存储文件的\n元信息\nmetadata：如某个文件被分成几块、每一块在的地址、文件拥有者，创建时间，权限，大小等。这种\n存储文件元信息的区域就叫 inode，译为索引节点：i（index）+node。\n每个文件都有一个唯一的 inode，存储文件的元信息。 inode\n是一种固定大小的数据结构，其大小在文件系统创建时就确定了，并且在文件的生命周期内保持不变。\ninode 的访问速度非常快，因为系统可以直接通过 inode\n号码定位到文件的元数据信息，无需遍历整个文件系统。 inode\n的数量是有限的，每个文件系统只能包含固定数量的\ninode。这意味着当文件系统中的 inode\n用完时，无法再创建新的文件或目录，即使磁盘上还有可用空间。因此，在创建文件系统时，需要根据文件和目录的预期数量来合理分配\ninode 的数量。 可以使用 stat 命令可以查看文件的 inode 信息，包括文件的\ninode 号、文件类型、权限、所有者、文件大小、修改时间。 简单来说：inode\n就是用来维护某个文件被分成几块、每一块在的地址、文件拥有者，创建时间，权限，大小等信息。</p>\n<p>再总结一下 inode 和 block：</p>\n<p>inode：记录文件的属性信息，可以使用 stat 命令查看 inode 信息。\nblock：实际文件的内容，如果一个文件大于一个块时候，那么将占用多个\nblock，但是一个块只能存放一个文件。（因为数据是由 inode\n指向的，如果有两个文件的数据存放在同一个块中，就会乱套了）</p>\n<h3 id=\"硬链接和软链接\">硬链接和软链接</h3>\n<p>在 Linux/类 Unix 系统上，文件链接（File\nLink）是一种特殊的文件类型，可以在文件系统中指向另一个文件。常见的文件链接类型有两种：</p>\n<p><strong>1、硬链接（Hard Link）</strong></p>\n<ul>\n<li>在 Linux/类 Unix\n文件系统中，每个文件和目录都有一个唯一的索引节点（inode）号，用来标识该文件或目录。硬链接通过\ninode 节点号建立连接，硬链接和源文件的 inode\n节点号相同，两者对文件系统来说是完全平等的（可以看作是互为硬链接，源头是同一份文件），删除其中任何一个对另外一个没有影响，可以通过给文件设置硬链接文件来防止重要文件被误删。</li>\n<li>只有删除了源文件和所有对应的硬链接文件，该文件才会被真正删除。</li>\n<li>硬链接具有一些限制，不能对目录以及不存在的文件创建硬链接，并且，硬链接也不能跨越文件系统。</li>\n<li><code>ln</code> 命令用于创建硬链接。</li>\n</ul>\n<p><strong>2、软链接（Symbolic Link 或 Symlink）</strong></p>\n<ul>\n<li>软链接和源文件的 inode 节点号不同，而是指向一个文件路径。</li>\n<li>源文件删除后，软链接依然存在，但是指向的是一个无效的文件路径。</li>\n<li>软连接类似于 Windows 系统中的快捷方式。</li>\n<li>不同于硬链接，可以对目录或者不存在的文件创建软链接，并且，软链接可以跨越文件系统。</li>\n<li><code>ln -s</code> 命令用于创建软链接。</li>\n</ul>\n<p><strong>硬链接为什么不能跨文件系统？</strong></p>\n<p>我们之前提到过，硬链接是通过 inode\n节点号建立连接的，而硬链接和源文件共享相同的 inode 节点号。</p>\n<p>然而，每个文件系统都有自己的独立 inode 表，且每个 inode\n表只维护该文件系统内的\ninode。如果在不同的文件系统之间创建硬链接，可能会导致 inode\n节点号冲突的问题，即目标文件的 inode\n节点号已经在该文件系统中被使用。</p>\n<h3 id=\"linux-文件类型\"><a href=\"#linux-文件类型\">Linux\n文件类型</a></h3>\n<p>Linux 支持很多文件类型，其中非常重要的文件类型有:\n<strong>普通文件</strong>，<strong>目录文件</strong>，<strong>链接文件</strong>，<strong>设备文件</strong>，<strong>管道文件</strong>，<strong>Socket\n套接字文件</strong> 等。</p>\n<ul>\n<li><strong>普通文件（-）</strong>：用于存储信息和数据， Linux\n用户可以根据访问权限对普通文件进行查看、更改和删除。比如：图片、声音、PDF、text、视频、源代码等等。</li>\n<li><strong>目录文件（d，directory\nfile）</strong>：目录也是文件的一种，用于表示和管理系统中的文件，目录文件中包含一些文件名和子目录名。打开目录事实上就是打开目录文件。</li>\n<li><strong>符号链接文件（l，symbolic\nlink）</strong>：保留了指向文件的地址而不是文件本身。</li>\n<li><strong>字符设备（c，char）</strong>：用来访问字符设备比如键盘。</li>\n<li><strong>设备文件（b，block）</strong>：用来访问块设备比如硬盘、软盘。</li>\n<li><strong>管道文件(p，pipe)</strong> :\n一种特殊类型的文件，用于进程之间的通信。</li>\n<li><strong>套接字文件(s，socket)</strong>：用于进程间的网络通信，也可以用于本机之间的非网络通信。</li>\n</ul>\n<p>每种文件类型都有不同的用途和属性，可以通过命令如<code>ls</code>、<code>file</code>等来查看文件的类型信息。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 普通文件（-）</span></span><br><span class=\"line\">-rw-r--r--  1 user  group  1024 Apr 14 10:00 file.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 目录文件（d，directory file）*</span></span><br><span class=\"line\">drwxr-xr-x  2 user  group  4096 Apr 14 10:00 directory/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 套接字文件(s，socket)</span></span><br><span class=\"line\">srwxrwxrwx  1 user  group    0 Apr 14 10:00 socket</span><br></pre></td></tr></table></figure>\n<h3 id=\"linux目录树\">Linux目录树</h3>\n<p>Linux\n使用一种称为目录树的层次结构来组织文件和目录。目录树由根目录（/）作为起始点，向下延伸，形成一系列的目录和子目录。每个目录可以包含文件和其他子目录。结构层次鲜明，就像一棵倒立的树。</p>\n<figure>\n<img\nsrc=\"https://dlink.host/wx4.sinaimg.cn/large/006V2BDqly8htd953kl4fj30mv08rt9b.jpg\"\nalt=\"alt\" />\n<figcaption aria-hidden=\"true\">alt</figcaption>\n</figure>\n<p><strong>常见目录说明：</strong></p>\n<ul>\n<li><strong>/bin：</strong> 存放二进制可执行文件(ls、cat、mkdir\n等)，常用命令一般都在这里；</li>\n<li><strong>/etc：</strong> 存放系统管理和配置文件；</li>\n<li><strong>/home：</strong>\n存放所有用户文件的根目录，是用户主目录的基点，比如用户 user\n的主目录就是/home/user，可以用~user 表示；</li>\n<li><strong>/usr：</strong> 用于存放系统应用程序；</li>\n<li><strong>/opt：</strong>\n额外安装的可选应用程序包所放置的位置。一般情况下，我们可以把 tomcat\n等都安装到这里；</li>\n<li><strong>/proc：</strong>\n虚拟文件系统目录，是系统内存的映射。可直接访问这个目录来获取系统信息；</li>\n<li><strong>/root：</strong>\n超级用户（系统管理员）的主目录（特权阶级<sup>o</sup>）；</li>\n<li><strong>/sbin:</strong> 存放二进制可执行文件，只有 root\n才能访问。这里存放的是系统管理员使用的系统级别的管理命令和程序。如\nifconfig 等；</li>\n<li><strong>/dev：</strong> 用于存放设备文件；</li>\n<li><strong>/mnt：</strong>\n系统管理员安装临时文件系统的安装点，系统提供这个目录是让用户临时挂载其他的文件系统；</li>\n<li><strong>/boot：</strong> 存放用于系统引导时使用的各种文件；</li>\n<li><strong>/lib 和/lib64：</strong> 存放着和系统运行相关的库文件\n；</li>\n<li><strong>/tmp：</strong>\n用于存放各种临时文件，是公用的临时文件存储点；</li>\n<li><strong>/var：</strong>\n用于存放运行时需要改变数据的文件，也是某些大文件的溢出区，比方说各种服务的日志文件（系统启动日志等。）等；</li>\n<li><strong>/lost+found：</strong>\n这个目录平时是空的，系统非正常关机而留下“无家可归”的文件（windows\n下叫什么.chk）就在这里。</li>\n</ul>\n<h2 id=\"linux常用命令\">Linux常用命令</h2>\n<p>下面只是给出了一些比较常用的命令。</p>\n<p>推荐一个 Linux\n命令快查网站，非常不错，大家如果遗忘某些命令或者对某些命令不理解都可以在这里得到解决。Linux\n命令在线速查手册：<a\nhref=\"https://wangchujiang.com/linux-command/\">https://wangchujiang.com/linux-command/open\nin new window</a> 。</p>\n<p>另外，<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2hlbGwuaG93Lw==\">shell.howopen in new\nwindow</span> 这个网站可以用来解释常见命令的意思，对你学习 Linux\n基本命令以及其他常用命令（如 Git、NPM）。</p>\n<h3 id=\"目录切换\">目录切换</h3>\n<ul>\n<li><code>cd usr</code>：切换到该目录下 usr 目录</li>\n<li><code>cd ..（或cd../）</code>：切换到上一层目录</li>\n<li><code>cd /</code>：切换到系统根目录</li>\n<li><code>cd ~</code>：切换到用户主目录</li>\n<li><code>cd -</code>： 切换到上一个操作所在目录</li>\n</ul>\n<h3 id=\"目录操作\">目录操作</h3>\n<ul>\n<li><p>`<code>ls</code>：显示目录中的文件和子目录的列表。例如：<code>ls /home</code>，显示<code>/home</code>目录下的文件和子目录列表。</p></li>\n<li><p><code>ll</code>：<code>ll</code> 是<code>ls -l</code>\n的别名，<code>ll</code>命令可以看到该目录下的所有目录和文件的详细信息</p></li>\n<li><p><code>mkdir [选项] 目录名</code>：创建新目录（增）。例如：<code>mkdir -m 755 my_directory</code>，创建一个名为\n<code>my_directory</code>的新目录，并将其权限设置为<code>755</code>，即所有用户对该目录有读、写和执行的权限。</p></li>\n<li><p><code>find [路径] [表达式]</code>：在指定目录及其子目录中搜索文件或目录（查），非常强大灵活。例如：①\n列出当前目录及子目录下所有文件和文件夹:<code>find</code>.；②\n在<code>/home</code>目录下查找以<code>.txt</code>结尾的文件名:<code>find /home -name \"*.txt\"</code>\n,忽略大小写:<code>find /home -i name \"*.txt\"</code>；③\n当前目录及子目录下查找所有以<code>.txt</code>和<code>.pdf</code>结尾的文件:<code>find . \\( -name \"*.txt\" -o -name \"*.pdf\" \\)</code>或<code>find . -name \"*.txt\" -o -name \"*.pdf\"</code>。</p></li>\n<li><p><code>pwd</code>：显示当前工作目录的路径。</p></li>\n<li><p><code>rmdir [选项] 目录名</code>：删除空目录（删）。例如：<code>rmdir -p my_directory</code>，删除名为\n<code>my_directory</code>的空目录，并且会递归删除<code>my_directory</code>的空父目录，直到遇到非空目录或根目录。</p></li>\n<li><p><code>rm [选项] 文件或目录名</code>：删除文件/目录（删）。例如：<code>rm -r my_directory</code>，删除名为\n<code>my_directory</code> 的目录，<code>-r</code>(recursive,递归)\n表示会递归删除指定目录及其所有子目录和文件。</p></li>\n<li><p><code>cp [选项] 源文件/目录 目标文件/目录</code>：复制文件或目录（移）。例如：<code>cp file.txt /home/file.txt</code>，将\n<code>file.txt</code>文件复制到<code>/home</code>目录下，并重命名为\n<code>file.txt</code>。<code>cp -r source destination</code>，将\n<code>source</code> 目录及其下的所有子目录和文件复制到\n<code>destination</code>目录下，并保留源文件的属性和目录结构。</p></li>\n<li><p><code>mv [选项] 源文件/目录 目标文件/目录</code>：移动文件或目录（移），也可以用于重命名文件或目录。例如：<code>mv file.txt /home/file.txt</code>，将\n<code>file.txt</code>\n文件移动到<code>/home</code>目录下，并重命名为<code>file.txt</code>。<code>mv</code>与\n<code>cp</code>的结果不同，<code>mv</code>\n好像文件“搬家”，文件个数并未增加。而\n<code>cp</code>对文件进行复制，文件个数增加了。</p></li>\n</ul>\n<h3 id=\"文件操作\">文件操作</h3>\n<p>像 <code>mv</code>、<code>cp</code>、<code>rm</code>\n等文件和目录都适用的命令，这里就不重复列举了。</p>\n<ul>\n<li><code>touch [选项] 文件名..</code>：创建新文件或更新已存在文件（增）。例如：<code>touch file1.txt file2.txt file3.txt</code>，创建\n3 个文件。</li>\n<li><code>ln [选项] &lt;源文件&gt; &lt;硬链接/软链接文件&gt;</code>：创建硬链接/软链接。例如：<code>ln -s file.txt file_link</code>，创建名为<code>file_link</code>\n的软链接，指向 <code>file.txt</code> 文件。<code>-s</code>\n选项代表的就是创建软链接，<code>s</code>即<code>symbolic</code>（软链接又名符号链接）\n。</li>\n<li><code>cat/more/less/tail 文件名</code>：文件的查看（查）\n。命令<code>tail -f</code>文件 可以对某个文件进行动态监控，例如 Tomcat\n的日志文件，\n会随着程序的运行，日志会变化，可以使用<code>tail -f catalina-2016-11-11.log</code>监控文件的变化\n。</li>\n<li><code>vim 文件名</code>：修改文件的内容（改）。<code>vim</code>\n编辑器是<code>Linux</code> 中的强大组件，是 <code>vi</code>\n编辑器的加强版，<code>vim</code>\n编辑器的命令和快捷方式有很多，但此处不一一阐述，大家也无需研究的很透彻，使用<code>vim</code>编辑修改文件的方式基本会使用就可以了。在实际开发中，使用<code>vim</code>编辑器主要作用就是修改配置文件，下面是一般步骤：<code>vim 文件------&gt;进入文件-----&gt;命令模式------&gt;按i进入编辑模式-----&gt;编辑文件 -------&gt;按Esc进入底行模式-----&gt;输入：wq/q! （</code>输入\nwq 代表写入内容并退出，即保存；输入 q!代表强制退出不保存）。</li>\n</ul>\n<h3 id=\"文件压缩\">文件压缩</h3>\n<h4 id=\"打包并压缩文件\">1）打包并压缩文件：</h4>\n<p>Linux\n中的打包文件一般是以<code>.tar</code>结尾的，压缩的命令一般是以<code>.gz</code>\n结尾的。而一般情况下打包和压缩是一起进行的，打包并压缩后的文件的后缀名一般\n<code>.tar.gz</code>。</p>\n<p>命令：<code>tar -zcvf</code>打包压缩后的文件名 要打包压缩的文件\n，其中：</p>\n<ul>\n<li><p>z：调用 gzip 压缩命令进行压缩</p></li>\n<li><p>c：打包文件</p></li>\n<li><p>v：显示运行过程</p></li>\n<li><p>f：指定文件名</p></li>\n</ul>\n<p>比如：假如 test\n目录下有三个文件分别是：<code>aaa.txt</code>、<code>bbb.txt</code>、<code>ccc.txt</code>，如果我们要打包<code>test</code>目录并指定压缩后的压缩包名称为<code>test.tar.gz</code>可以使用命令：<code>tar -zcvf test.tar.gz aaa.txt bbb.txt ccc.txt</code>或\n<code>tar -zcvf test.tar.gz /test/</code> 。</p>\n<h4 id=\"解压压缩包\">2）解压压缩包：</h4>\n<p>命令：<code>tar [-xvf] 压缩文件</code></p>\n<p>其中 x 代表解压</p>\n<p>示例：</p>\n<ul>\n<li><p>将 /test 下的 <code>test.tar.gz</code>\n解压到当前目录下可以使用命令：<code>tar -xvf test.tar.gz</code></p></li>\n<li><p>将 /test 下的<code>test.tar.gz</code>解压到根目录/usr\n下:<code>tar -xvf test.tar.gz -C /usr</code>（-C\n代表指定解压的位置）</p></li>\n</ul>\n<h3 id=\"文件传输\">文件传输</h3>\n<ul>\n<li><code>scp [选项] 源文件 远程文件</code>（scp 即 secure\ncopy，安全复制）：用于通过 SSH\n协议进行安全的文件传输，可以实现从本地到远程主机的上传和从远程主机到本地的下载。例如：<code>scp -r my_directoryuser@remote:/home/user</code>\n，将本地目录<code>my_directory</code>上传到远程服务器\n<code>/home/user</code>目录下。<code>scp -r user@remote:/home/user/my_directory</code>，将远程服务器的<code>/home/user</code>目录下的<code>my_directory</code>目录下载到本地。需要注意的是，<code>scp</code>\n命令需要在本地和远程系统之间建立 SSH\n连接进行文件传输，因此需要确保远程服务器已经配置了 SSH\n服务，并且具有正确的权限和认证方式。</li>\n<li><code>rsync [选项] 源文件 远程文件</code> :\n可以在本地和远程系统之间高效地进行文件复制，并且能够智能地处理增量复制，节省带宽和时间。例如：<code>rsync -r my_directory user@remote:/home/user</code>，将本地目录<code>my_directory</code>上传到远程服务器<code>/home/user</code>目录下。</li>\n<li><code>ftp</code>(File Transfer\nProtocol)：提供了一种简单的方式来连接到远程 FTP\n服务器并进行文件上传、下载、删除等操作。使用之前需要先连接登录远程 FTP\n服务器，进入 FTP 命令行界面后，可以使用<code>put</code>\n命令将本地文件上传到远程主机，可以使用<code>get</code>命令将远程主机的文件下载到本地，可以使用<code>delete</code>\n命令删除远程主机的文件。这里就不进行演示了。</li>\n</ul>\n<h3 id=\"文件权限\">文件权限</h3>\n<p>操作系统中每个文件都拥有特定的权限、所属用户和所属组。权限是操作系统用来限制资源访问的机制，在\nLinux\n中权限一般分为读(readable)、写(writable)和执行(executable)，分为三组。分别对应文件的属主(owner)，属组(group)和其他用户(other)，通过这样的机制来限制哪些用户、哪些组可以对特定的文件进行什么样的操作。</p>\n<p>通过<code>ls -l</code>命令我们可以\n查看某个目录下的文件或目录的权限</p>\n<p>示例：在随意某个目录下<code>ls -l</code></p>\n<p><img\nsrc=\"https://dlink.host/wx1.sinaimg.cn/large/006V2BDqly8htd9kj4jqcj30gd06cjsj.jpg\" /></p>\n<p><img\nsrc=\"https://dlink.host/wx1.sinaimg.cn/large/006V2BDqly8htd9kjwbjxj30dl05tweo.jpg\" /></p>\n<p>下面将详细讲解文件的类型、Linux\n中权限以及文件有所有者、所在组、其它组具体是什么？</p>\n<p><strong>文件的类型：</strong></p>\n<ul>\n<li><p>d：代表目录</p></li>\n<li><p>-：代表文件</p></li>\n<li><p>l：代表软链接（可以认为是 window 中的快捷方式）</p></li>\n</ul>\n<p><strong>Linux 中权限分为以下几种：</strong></p>\n<ul>\n<li><p>r：代表权限是可读，r 也可以用数字 4 表示</p></li>\n<li><p>w：代表权限是可写，w 也可以用数字 2 表示</p></li>\n<li><p>x：代表权限是可执行，x 也可以用数字 1 表示</p></li>\n</ul>\n<p><strong>文件和目录权限的区别：</strong></p>\n<p>对文件和目录而言，读写执行表示不同的意义。</p>\n<p>对于文件：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left;\">权限名称</th>\n<th style=\"text-align: right;\">可执行操作</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left;\">r</td>\n<td style=\"text-align: right;\">可以使用 cat 查看文件的内容</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">w</td>\n<td style=\"text-align: right;\">可以修改文件的内容</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">x</td>\n<td style=\"text-align: right;\">可以将其运行为二进制文件</td>\n</tr>\n</tbody>\n</table>\n<p>对于目录：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left;\">权限名称</th>\n<th style=\"text-align: right;\">可执行操作</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left;\">r</td>\n<td style=\"text-align: right;\">可以查看目录下列表</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">w</td>\n<td style=\"text-align: right;\">可以创建和删除目录下文件</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">x</td>\n<td style=\"text-align: right;\">可以使用 cd 进入目录</td>\n</tr>\n</tbody>\n</table>\n<p>需要注意的是：<strong>超级用户可以无视普通用户的权限，即使文件目录权限是\n000，依旧可以访问。</strong></p>\n<p><strong>在 linux 中的每个用户必须属于一个组，不能独立于组外。在 linux\n中每个文件有所有者、所在组、其它组的概念。</strong></p>\n<ul>\n<li>所有者(u)：一般为文件的创建者，谁创建了该文件，就天然的成为该文件的所有者，用\nls ‐ahl 命令可以看到文件的所有者 也可以使用 chown 用户名\n文件名来修改文件的所有者 。</li>\n<li>文件所在组(g)：当某个用户创建了一个文件后，这个文件的所在组就是该用户所在的组用\nls ‐ahl命令可以看到文件的所有组也可以使用 chgrp 组名\n文件名来修改文件所在的组。</li>\n<li>其它组(o)：除开文件的所有者和所在组的用户外，系统的其它用户都是文件的其它组。</li>\n</ul>\n<p>我们再来看看如何修改文件/目录的权限。</p>\n<p><strong>修改文件/目录的权限的命令：<code>chmod</code></strong></p>\n<p>示例：修改<code>/test</code>下的 <code>aaa.txt</code>\n的权限为文件所有者有全部权限，文件所有者所在的组有读写权限，其他用户只有读的权限。</p>\n<p><code>chmod u=rwx,g=rw,o=r aaa.txt</code>或者\n<code>chmod 764 aaa.txt</code></p>\n<p><strong>补充一个比较常用的东西:</strong></p>\n<p>假如我们装了一个\nzookeeper，我们每次开机到要求其自动启动该怎么办？</p>\n<ol type=\"1\">\n<li><p>新建一个脚本 zookeeper</p></li>\n<li><p>为新建的脚本 zookeeper 添加可执行权限，命令是:chmod +x\nzookeeper</p></li>\n<li><p>把 zookeeper 这个脚本添加到开机启动项里面，命令是：chkconfig\n--add zookeeper</p></li>\n<li><p>如果想看看是否添加成功，命令是：chkconfig --list</p></li>\n</ol>\n<h3 id=\"用户管理\">用户管理</h3>\n<p>Linux\n系统是一个多用户多任务的分时操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统。</p>\n<p>用户的账号一方面可以帮助系统管理员对使用系统的用户进行跟踪，并控制他们对系统资源的访问；另一方面也可以帮助用户组织文件，并为用户提供安全性保护。</p>\n<p><strong>Linux 用户管理相关命令:</strong></p>\n<ul>\n<li><code>useradd [选项] 用户名</code>:创建用户账号。使用<code>useradd</code>指令所建立的帐号，实际上是保存在\n<code>/etc/passwd</code>文本文件中。</li>\n<li><code>userdel [选项] 用户名</code>:删除用户帐号。</li>\n<li><code>usermod [选项] 用户名</code>:修改用户账号的属性和配置比如用户名、用户\nID、家目录。</li>\n<li><code>passwd [选项] 用户名</code>:\n设置用户的认证信息，包括用户密码、密码过期时间等。。例如：<code>passwd -S 用户名</code>\n，显示用户账号密码信息。<code>passwd -d 用户名</code>:\n清除用户密码，会导致用户无法登录。<code>passwd 用户名</code>，修改用户密码，随后系统会提示输入新密码并确认密码。</li>\n<li><code>su [选项] 用户名</code>（su 即 Switch\nUser，切换用户）：在当前登录的用户和其他用户之间切换身份。</li>\n</ul>\n<h3 id=\"用户组管理\">用户组管理</h3>\n<p>每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。不同\nLinux 系统对用户组的规定有所不同，如 Linux\n下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。</p>\n<p>用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对<code>/etc/group</code>文件的更新。</p>\n<p><strong>Linux 系统用户组的管理相关命令:</strong></p>\n<ul>\n<li>groupadd [选项] 用户组 :增加一个新的用户组。</li>\n<li>groupdel 用户组:要删除一个已有的用户组。</li>\n<li>groupmod [选项] 用户组 : 修改用户组的属性。</li>\n</ul>\n<h3 id=\"系统状态\">系统状态</h3>\n<ul>\n<li><code>top [选项]</code>：用于实时查看系统的 CPU\n使用率、内存使用率、进程信息等。</li>\n<li><code>htop [选项]</code>：类似于<code>top</code>，但提供了更加交互式和友好的界面，可让用户交互式操作，支持颜色主题，可横向或纵向滚动浏览进程列表，并支持鼠标操作。</li>\n<li><code>uptime [选项]</code>：用于查看系统总共运行了多长时间、系统的平均负载等信息。</li>\n<li><code>vmstat [间隔时间] [重复次数]</code>：vmstat （Virtual Memory\nStatistics） 的含义为显示虚拟内存状态，但是它可以报告关于进程、内存、I/O\n等系统整体运行状态。</li>\n<li><code>free [选项]</code>：用于查看系统的内存使用情况，包括已用内存、可用内存、缓冲区和缓存等。</li>\n<li><code>df [选项] [文件系统]</code>：用于查看系统的磁盘空间使用情况，包括磁盘空间的总量、已使用量和可用量等，可以指定文件系统上。例如：<code>df -a</code>，查看全部文件系统。</li>\n<li><code>du [选项] [文件]</code>：用于查看指定目录或文件的磁盘空间使用情况，可以指定不同的选项来控制输出格式和单位。</li>\n<li><code>sar [选项] [时间间隔] [重复次数]</code>：用于收集、报告和分析系统的性能统计信息，包括系统的\nCPU 使用、内存使用、磁盘\nI/O、网络活动等详细信息。它的特点是可以连续对系统取样，获得大量的取样数据。取样数据和分析的结果都可以存入文件，使用它时消耗的系统资源很小。</li>\n<li><code>ps [选项]</code>：用于查看系统中的进程信息，包括进程的\nID、状态、资源使用情况等。<code>ps -ef</code>/<code>ps -aux</code>：这两个命令都是查看当前系统正在运行进程，两者的区别是展示格式不同。如果想要查看特定的进程可以使用这样的格式：<code>ps aux|grep redis</code>（查看包括\nredis 字符串的进程），也可使用 <code>pgrep redis -a</code>。</li>\n<li><code>systemctl [命令] [服务名称]</code>：用于管理系统的服务和单元，可以查看系统服务的状态、启动、停止、重启等。</li>\n</ul>\n<h3 id=\"网络通信\">网络通信</h3>\n<ul>\n<li><code>ping [选项] 目标主机</code>：测试与目标主机的网络连接。</li>\n<li><code>ifconfig</code>或\n<code>ip</code>：用于查看系统的网络接口信息，包括网络接口的 IP 地址、MAC\n地址、状态等。</li>\n<li><code>netstat [选项]</code>：用于查看系统的网络连接状态和网络统计信息，可以查看当前的网络连接情况、监听端口、网络协议等。</li>\n<li><code>ss [选项]</code>：比 netstat\n更好用，提供了更快速、更详细的网络连接信息。</li>\n</ul>\n<h3 id=\"其他\">其他</h3>\n<ul>\n<li><code>sudo + 其他命令</code>：以系统管理者的身份执行指令，也就是说，经由\nsudo 所执行的指令就好像是 root 亲自执行。</li>\n<li><code>grep 要搜索的字符串 要搜索的文件 --color</code>：搜索命令，<code>--color</code>代表高亮显示。</li>\n<li><code>kill -9 进程的pid</code>：杀死进程（-9 表示强制终止）先用 ps\n查找进程，然后用 kill 杀掉。</li>\n<li><code>shutdown</code>：<code>shutdown -h now</code>：指定现在立即关机；<code>shutdown +5 \"System will shutdown after 5 minutes\"</code>：指定\n5 分钟后关机，同时送出警告信息给登入用户。</li>\n<li><code>reboot</code>：<code>reboot</code>：重开机。<code>reboot -w</code>：做个重开机的模拟（只有纪录并不会真的重开机）。</li>\n</ul>\n<h2 id=\"linux-环境变量\">Linux 环境变量</h2>\n<p>在 Linux\n系统中，环境变量是用来定义系统运行环境的一些参数，比如每个用户不同的主目录（HOME）。</p>\n<h4 id=\"环境变量分类\">环境变量分类</h4>\n<p>按照作用域来分，环境变量可以简单的分成:</p>\n<ul>\n<li><p>用户级别环境变量 :\n<code>~/.bashrc</code>、<code>~/.bash_profile</code>。</p></li>\n<li><p>系统级别环境变量\n:<code>/etc/bashrc</code>、<code>/etc/environment</code>、<code>/etc/profile</code>、<code>/etc/profile.d</code>。</p></li>\n</ul>\n<p>上述配置文件执行先后顺序为：<code>/etc/environment</code>–&gt;\n<code>/etc/profile</code>–&gt;<code>/etc/profile.d</code>–&gt;\n<code>~/.bash_profile</code> –&gt; <code>/etc/bashrc</code>–&gt;\n<code>~/.bashrc</code></p>\n<p>如果要修改系统级别环境变量文件，需要管理员具备对该文件的写入权限。</p>\n<p>建议用户级别环境变量在\n<code>~/.bash_profile</code>中配置，系统级别环境变量在<code>/etc/profile.d</code>\n中配置。</p>\n<p>按照生命周期来分，环境变量可以简单的分成:</p>\n<ul>\n<li><p>永久的：需要用户修改相关的配置文件，变量永久生效。</p></li>\n<li><p>临时的：用户利用 export 命令，在当前终端下声明环境变量，关闭\nshell 终端失效。</p></li>\n</ul>\n<h3 id=\"读取环境变量\">读取环境变量</h3>\n<p>通过<code>export</code> 命令可以输出当前系统定义的所有环境变量。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 列出当前的环境变量值</span><br><span class=\"line\"></span><br><span class=\"line\">export -p</span><br></pre></td></tr></table></figure>\n<p>除了 <code>export</code> 命令之外，\n<code>env</code>命令也可以列出所有环境变量。</p>\n<p><code>echo</code> 命令可以输出指定环境变量的值。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 输出当前的PATH环境变量的值</span><br><span class=\"line\"></span><br><span class=\"line\">echo $PATH</span><br><span class=\"line\"></span><br><span class=\"line\"># 输出当前的HOME环境变量的值</span><br><span class=\"line\"></span><br><span class=\"line\">echo $HOME</span><br></pre></td></tr></table></figure>\n<h3 id=\"环境变量修改\">环境变量修改</h3>\n<p>通过<code>export</code>命令可以修改指定的环境变量。不过，这种方式修改环境变量仅仅对当前\nshell 终端生效，关闭 shell 终端就会失效。修改完成之后，立即生效。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export CLASSPATH=./JAVA_HOME/lib;$JAVA_HOME/jre/lib</span><br></pre></td></tr></table></figure>\n<p>通过\n<code>vim</code>命令修改环境变量配置文件。这种方式修改环境变量永久有效。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<p>如果修改的是系统级别环境变量则对所有用户生效，如果修改的是用户级别环境变量则仅对当前用户生效。</p>\n<p>修改完成之后，需要 <code>source</code> 命令让其生效或者关闭 shell\n终端重新登录。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "linux",
                "linux"
            ]
        },
        {
            "id": "http://example.com/2024/10/17/post/job/07-%E7%9D%BF%E6%99%BA%E5%B7%A5%E4%BD%9C%E4%BB%BB%E5%8A%A1%E5%B0%8F%E8%AE%B0/",
            "url": "http://example.com/2024/10/17/post/job/07-%E7%9D%BF%E6%99%BA%E5%B7%A5%E4%BD%9C%E4%BB%BB%E5%8A%A1%E5%B0%8F%E8%AE%B0/",
            "title": "07-珠啤开发任务小记",
            "date_published": "2024-10-17T03:08:47.422Z",
            "content_html": "<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"抱歉，这个密码看着不太对，请再试试。\" data-whm=\"抱歉，这个文章不能被校验，不过您还是能看看解密后的内容。\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"515e07da0af85b372495ed82bb9013af17fa0e77bae3cb897c8e26d1e55afa7d\"></script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">您好，这里需要输入密码查看。</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">",
            "tags": [
                "工作日志",
                "job"
            ]
        },
        {
            "id": "http://example.com/2024/10/17/post/job/06-%E7%8F%A0%E5%95%A4%E5%BC%80%E5%8F%91%E4%BB%BB%E5%8A%A1%E5%B0%8F%E8%AE%B0/",
            "url": "http://example.com/2024/10/17/post/job/06-%E7%8F%A0%E5%95%A4%E5%BC%80%E5%8F%91%E4%BB%BB%E5%8A%A1%E5%B0%8F%E8%AE%B0/",
            "title": "06-珠啤开发任务小记",
            "date_published": "2024-10-17T03:08:47.401Z",
            "content_html": "<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"抱歉，这个密码看着不太对，请再试试。\" data-whm=\"抱歉，这个文章不能被校验，不过您还是能看看解密后的内容。\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"a0aa1d7f68d089d67ba43944da3b3d1db8210727d7632af62fc1b7b53fe9499e\"></script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">您好，这里需要输入密码查看。</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">",
            "tags": [
                "工作日志",
                "job"
            ]
        },
        {
            "id": "http://example.com/2024/10/17/post/job/05-%E6%B7%B1%E8%83%BD%E5%BC%80%E5%8F%91%E4%BB%BB%E5%8A%A1%E5%B0%8F%E8%AE%B0/",
            "url": "http://example.com/2024/10/17/post/job/05-%E6%B7%B1%E8%83%BD%E5%BC%80%E5%8F%91%E4%BB%BB%E5%8A%A1%E5%B0%8F%E8%AE%B0/",
            "title": "05-深能开发任务小记",
            "date_published": "2024-10-17T03:08:47.330Z",
            "content_html": "<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"抱歉，这个密码看着不太对，请再试试。\" data-whm=\"抱歉，这个文章不能被校验，不过您还是能看看解密后的内容。\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"3f601c0a2230fcc31cd6d3e19a2e327a264d88e762ef214f7f02af447404c5e9\"></script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">您好，这里需要输入密码查看。</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">",
            "tags": [
                "工作日志",
                "job"
            ]
        },
        {
            "id": "http://example.com/2024/10/17/post/job/04-%E5%9B%BD%E9%99%85%E5%8C%96%E6%93%8D%E4%BD%9Ci18n/",
            "url": "http://example.com/2024/10/17/post/job/04-%E5%9B%BD%E9%99%85%E5%8C%96%E6%93%8D%E4%BD%9Ci18n/",
            "title": "04-国际化操作i18n",
            "date_published": "2024-10-17T03:08:47.326Z",
            "content_html": "<h1 id=\"vue-i18n-国际化教程\">vue i18n 国际化教程</h1>\n<h2 id=\"国际化介绍\">1、国际化介绍</h2>\n<p>对于一些跨国项目来说，国际化是尤为重要的，那么什么要国际化呢?国际化的意思就是将我们写的项目，能够根据不同国家的语言，进行翻译，进行切换，方便不同国家的客户使用</p>\n<p>基本思路如下</p>\n<p>① 定义语言包：需要几种语言展示，就定义几个语言包</p>\n<p>② 创建对象，对语言包进行整合，对象的 key\n为语言包的引用，值为语言包对象</p>\n<p>③ 创建 vue-i18n 类的对象，同时为其 messages\n属性为第②步创建的对象，为其 locale 属性赋值为第②步中语言对象对应的\nkey</p>\n<p>④ 在创建 Vue 实例对象时，挂载 vue-i18n 类的对象</p>\n<p>下面具体讲解</p>\n<h2 id=\"简单使用\">2、简单使用</h2>\n<p><strong>1、安装插件 vue-i18n</strong></p>\n<p><code>i18n</code>是<code>internationalization</code>这个单词的缩写，取了首字母<code>i</code>和结尾字母<code>n</code>，中间一用有18个字母，所以组合起来就所写成<code>i18n</code>，这是一个用于给vue国际化的插件，\n它可以轻松地将一些本地化功能集成到你的 Vue.js 应用程序中</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">css</span><br><span class=\"line\"></span><br><span class=\"line\">复制代码npm <span class=\"selector-tag\">i</span> vue-i18n</span><br></pre></td></tr></table></figure>\n<p>在 main.js 中导入并作为插件使用</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"keyword\">import</span> <span class=\"title class_\">VueI18</span>n <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-i18n&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">use</span>(<span class=\"title class_\">VueI18</span>n)</span><br></pre></td></tr></table></figure>\n<p><strong>2、创建语言包对象</strong></p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arduino复制代码<span class=\"comment\">// 1、创建中文语言包对象</span></span><br><span class=\"line\"><span class=\"type\">const</span> zh = &#123;</span><br><span class=\"line\">  username: <span class=\"string\">&#x27;用户名&#x27;</span>,</span><br><span class=\"line\">  email: <span class=\"string\">&#x27;邮箱&#x27;</span>,</span><br><span class=\"line\">  mobile: <span class=\"string\">&#x27;手机&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 2、创建英文语言包对象</span></span><br><span class=\"line\"><span class=\"type\">const</span> en = &#123;</span><br><span class=\"line\">  username: <span class=\"string\">&#x27;Username&#x27;</span>,</span><br><span class=\"line\">  email: <span class=\"string\">&#x27;Email&#x27;</span>,</span><br><span class=\"line\">  mobile: <span class=\"string\">&#x27;Mobile&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>两个第项中的键是一样的，后面在组件中要使用</p>\n<p><strong>3、组合对象</strong></p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arduino复制代码<span class=\"comment\">// 3、组合语言包对象</span></span><br><span class=\"line\"><span class=\"type\">const</span> messages = &#123;</span><br><span class=\"line\">  zh,</span><br><span class=\"line\">  en</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>4、创建 i18n 实例</strong></p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arduino复制代码<span class=\"comment\">// 4、创建 VueI18n 实例，并为 messages 和 locale 属性赋值</span></span><br><span class=\"line\"><span class=\"type\">const</span> i18n = <span class=\"keyword\">new</span> <span class=\"built_in\">VueI18n</span>(&#123;</span><br><span class=\"line\">  messages,</span><br><span class=\"line\">  locale: <span class=\"string\">&#x27;en&#x27;</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>messages 属性要设置为第3步中组合的修啊ing</li>\n<li>locale：的值为 messages 对象中的某个 key 的值，如果设置为\nen，则组件中使用 第1步中创建的 英文语言中包中的对应属性的值，如果设置为\nzh，则使用 中文语言包中的属性的只</li>\n</ul>\n<p><strong>5、挂载对象</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"comment\">// 5、挂载 i18n</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">  i18n,</span><br><span class=\"line\">  <span class=\"attr\">render</span>: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> <span class=\"title function_\">h</span>(<span class=\"title class_\">App</span>)</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p><strong>6、完整代码</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"keyword\">import</span> <span class=\"title class_\">Vue</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">VueI18</span>n <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-i18n&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">use</span>(<span class=\"title class_\">VueI18</span>n)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1、创建中文语言包对象</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> zh = &#123;</span><br><span class=\"line\">  <span class=\"attr\">username</span>: <span class=\"string\">&#x27;用户名&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">email</span>: <span class=\"string\">&#x27;邮箱&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">mobile</span>: <span class=\"string\">&#x27;手机&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 2、创建英文语言包对象</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> en = &#123;</span><br><span class=\"line\">  <span class=\"attr\">username</span>: <span class=\"string\">&#x27;Username&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">email</span>: <span class=\"string\">&#x27;Email&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">mobile</span>: <span class=\"string\">&#x27;Mobile&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 3、组合语言包对象</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> messages = &#123;</span><br><span class=\"line\">  zh,</span><br><span class=\"line\">  en</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 4、创建 VueI18n 实例，并为 messages 和 locale 属性赋值</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> i18n = <span class=\"keyword\">new</span> <span class=\"title class_\">VueI18</span>n(&#123;</span><br><span class=\"line\">  messages,</span><br><span class=\"line\">  <span class=\"attr\">locale</span>: <span class=\"string\">&#x27;en&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\">config</span>.<span class=\"property\">productionTip</span> = <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\">// 5、挂载 i18n</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">  i18n,</span><br><span class=\"line\">  <span class=\"attr\">render</span>: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> <span class=\"title function_\">h</span>(<span class=\"title class_\">App</span>)</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>7、组件中使用</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash复制代码&lt;template&gt;</span><br><span class=\"line\">  &lt;div <span class=\"built_in\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span><br><span class=\"line\">    &lt;p&gt;&#123;&#123; <span class=\"variable\">$t</span>(<span class=\"string\">&#x27;username&#x27;</span>) &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;&#123;&#123; <span class=\"variable\">$t</span>(<span class=\"string\">&#x27;email&#x27;</span>) &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;&#123;&#123; <span class=\"variable\">$t</span>(<span class=\"string\">&#x27;mobile&#x27;</span>) &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"扩展语言包对象\">3、扩展语言包对象</h2>\n<p>真实的项目中，可能很多地方都需要国际化，比如表格的表头、tab\n栏、导航菜单等，我们可以在语言包中创建多个键，分别存储这些模块的语言</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">css复制代码// <span class=\"number\">1</span>、创建中文语言包对象</span><br><span class=\"line\">const zh = &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">table</span>: &#123;</span><br><span class=\"line\">    username: <span class=\"string\">&#x27;用户名&#x27;</span>,</span><br><span class=\"line\">    email: <span class=\"string\">&#x27;邮箱&#x27;</span>,</span><br><span class=\"line\">    mobile: <span class=\"string\">&#x27;手机&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  menus: &#123;</span><br><span class=\"line\">    home: <span class=\"string\">&#x27;首页&#x27;</span>,</span><br><span class=\"line\">    download: <span class=\"string\">&#x27;下载&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  tabs: &#123;</span><br><span class=\"line\">    info: <span class=\"string\">&#x27;商品描述&#x27;</span>,</span><br><span class=\"line\">    comment: <span class=\"string\">&#x27;评价&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// <span class=\"number\">2</span>、创建英文语言包对象</span><br><span class=\"line\">const en = &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">table</span>: &#123;</span><br><span class=\"line\">    username: <span class=\"string\">&#x27;Username&#x27;</span>,</span><br><span class=\"line\">    email: <span class=\"string\">&#x27;Email&#x27;</span>,</span><br><span class=\"line\">    mobile: <span class=\"string\">&#x27;Mobile&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  menus: &#123;</span><br><span class=\"line\">    home: <span class=\"string\">&#x27;Home&#x27;</span>,</span><br><span class=\"line\">    download: <span class=\"string\">&#x27;DownLoad&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  tabs: &#123;</span><br><span class=\"line\">    info: <span class=\"string\">&#x27;Describe&#x27;</span>,</span><br><span class=\"line\">    comment: <span class=\"string\">&#x27;Comment On&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>组件中使用</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xml复制代码<span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 模拟表格中使用 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; $t(&#x27;table.username&#x27;) &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; $t(&#x27;table.email&#x27;) &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; $t(&#x27;table.mobile&#x27;) &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 模拟导航菜单中使用 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; $t(&#x27;menus.home&#x27;) &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; $t(&#x27;menus.download&#x27;) &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 模拟tabs 选项卡中使用 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; $t(&#x27;tabs.info&#x27;) &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; $t(&#x27;tabs.comment&#x27;) &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>此时，如果将 locale 的值切换为 zh</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arduino复制代码<span class=\"comment\">// 4、创建 VueI18n 实例，并为 messages 和 locale 属性赋值</span></span><br><span class=\"line\"><span class=\"type\">const</span> i18n = <span class=\"keyword\">new</span> <span class=\"built_in\">VueI18n</span>(&#123;</span><br><span class=\"line\">  messages,</span><br><span class=\"line\">  locale: <span class=\"string\">&#x27;zh&#x27;</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>实际开发中，多个组件中可能存在多个表格、导航菜单等，每个表格的表头、菜单的描述信息可能都不尽相同</p>\n<p>该如何处理呢？</p>\n<p>以表格的表头为例</p>\n<p>我们可以在语言包对象中，定义多个 table，如\nuserTable、roleTable等，每个当中存储自己的字段和对应的语言，也可以在一个\ntable 对象中，定义多个字段，把所有表格用到的表头信息全都定义在一个 table\n对象中</p>\n</blockquote>\n<h2 id=\"单独的语言包文件\">4、单独的语言包文件</h2>\n<p>语言包对象\n最后可能会比较大，属性比较多，所以最好的办法是将其定义成单独的 js\n文件，然后再进行整合</p>\n<p><strong>1、创建语言包文件</strong></p>\n<p>src 目录下新建 langurage 目录，在其中新建 zh.js 和 en.js\n文件，然后将上面的语言包代码拷贝进来，因为一会要使用语言包对象，所以要导出</p>\n<p>zh.js</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">css复制代码// <span class=\"number\">1</span>、创建中文语言包对象</span><br><span class=\"line\">export default&#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">table</span>: &#123;</span><br><span class=\"line\">      username: <span class=\"string\">&#x27;用户名&#x27;</span>,</span><br><span class=\"line\">      email: <span class=\"string\">&#x27;邮箱&#x27;</span>,</span><br><span class=\"line\">      mobile: <span class=\"string\">&#x27;手机&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    menus: &#123;</span><br><span class=\"line\">      home: <span class=\"string\">&#x27;首页&#x27;</span>,</span><br><span class=\"line\">      download: <span class=\"string\">&#x27;下载&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    tabs: &#123;</span><br><span class=\"line\">      info: <span class=\"string\">&#x27;商品描述&#x27;</span>,</span><br><span class=\"line\">      comment: <span class=\"string\">&#x27;评价&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>en.js</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">css复制代码// <span class=\"number\">2</span>、创建英文语言包对象</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">table</span>: &#123;</span><br><span class=\"line\">        username: <span class=\"string\">&#x27;Username&#x27;</span>,</span><br><span class=\"line\">        email: <span class=\"string\">&#x27;Email&#x27;</span>,</span><br><span class=\"line\">        mobile: <span class=\"string\">&#x27;Mobile&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    menus: &#123;</span><br><span class=\"line\">        home: <span class=\"string\">&#x27;Home&#x27;</span>,</span><br><span class=\"line\">        download: <span class=\"string\">&#x27;DownLoad&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    tabs: &#123;</span><br><span class=\"line\">        info: <span class=\"string\">&#x27;Describe&#x27;</span>,</span><br><span class=\"line\">        comment: <span class=\"string\">&#x27;Comment On&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>2、整合语言包文件</strong></p>\n<p>我们将整合语言包对象和创建 VueI18n 实例并配置的过程写到一个 js\n文件中，然后在 main.js 中导入</p>\n<p>这样 main.js 中代码就会简练很多，毕竟 main.js 中只是最后需要一个\nVueI18n 的实例即可![]</p>\n<p>langurage 目录中新建 index.js，代码如下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"keyword\">import</span> <span class=\"title class_\">Vue</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">VueI18</span>n <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-i18n&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 从语言包文件中导入语言包对象</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> zh <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./zh&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> en <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./en&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">use</span>(<span class=\"title class_\">VueI18</span>n)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> messages = &#123;</span><br><span class=\"line\">  zh,</span><br><span class=\"line\">  en</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> i18n = <span class=\"keyword\">new</span> <span class=\"title class_\">VueI18</span>n(&#123;</span><br><span class=\"line\">  messages,</span><br><span class=\"line\">  <span class=\"attr\">locale</span>: <span class=\"string\">&#x27;en&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> i18n</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>3、main.js 中引入</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript复制代码<span class=\"keyword\">import</span> <span class=\"title class_\">Vue</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> i18n <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./langurage&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\">config</span>.<span class=\"property\">productionTip</span> = <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\">// 5、挂载 i18n</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">  i18n,</span><br><span class=\"line\">  <span class=\"attr\">render</span>: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> <span class=\"title function_\">h</span>(<span class=\"title class_\">App</span>)</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"切换语言\">5、切换语言</h2>\n<p>当前切换语言，需要修改如下代码中的 locale 的值</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arduino复制代码<span class=\"type\">const</span> i18n = <span class=\"keyword\">new</span> <span class=\"built_in\">VueI18n</span>(&#123;</span><br><span class=\"line\">  messages,</span><br><span class=\"line\">  locale: <span class=\"string\">&#x27;en&#x27;</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>手动切换当然不行了，页面中可以提供一个按钮，点击时，动态改变这里的值</p>\n<p>通过 navigator.language\n方法可以获取浏览器当前使用的语言，基本就代表了用户所使用的语言</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arduino复制代码<span class=\"comment\">// 获取浏览器当前使用的语言，并进行处理</span></span><br><span class=\"line\"><span class=\"type\">const</span> i18n = <span class=\"keyword\">new</span> <span class=\"built_in\">VueI18n</span>(&#123;</span><br><span class=\"line\">  messages,</span><br><span class=\"line\">  locale: navigator.language <span class=\"comment\">// 获取浏览器的语言</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>组件中加入语言切换按钮</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ini复制代码    &lt;button @<span class=\"attr\">click</span>=<span class=\"string\">&quot;translate(&#x27;zh&#x27;)&quot;</span>&gt;切换为中文&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @<span class=\"attr\">click</span>=<span class=\"string\">&quot;translate(&#x27;en&#x27;)&quot;</span>&gt;切换为英文&lt;/button&gt;</span><br><span class=\"line\">javascript复制代码  methods: &#123;</span><br><span class=\"line\">    translate(lang) &#123;</span><br><span class=\"line\">      this.$<span class=\"attr\">i18n.locale</span> = lang</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n<p>这样，我们就实现了语言的切换了</p>\n<h2 id=\"动态菜单如何处理\">6、动态菜单如何处理</h2>\n<p>如下面的导航菜单是请求后台数据，然后借用 element-ui 中的 menu\n组件动态渲染的</p>\n<p>返回的菜单名称字段（authName）的值都是中文，此时该如何处理呢？</p>\n<p>很简单，语言包中定义相关数据</p>\n<p>zh.js</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arduino复制代码<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  menus: &#123;</span><br><span class=\"line\">    用户管理: <span class=\"string\">&#x27;用户管理&#x27;</span>,</span><br><span class=\"line\">    用户列表: <span class=\"string\">&#x27;用户列表&#x27;</span>,</span><br><span class=\"line\">    角色列表: <span class=\"string\">&#x27;角色列表&#x27;</span>,</span><br><span class=\"line\">    权限管理: <span class=\"string\">&#x27;权限管理&#x27;</span>,</span><br><span class=\"line\">    权限列表: <span class=\"string\">&#x27;权限列表&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>en.js</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arduino复制代码<span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  menus: &#123;</span><br><span class=\"line\">    用户管理: <span class=\"string\">&#x27;User Manager&#x27;</span>,</span><br><span class=\"line\">    用户列表: <span class=\"string\">&#x27;User List&#x27;</span>,</span><br><span class=\"line\">    角色列表: <span class=\"string\">&#x27;Role List&#x27;</span>,</span><br><span class=\"line\">    权限管理: <span class=\"string\">&#x27;Rights Manager&#x27;</span>,</span><br><span class=\"line\">    权限列表: <span class=\"string\">&#x27;Rights List&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>menu 组件渲染时，加入如下代码</p>\n<p>在 methods 中定义方法 menusTitle</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kotlin复制代码  menusTitle(item) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.$te(<span class=\"string\">&#x27;menus.&#x27;</span> + item)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.$t(<span class=\"string\">&#x27;menus.&#x27;</span> + item)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> item</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n<p>现在我们实现翻译功能</p>\n<p>头部加上一个 switch 进行语言切换</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ini复制代码&lt;el-switch</span><br><span class=\"line\">    <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;langValue&quot;</span></span><br><span class=\"line\">    :<span class=\"attr\">active-text</span>=<span class=\"string\">&quot;active_text&quot;</span></span><br><span class=\"line\">    :<span class=\"attr\">inactive-text</span>=<span class=\"string\">&quot;inactive_text&quot;</span></span><br><span class=\"line\">    @<span class=\"attr\">change</span>=<span class=\"string\">&quot;translate&quot;</span></span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n<p>data 中的数据</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">yaml复制代码</span> <span class=\"attr\">langValue:</span> <span class=\"literal\">false</span><span class=\"string\">,</span></span><br><span class=\"line\"> <span class=\"attr\">lang:</span> <span class=\"string\">&#x27;&#x27;</span><span class=\"string\">,</span></span><br><span class=\"line\"> <span class=\"attr\">active_text:</span> <span class=\"string\">&#x27;&#x27;</span><span class=\"string\">,</span></span><br><span class=\"line\"> <span class=\"attr\">inactive_text:</span> <span class=\"string\">&#x27;&#x27;</span><span class=\"string\">,</span></span><br></pre></td></tr></table></figure>\n<p>组件初始化时对上面的值进行初始化设置</p>\n<p>methods 中定义此方法，并在 created 钩子函数中调用</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ini复制代码 setSwitch() &#123;</span><br><span class=\"line\">     <span class=\"attr\">this.active_text</span> = navigator.language === <span class=\"string\">&#x27;zh&#x27;</span> ? <span class=\"string\">&#x27;英文&#x27;</span> : <span class=\"string\">&#x27;中文&#x27;</span></span><br><span class=\"line\">     <span class=\"attr\">this.inactive_text</span> = navigator.language === <span class=\"string\">&#x27;zh&#x27;</span> ? <span class=\"string\">&#x27;中文&#x27;</span> : <span class=\"string\">&#x27;英文&#x27;</span></span><br><span class=\"line\">     <span class=\"attr\">this.lang</span> = navigator.language</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n<p>switch 的 change 事件处理程序</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kotlin复制代码translate() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.lang = <span class=\"keyword\">this</span>.lang === <span class=\"string\">&#x27;zh&#x27;</span> ? <span class=\"string\">&#x27;en&#x27;</span> : <span class=\"string\">&#x27;zh&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.$i18n.locale = <span class=\"keyword\">this</span>.lang</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h2 id=\"如何调整语言设置\">7、如何调整语言设置</h2>\n<p>在浏览器的语言设置中，可以调整语言，然后刷新页面，浏览器就会采用最新的语言设置</p>\n<p>VoerkaI18n：https://zhangfisher.github.io/voerka-i18n/#/</p>\n",
            "tags": [
                "工作日志",
                "job",
                "vue.js",
                "国际化"
            ]
        }
    ]
}