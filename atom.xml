<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>CYX</title>
    <subtitle>Blog</subtitle>
    <icon>http://example.com/images/favicon.ico</icon>
    <link href="http://example.com" />
    <author>
      <name>ZoroJan</name>
    </author>
    <updated>2024-07-05T08:33:29.699Z</updated>
    <category term="鑫" />
    <category term="springboot" />
    <entry>
        <id>http://example.com/2024/07/05/post/springboot/03-Mybatis-Plus%20@SqlParser%E6%B3%A8%E8%A7%A3/</id>
        <title>03-Mybatis-Plus @SqlParser注解</title>
        <link rel="alternate" href="http://example.com/2024/07/05/post/springboot/03-Mybatis-Plus%20@SqlParser%E6%B3%A8%E8%A7%A3/"/>
        <content type="html">&lt;h1 id=&#34;mybatis-plus-sqlparser注解&#34;&gt;Mybatis-Plus &lt;span class=&#34;citation&#34;
data-cites=&#34;SqlParser注解&#34;&gt;@SqlParser注解&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;citation&#34; data-cites=&#34;SqlParser&#34;&gt;@SqlParser&lt;/span&gt;
注解在&lt;a
href=&#34;https://so.csdn.net/so/search?q=多租户&amp;amp;spm=1001.2101.3001.7020&#34;&gt;多租户&lt;/a&gt;的模式下，用来过滤的注解，在最新的
Mybatis Plus 中这个 &lt;span class=&#34;citation&#34;
data-cites=&#34;SqlParser1&#34;&gt;@SqlParser1&lt;/span&gt; 注解已经过时。&lt;/p&gt;
&lt;h4 id=&#34;那什么是多租户模式&#34;&gt;那什么是多租户模式？&lt;/h4&gt;
&lt;p&gt;MyBatis
的多租户模式是指在数据库设计和应用程序开发中，针对需要支持多个独立用户群体（如企业客户A、B、C等，每个都有各自的业务数据）的情况，通过一些特定的技术手段来处理。在这种模式下，我们通常会做以下几个步骤：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;&lt;strong&gt;数据库表设计&lt;/strong&gt;：为每个租户创建单独的数据表空间或者隔离区，比如添加一个&lt;code&gt;tenant_id&lt;/code&gt;字段用于标识租户。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mapper配置&lt;/strong&gt;：在MyBatis的mapper
XML文件中，通过&lt;code&gt;where&lt;/code&gt;条件基于&lt;code&gt;tenant_id&lt;/code&gt;动态过滤查询结果，只返回对应租户的数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;事务管理&lt;/strong&gt;：在多租户环境下，可能需要为每个租户维护单独的数据库连接或事务，避免数据交叉污染。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务层封装&lt;/strong&gt;：在业务层，使用工厂模式或者策略模式，为每个租户创建对应的Service实例，调用对应的Mapper。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全访问控制&lt;/strong&gt;：除了数据库层面，还需要在应用层对租户进行权限验证和访问控制。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;替代注解&#34;&gt;替代注解&lt;/h4&gt;
&lt;p&gt;当我们的需要过滤多租户，我们就需要用 &lt;span class=&#34;citation&#34;
data-cites=&#34;InterceptorIgnore&#34;&gt;@InterceptorIgnore&lt;/span&gt;(tenantLine =
“1”) 注解来代替。&lt;/p&gt;
&lt;p&gt;拦截忽略注解 &lt;span class=&#34;citation&#34;
data-cites=&#34;InterceptorIgnore&#34;&gt;@InterceptorIgnore&lt;/span&gt;&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 24%&#34; /&gt;
&lt;col style=&#34;width: 9%&#34; /&gt;
&lt;col style=&#34;width: 9%&#34; /&gt;
&lt;col style=&#34;width: 56%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;属性名&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;类型&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;默认值&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;tenantLine&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;String&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&#34;&#34;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;行级租户&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;dynamicTableName&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;String&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&#34;&#34;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;动态表名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;blockAttack&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;String&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&#34;&#34;&lt;/td&gt;
&lt;td
style=&#34;text-align: center;&#34;&gt;攻击SQL阻断解析器，防止全表更新与删除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;iillegeSql&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;String&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;&#34;&#34;&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;垃圾SQL拦截&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;该注解作用于 xxMapper.java 方法之上 各属性代表对应的插件
各属性不给值则默认为 false 设置为 true 忽略拦截 更多说明详见源码注释&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;citation&#34;
data-cites=&#34;SqlParser&#34;&gt;@SqlParser&lt;/span&gt;(filter = true) 与 &lt;span
class=&#34;citation&#34;
data-cites=&#34;InterceptorIgnore&#34;&gt;@InterceptorIgnore&lt;/span&gt;(tenantLine =
“1”) 等价&lt;/p&gt;
</content>
        <category term="后端" scheme="http://example.com/categories/springboot/" />
        <category term="Mybatis-Plus" scheme="http://example.com/tags/Mybatis-Plus/" />
        <updated>2024-07-05T08:33:29.699Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/07/05/post/springboot/02-String%E3%80%81Date%E3%80%81LocalDate%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</id>
        <title>02-String、Date、LocalDate之间的转换</title>
        <link rel="alternate" href="http://example.com/2024/07/05/post/springboot/02-String%E3%80%81Date%E3%80%81LocalDate%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/"/>
        <content type="html">&lt;h1
id=&#34;stringdatelocaldate之间的转换&#34;&gt;String、Date、LocalDate之间的转换&lt;/h1&gt;
&lt;h3 id=&#34;一date和string&#34;&gt;一、Date和String&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;使用SimpleDateFormat对象指定目标日期格式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;date转string&#34;&gt;1、Date转String&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//主要根据&amp;quot;yyyy-MM-dd HH:mm:ss&amp;quot;进行格式的变换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Date&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;date&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;formatter&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd HH:mm:ss&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	System.out.println(formatter.format(date));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;string转date&#34;&gt;2、String转Date&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;date&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;2023-05-31 22:41:21&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;formatter&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd HH:mm:ss&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(formatter.parse(date));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;二date和localdate&#34;&gt;二、Date和LocalDate&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;转变为中间对象Instant，都需要用到ZoneId时区&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;date转localdate&#34;&gt;1、Date转LocalDate&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;====LocalDate====&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Date&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;date&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;LocalDate&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;localDate&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(localDate);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;====LocalDateTime====&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;LocalDateTime&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;localDateTime&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; date.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(localDateTime);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;localdate转date&#34;&gt;2、LocalDate转Date&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;ZoneId&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;zone&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; ZoneId.systemDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;====LocalDate====&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;LocalDate&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;localDate&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; LocalDate.of(&lt;span class=&#34;number&#34;&gt;2023&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;31&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;Instant&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;instant&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; localDate.atStartOfDay().atZone(zone).toInstant();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(Date.from(instant));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 	&lt;span class=&#34;type&#34;&gt;LocalDate&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;date2&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; LocalDate.parse(&lt;span class=&#34;string&#34;&gt;&amp;quot;2023-05-13&amp;quot;&lt;/span&gt;, DateTimeFormatter.ISO_LOCAL_DATE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;Instant&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;instant2&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; date2.atStartOfDay().atZone(zone).toInstant();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(Date.from(instant2));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;====LocalDateTime====&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;LocalDateTime&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;localDateTime2&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; LocalDateTime.of(&lt;span class=&#34;number&#34;&gt;2023&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;Instant&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;instant3&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; localDateTime2.atZone(zone).toInstant();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(Date.from(instant3));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;三localdate和string&#34;&gt;三、LocalDate和String&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;使用DateTimeFormatter指定目标日期格式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;localdate转string&#34;&gt;1、LocalDate转String&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;====LocalDate====&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;DateTimeFormatter&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; DateTimeFormatter.ofPattern(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;LocalDate&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;localDate&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; LocalDate.of(&lt;span class=&#34;string&#34;&gt;&amp;quot;2020-2-5&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//LocalDate localDate = LocalDate.of(2020, 2, 5);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(localDate.format(df));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;====LocalDateTime====&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;DateTimeFormatter&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;df3&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; DateTimeFormatter.ofPattern(YYYY_MM_DD_HH_MM_SS_12);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;//DateTimeFormatter df3 = DateTimeFormatter.ofPattern(&amp;quot;yyyy-MM-dd HH:mm:ss&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;LocalDateTime&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;localDateTime&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; LocalDateTime.of(&lt;span class=&#34;number&#34;&gt;2020&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(df3.format(localDateTime));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;string转localdate&#34;&gt;2、String转LocalDate&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;====LocalDate====&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;dateStr&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;2023-05-31&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;DateTimeFormatter&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; DateTimeFormatter.ofPattern(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(LocalDate.parse(dateStr, df));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;====LocalDateTime====&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;timeStr&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;2023-05-31 16:41:21&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;DateTimeFormatter&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;df3&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; DateTimeFormatter.ofPattern(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd HH:mm:ss&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(LocalDateTime.parse(timeStr, df3));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;四localdate日期判断&#34;&gt;四、LocalDate日期判断&lt;/h3&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;h4 id=&#34;判断月份与时间&#34;&gt;1、判断月份与时间&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;DateTimeFormatter&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; DateTimeFormatter.ofPattern(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd HH:mm:ss&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;LocalDateTime&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; LocalDateTime.parse(TimeStr,df);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//判断是这个月的最后一天且 时间没有过中午十二点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(time.getDayOfMonth()==time.getMonth().maxLength() &amp;amp;&amp;amp; sj.getHour()&amp;lt;&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//判断日期小于24号，如果为24号，也小于下午四点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(time.getDayOfMonth()&amp;lt;&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt; || (time.getDayOfMonth()==&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt; &amp;amp;&amp;amp; time.getHour()&amp;lt;&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;设置时间&#34;&gt;2、设置时间&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//比time 多一个月，设1日  00:00:00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;LocalDateTime&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;transDate&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; time.plusMonths(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;).withDayOfMonth(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;).withHour(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;).withMinute(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;).withSecond(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="后端" scheme="http://example.com/categories/springboot/" />
        <category term="Java" scheme="http://example.com/tags/Java/" />
        <category term="数据类型" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/" />
        <updated>2024-07-05T07:17:27.134Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/07/04/post/hexo/01-Hexo%E4%B8%AD%E6%94%AF%E6%8C%81Latex%E5%85%AC%E5%BC%8F/</id>
        <title>Hexo中支持Latex公式</title>
        <link rel="alternate" href="http://example.com/2024/07/04/post/hexo/01-Hexo%E4%B8%AD%E6%94%AF%E6%8C%81Latex%E5%85%AC%E5%BC%8F/"/>
        <content type="html">&lt;h1 id=&#34;hexo中支持latex公式&#34;&gt;Hexo中支持Latex公式&lt;/h1&gt;
&lt;h2 id=&#34;关于hexo和主题&#34;&gt;关于Hexo和主题&lt;/h2&gt;
&lt;p&gt;这个问题实际&lt;strong&gt;与主题无关&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我用的是hexo和shoka截止目前的最新版本：&lt;/p&gt;
&lt;p&gt;hexo：6.3.0&lt;/p&gt;
&lt;p&gt;shoka：0.2.5&lt;/p&gt;
&lt;h3 id=&#34;让hexo支持数学公式&#34;&gt;让Hexo支持数学公式&lt;/h3&gt;
&lt;p&gt;其实要做的步骤很少：&lt;/p&gt;
&lt;p&gt;1.首先卸载hexo-math和hexo-renderer-marked。然而hexo应该是没有自带hexo-math的，所以只需要卸载第二个就行。以防万一还是可以直接执行：&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm un hexo-math&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm un hexo-renderer-marked&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;​ 2.安装hexo-renderer-pandoc渲染器&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm i hexo-renderer-pandoc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;​ 好，到此为止，需要的包就迭代好了。&lt;/p&gt;
&lt;p&gt;3.然后是配置主题配置下的mathjax设置。我用的是butterfly，那么对应路径是： _config.yml&lt;/p&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# MathJax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;mathjax:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;enable:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;per_page:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;pandoc报错&#34;&gt;Pandoc报错&lt;/h3&gt;
&lt;p&gt;理论上到这一步就可以用了对吧，一般的教程也都这样。就算再外加一步，我学习的那篇文章里提到，接下来还应该去Pandoc官网下载最新版本pandoc：&lt;a
href=&#34;https://pandoc.org/index.html&#34;&gt;Pandoc - About pandoc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于pandoc下载安装教程随便查一下就有，这里就不说明了。然后再在环境配置配置了pandoc路径，直到你可以在cmd输入以下命令查看它的版本：&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pandoc -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我的输出：&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pandoc 2.19.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Compiled with pandoc-types 1.22.2.1, texmath 0.12.5.2, skylighting 0.13,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;citeproc 0.8.0.1, ipynb 0.2, hslua 2.2.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Scripting engine: Lua 5.4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;​ 有的朋友可能到这一步就发现不对了，不要慌，接下来才是重点。&lt;/p&gt;
&lt;h3 id=&#34;注意都有可能出现的错误&#34;&gt;注意：都有可能出现的错误&lt;/h3&gt;
&lt;p&gt;先回到hexo目录，执行hexo -s,如果你没有出现这个报错：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;&lt;strong&gt;pandoc exited with code 9: pandoc: Unknown
extension: smart&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;找到了这篇文章：&lt;a
href=&#34;https://www.cnblogs.com/diralpo/p/12542450.html&#34;&gt;配置hexo时遇到的问题
- diralpo - 博客园 (cnblogs.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;从这篇文章得知，导致该报错的原因是pandoc版本过低
，而且还不是一般原因引起的版本过低，因为前面我们已经安装了最新版本的pandoc。但是最新版本的没起作用。于是我打开了everything查找电脑上存在的pandoc。然后发现位于Anaconda，真正问题也出在这儿。&lt;/p&gt;
&lt;p&gt;是因为Anaconda安装的pandoc版本过低，而且hexo默认使用的是Anaconda的pandoc。&lt;/p&gt;
&lt;p&gt;不信的话你去找找，那个pandoc居然是2017年的。在某一篇文章得知，pandoc版本应该在2.0以上，但那个pandoc好像是1.9。那接下来的就简单了，直接把新下载的pandoc.exe替换Anaconda里的pandoc.exe。&lt;/p&gt;
&lt;p&gt;可以用everything工具查询pandoc.exe将新安装好替换掉Anaconda里的pandoc.exe。&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\006V2BDqly8hrbpura5igj30kb03jwf8.jpg&#34;
alt=&#34;image-20240704084915745&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;image-20240704084915745&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\006V2BDqly8hrbptog7pfj30ma0bmjtp.jpg&#34;
alt=&#34;alt&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;alt&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;然后你在回去hexo -s，就没问题了。&lt;/p&gt;
&lt;h3 id=&#34;换行问题&#34;&gt;换行问题&lt;/h3&gt;
&lt;p&gt;​
其实做到上一步，换行问题也已经随之解决了。不过这里还是提一下关于这个换行。&lt;/p&gt;
&lt;p&gt;首先，想直接通过 ，end这种写法是做不到换行的，我最开始就是纠结于这个，然而这写法本来也不规范，例如：A
  B
是不能达到换行的。但是在加上规范的begin和end就可以了。其次，换行公式应该写成行间公式而非行内公式。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$A \\ B$  错误写法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;\begin&amp;#123;split&amp;#125; A\\B \end&amp;#123;split&amp;#125; 写在行内错误，写在行间正确。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="博客" scheme="http://example.com/categories/hexo/" />
        <category term="hexo" scheme="http://example.com/tags/hexo/" />
        <category term="Latex" scheme="http://example.com/tags/Latex/" />
        <updated>2024-07-04T00:40:36.865Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/07/03/post/biao/cryptology/Exercise%202/</id>
        <title>Exercise 2</title>
        <link rel="alternate" href="http://example.com/2024/07/03/post/biao/cryptology/Exercise%202/"/>
        <content type="html">&lt;h1 id=&#34;exercise-2&#34;&gt;Exercise 2&lt;/h1&gt;
&lt;h4 id=&#34;section&#34;&gt;2.1&lt;/h4&gt;
&lt;p&gt; Let &lt;span class=&#34;math inline&#34;&gt;\(f(x)=(x-a_1)(x-a_2)(x-a_3)\)&lt;/span&gt;
be a monic cubic polynomial with roots &lt;span class=&#34;math inline&#34;&gt;\(a_1,
a_2, a_3\)&lt;/span&gt;, then the constant term of &lt;span
class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; is &lt;span
class=&#34;math inline&#34;&gt;\(-a_1a_2a_3\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt; Let &lt;span class=&#34;math inline&#34;&gt;\(E\)&lt;/span&gt; be an elliptic curve
defined by &lt;span class=&#34;math inline&#34;&gt;\(y^2=x^3+Ax+B\)&lt;/span&gt;. Let &lt;span
class=&#34;math inline&#34;&gt;\(P_1=(x_1,y_1)\)&lt;/span&gt; and &lt;span
class=&#34;math inline&#34;&gt;\(P_2=(x_2,y_2)\)&lt;/span&gt; be points on &lt;span
class=&#34;math inline&#34;&gt;\(E\)&lt;/span&gt; with &lt;span
class=&#34;math inline&#34;&gt;\(P_1,P_2\neq \infty\)&lt;/span&gt; and define &lt;span
class=&#34;math inline&#34;&gt;\(P_1+P_2=P_3=(x_3,y_3)\)&lt;/span&gt;. Define a
polynomial &lt;span class=&#34;math inline&#34;&gt;\(F(x,y)=x^3+Ax+B-y^2=0\)&lt;/span&gt;
based on the equation of &lt;span class=&#34;math inline&#34;&gt;\(E\)&lt;/span&gt;. Let the
line through &lt;span class=&#34;math inline&#34;&gt;\(P_1\)&lt;/span&gt; and &lt;span
class=&#34;math inline&#34;&gt;\(P_2\)&lt;/span&gt; is &lt;span
class=&#34;math inline&#34;&gt;\(y=l(x)=m(x-x_1)+y_1\)&lt;/span&gt;, where &lt;span
class=&#34;math inline&#34;&gt;\(m=(y_2-y_1)/(x_2-x_1)\)&lt;/span&gt;. Then we have &lt;span
class=&#34;math display&#34;&gt;\[
F(x,y)=F\left(x,l(x)\right)=x^3+Ax+B-(mx+y_1-mx_1)^2=(x-x_1)(x-x_2)(x-x_3).
\]&lt;/span&gt; Thus, &lt;span
class=&#34;math display&#34;&gt;\[x_3=\frac{(x_1y_2-x_2y_1)^2-B(x_1-x_2)^2}{x_1x_2(x_1-x_2)^2},\quad
y_3=m(x_1-x_3)-y_1.\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt; Direct calculations can prove that &lt;span
class=&#34;math inline&#34;&gt;\(x_3=m^2-x_1-x_2\)&lt;/span&gt;.&lt;/p&gt;
&lt;h4 id=&#34;section-1&#34;&gt;2.2&lt;/h4&gt;
&lt;p&gt;Let &lt;span class=&#34;math inline&#34;&gt;\(P_1=(3,5)\)&lt;/span&gt;, then &lt;span
class=&#34;math inline&#34;&gt;\(2P_1=\left(129/100,-383/1000\right)\)&lt;/span&gt;.&lt;/p&gt;
&lt;h4 id=&#34;section-2&#34;&gt;2.3&lt;/h4&gt;
&lt;p&gt; &lt;span class=&#34;math inline&#34;&gt;\(P+Q=(-4,-3) \text{ and }
(P+Q)+R=(72,611).\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;span class=&#34;math inline&#34;&gt;\(Q+R=(218/49, -4353/343) \text{ and }
P+(Q+R)=(72,611).\)&lt;/span&gt; We have &lt;span
class=&#34;math inline&#34;&gt;\((P+Q)+R=P+(Q+R).\)&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;section-3&#34;&gt;2.4&lt;/h4&gt;
&lt;p&gt; &lt;span class=&#34;math inline&#34;&gt;\(P+Q=(-6,5).\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; We can calculate that &lt;span
class=&#34;math inline&#34;&gt;\(2P=(929/16,28175/64),\)&lt;/span&gt; then &lt;span
class=&#34;math inline&#34;&gt;\(2P\)&lt;/span&gt; on &lt;span
class=&#34;math inline&#34;&gt;\(E\)&lt;/span&gt; mod 5 is &lt;span
class=&#34;math inline&#34;&gt;\((4,0).\)&lt;/span&gt; Similarly, we have &lt;span
class=&#34;math inline&#34;&gt;\(P+Q=(-6,5),\)&lt;/span&gt; then &lt;span
class=&#34;math inline&#34;&gt;\(P+Q\)&lt;/span&gt; on &lt;span
class=&#34;math inline&#34;&gt;\(E\)&lt;/span&gt; mod 5 is also &lt;span
class=&#34;math inline&#34;&gt;\((4,0).\)&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;section-4&#34;&gt;2.5&lt;/h4&gt;
&lt;p&gt;The point &lt;span class=&#34;math inline&#34;&gt;\((x,0)\)&lt;/span&gt; is nonsingular
if and only if &lt;span class=&#34;math inline&#34;&gt;\(\partial f/\partial
x=3x^2+A\neq 0.\)&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;section-5&#34;&gt;2.6&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(P+Q+R=\infty \Longleftrightarrow P+Q=-R
\Longleftrightarrow P, Q, R\)&lt;/span&gt; are collinear.&lt;/p&gt;
&lt;h4 id=&#34;section-6&#34;&gt;2.7&lt;/h4&gt;
&lt;p&gt;The point &lt;span class=&#34;math inline&#34;&gt;\((0,c)\)&lt;/span&gt; is the identity
for the group law on &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt;, the
addition law is &lt;span class=&#34;math display&#34;&gt;\[
(u_1,v_1)+(u_2,v_2)=\left(\frac{u_1v_2+u_2v_1}{c(1+du_1u_2v_1v_2)},\frac{v_1v_2-u_1u_2}{c(1-du_1u_2v_1v_2)}\right).
\]&lt;/span&gt; Since &lt;span class=&#34;math inline&#34;&gt;\((c,0)+(c,0)=(0,-c)\)&lt;/span&gt;
and &lt;span class=&#34;math inline&#34;&gt;\((0,-c)+(0,-c)=(0,c)\)&lt;/span&gt;, 4 is the
smallest positive integer such that &lt;span
class=&#34;math inline&#34;&gt;\(n(c,0)=\infty\)&lt;/span&gt;, thus the point &lt;span
class=&#34;math inline&#34;&gt;\((c,0)\)&lt;/span&gt; has order 4.&lt;/p&gt;
&lt;h4 id=&#34;section-7&#34;&gt;2.8&lt;/h4&gt;
Let &lt;span
class=&#34;math inline&#34;&gt;\(k=k_0+2k_1+4k_2+\cdots+2^{n}a_{n}\)&lt;/span&gt; with
&lt;span class=&#34;math inline&#34;&gt;\(k_i\in\{0,1\}(i=0,1,\cdots,n).\)&lt;/span&gt;\
When &lt;span class=&#34;math inline&#34;&gt;\(n=0\)&lt;/span&gt;,that is &lt;span
class=&#34;math inline&#34;&gt;\(k=k_0\)&lt;/span&gt;, it is obvious. Suppose the
conclusion holds for &lt;span class=&#34;math inline&#34;&gt;\(n={\ell-1}\)&lt;/span&gt;,
let&#39;s show that the conclusion is also true for &lt;span
class=&#34;math inline&#34;&gt;\(n=\ell\)&lt;/span&gt;.
&lt;p&gt;We are done.&lt;/p&gt;
&lt;h4 id=&#34;section-8&#34;&gt;2.9&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(E\)&lt;/span&gt; is an elliptic curve defined
by &lt;span
class=&#34;math inline&#34;&gt;\(y^2+a_1xy+a_3y=x^3+a_2x^2+a_4x+a_6\)&lt;/span&gt;, the
vertical line through &lt;span class=&#34;math inline&#34;&gt;\(P=(x_0,y_0)\)&lt;/span&gt;
is &lt;span class=&#34;math inline&#34;&gt;\(x=x_0\)&lt;/span&gt;. The line and curve
intersect at &lt;span class=&#34;math inline&#34;&gt;\(P=(x_0,y_0)\)&lt;/span&gt; and &lt;span
class=&#34;math inline&#34;&gt;\(-P=(x_0,y_1)\)&lt;/span&gt;, substituting &lt;span
class=&#34;math inline&#34;&gt;\(x=x_0\)&lt;/span&gt; into the equation of elliptic
curve. We have &lt;span class=&#34;math inline&#34;&gt;\(y_0+y_1=-a_1x_0-a_3\)&lt;/span&gt;,
thus &lt;span class=&#34;math inline&#34;&gt;\(-P=(x_0,-a_1x_0-a_3-y_0)\)&lt;/span&gt;.&lt;/p&gt;
&lt;h4 id=&#34;section-9&#34;&gt;2.10&lt;/h4&gt;
&lt;p&gt;It is obvious that &lt;span class=&#34;math inline&#34;&gt;\((x,y,z), (-x,-y,-z)\in
\mathbf{R}^3\)&lt;/span&gt; map into &lt;span class=&#34;math inline&#34;&gt;\((x:y:z)\in
\mathbf{P^2_R}\)&lt;/span&gt;.&lt;/p&gt;
&lt;h4 id=&#34;section-10&#34;&gt;2.11&lt;/h4&gt;
&lt;p&gt; If the line &lt;span class=&#34;math inline&#34;&gt;\(a_1x+b_1y+c_1z=0\)&lt;/span&gt; is
parallel with the line &lt;span
class=&#34;math inline&#34;&gt;\(a_2x+b_2y+c_2z=0\)&lt;/span&gt;, then they intersect at
point &lt;span class=&#34;math inline&#34;&gt;\((b_1:-a_1:0)=(b_2:-a_2:0)\)&lt;/span&gt;.
Otherwise, they intersect at point &lt;span
class=&#34;math inline&#34;&gt;\((b_2c_1-b_1c_2:a_1c_2-a_2c_1:a_2b_1-a_1b_2)\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt; Let &lt;span class=&#34;math inline&#34;&gt;\(P_1, P_2\)&lt;/span&gt; be two distinct
points on &lt;span class=&#34;math inline&#34;&gt;\(P(K)\)&lt;/span&gt; and &lt;span
class=&#34;math inline&#34;&gt;\(u,v\)&lt;/span&gt; be representative vectors. Then &lt;span
class=&#34;math inline&#34;&gt;\(u,v\)&lt;/span&gt; are linearly independent for
otherwise &lt;span class=&#34;math inline&#34;&gt;\(u=\lambda v\)&lt;/span&gt; and &lt;span
class=&#34;math inline&#34;&gt;\(P_1=P_2\)&lt;/span&gt;.\ Let &lt;span
class=&#34;math inline&#34;&gt;\(U\in K\)&lt;/span&gt; be the 2-dimensional vector space
spanned by &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; and &lt;span
class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt;, then &lt;span
class=&#34;math inline&#34;&gt;\(P(U)\in P(K)\)&lt;/span&gt; is a line containing &lt;span
class=&#34;math inline&#34;&gt;\(P_1\)&lt;/span&gt; and &lt;span
class=&#34;math inline&#34;&gt;\(P_2\)&lt;/span&gt;.\ Suppose &lt;span
class=&#34;math inline&#34;&gt;\(P(U^{\prime})\)&lt;/span&gt; is another such line
containing &lt;span class=&#34;math inline&#34;&gt;\(P_1\)&lt;/span&gt; and &lt;span
class=&#34;math inline&#34;&gt;\(P_2\)&lt;/span&gt;, then &lt;span
class=&#34;math inline&#34;&gt;\(u,v\in U^{\prime}\)&lt;/span&gt; and so the space
spanned by &lt;span class=&#34;math inline&#34;&gt;\(u,v\)&lt;/span&gt; (namely &lt;span
class=&#34;math inline&#34;&gt;\(U\)&lt;/span&gt;) is the subspace of &lt;span
class=&#34;math inline&#34;&gt;\(U^{\prime}\)&lt;/span&gt;. But &lt;span
class=&#34;math inline&#34;&gt;\(U\)&lt;/span&gt; and &lt;span
class=&#34;math inline&#34;&gt;\(U^{\prime}\)&lt;/span&gt; are 2-dimensional so &lt;span
class=&#34;math inline&#34;&gt;\(U=U^{\prime}\)&lt;/span&gt; and the line is thus
unique.&lt;/p&gt;
&lt;h4 id=&#34;section-11&#34;&gt;2.12&lt;/h4&gt;
&lt;p&gt;Since &lt;span class=&#34;math inline&#34;&gt;\((a,b,c)M=(a,b,c)
\left(
\begin{array}{c c}
    a_1  &amp;amp; b_1\\
    a_2  &amp;amp; b_2\\
    a_3  &amp;amp; b_3
\end{array}
\right)=\left(aa_1+ba_2+ca_3,ab_1+bb_2+cb_3\right)=(0,0)\)&lt;/span&gt;, then
&lt;span
class=&#34;math inline&#34;&gt;\(ax+by+cz=a(a_1u+b_1v)+b(a_2u+b_2v)+c(a_3u+b_3v)=(aa_1+ba_2+ca_3)u+(ab_1+bb_2+cb_3)v=0\)&lt;/span&gt;.&lt;/p&gt;
&lt;h4 id=&#34;section-12&#34;&gt;2.13&lt;/h4&gt;
&lt;p&gt; Legendre equation is &lt;span
class=&#34;math inline&#34;&gt;\(y^2=x(x-1)(x-\lambda)=y^2=x^3-(\lambda+1)x^2+\lambda
x\)&lt;/span&gt;, where &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
    b_2&amp;amp;=a^2_1+4a_2=-4(\lambda+1),\\
    b_4&amp;amp;=2a_4+a_1a_3=2\lambda,\\
    b_6&amp;amp;=a^2_3+4a_6=0,\\
    b_8&amp;amp;=a^2_1a_6+4a_2a_6-a_1a_3a_4+a_2a^2_3-a^2_4=-\lambda^2,\\
    c_4&amp;amp;=b^2_2-24b_4=16(\lambda+1)^2-48\lambda=2^4(\lambda^2-\lambda+1),\\
    \Delta&amp;amp;=-b^2_2b_8-8b^3_4-27b^2_6+9b_2b_4b_6=2^4\lambda^2(\lambda+1)^2-2^6\lambda^3=2^4\lambda^2(\lambda-1)^2.
\end{aligned}
\]&lt;/span&gt; Thus, the &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;-invariant is
&lt;span class=&#34;math display&#34;&gt;\[
j=\frac{c^3_4}{\Delta}=2^8\frac{(\lambda^2-\lambda+1)^3}{\lambda^2(\lambda-1)^2}.
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; Directly calculate.&lt;/p&gt;
&lt;p&gt; Calculated directly from (a).&lt;/p&gt;
&lt;h4 id=&#34;section-13&#34;&gt;2.14&lt;/h4&gt;
&lt;p&gt; Let &lt;span class=&#34;math inline&#34;&gt;\(u=1+t, v=mt\)&lt;/span&gt; for some &lt;span
class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;, then &lt;span
class=&#34;math inline&#34;&gt;\(u^2-v^2=(1+t)^2-(mt)^2=(1-m^2)t^2+2t=0\)&lt;/span&gt;.
Discarding the solution &lt;span class=&#34;math inline&#34;&gt;\(t=0\)&lt;/span&gt;, we
obtain &lt;span class=&#34;math inline&#34;&gt;\(t=2/(m^2-1)\)&lt;/span&gt;, hence &lt;span
class=&#34;math display&#34;&gt;\[
u=1+t=\frac{m^2+1}{m^2-1},\quad v=mt=\frac{2m}{m^2-1}.
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; Let &lt;span class=&#34;math inline&#34;&gt;\(w=0\)&lt;/span&gt;, then &lt;span
class=&#34;math inline&#34;&gt;\(u^2-v^2=w^2=0\)&lt;/span&gt;, hence &lt;span
class=&#34;math inline&#34;&gt;\(u=\pm v\)&lt;/span&gt;. Thus, the projective curve has
two point at infinity, &lt;span class=&#34;math inline&#34;&gt;\((1:1:0)\)&lt;/span&gt; and
&lt;span class=&#34;math inline&#34;&gt;\((1:-1:0)\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt; Since the parameterization obtained in (a) can be written in
projective coordinates as &lt;span
class=&#34;math inline&#34;&gt;\((u:v:w)=(m^2+1:2m:m^2-1)\)&lt;/span&gt;, then the values
&lt;span class=&#34;math inline&#34;&gt;\(m=\pm 1\)&lt;/span&gt; correspond to points &lt;span
class=&#34;math inline&#34;&gt;\((1:\pm 1:0)\)&lt;/span&gt;, that is, correspond to the
points at infinity. In the graph, we can find that &lt;span
class=&#34;math inline&#34;&gt;\(u=\pm v\)&lt;/span&gt; is asymptote to hyperbola &lt;span
class=&#34;math inline&#34;&gt;\(u^2-v^2=1\)&lt;/span&gt;, they intersect at
infinity.&lt;/p&gt;
&lt;h4 id=&#34;section-14&#34;&gt;2.15&lt;/h4&gt;
&lt;p&gt; Let &lt;span class=&#34;math inline&#34;&gt;\(L\)&lt;/span&gt; be the line through &lt;span
class=&#34;math inline&#34;&gt;\((u_0,0,0)\)&lt;/span&gt; with slope &lt;span
class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;: &lt;span class=&#34;math display&#34;&gt;\[
u=u_0+t,\qquad v=mt.
\]&lt;/span&gt; This yields &lt;span
class=&#34;math inline&#34;&gt;\(a(u_0+t)^2+bm^2t^2=e\)&lt;/span&gt;, which yields &lt;span
class=&#34;math inline&#34;&gt;\((a+bm^2)t^2+2au_0t=0\)&lt;/span&gt;. Discarding the
solution &lt;span class=&#34;math inline&#34;&gt;\(t=0\)&lt;/span&gt;, we obtain &lt;span
class=&#34;math inline&#34;&gt;\(t=-2au_0/(a+bm^2)\)&lt;/span&gt;. Substitute the
expression just obtained for &lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; to
obtain &lt;span class=&#34;math display&#34;&gt;\[
dw^2=f-(\frac{bu_0m^2-au_0}{a+bm^2})^2.
\]&lt;/span&gt; This may be rewritten as &lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
    (a+bm^2)^2w^2&amp;amp;=\frac{(a+bm^2)^2}{d}f-\frac{c(au_0-bu_0m^2)^2}{d}\\
    &amp;amp;=(\frac{b^2f}{d}-\frac{b^2u_0^2c}{d})m^4+\cdots
\end{aligned}
\]&lt;/span&gt; Let &lt;span class=&#34;math inline&#34;&gt;\(r=(a+bm^2)w\)&lt;/span&gt;, then we
obtain &lt;span class=&#34;math inline&#34;&gt;\(r^2=2ab(f+u_0^2c)/d
m^2+k_2m+k_3\)&lt;/span&gt; for some &lt;span
class=&#34;math inline&#34;&gt;\(k_2,k_3\)&lt;/span&gt;, which has the form
&#34;square=degree2 polynomial in &lt;span
class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;&#34;.&lt;/p&gt;
&lt;p&gt; The Jacobian matrix &lt;span class=&#34;math inline&#34;&gt;\(\left(
\begin{array}{c c c}
    F_u &amp;amp; F_v &amp;amp; F_w\\
    G_u &amp;amp; G_v &amp;amp; G_w
\end{array}
\right)_{(u_0,0,0)}=
\left(
\begin{array}{c c c}
    2au_0 &amp;amp; 0 &amp;amp; 0\\
    2cu_0 &amp;amp; 0 &amp;amp; 0
\end{array}
\right)\)&lt;/span&gt;, hence the Jacobian matrix at &lt;span
class=&#34;math inline&#34;&gt;\((u_0,0,0)\)&lt;/span&gt; has rank 1. Since the rank is
less than 2, this means that the point is a singular point.&lt;/p&gt;
&lt;h4 id=&#34;section-15&#34;&gt;2.16&lt;/h4&gt;
&lt;p&gt;Let &lt;span class=&#34;math display&#34;&gt;\[
x_1=\frac{12d}{x+y}\qquad\text{and}\qquad y_1=36d\frac{x-y}{x+y}.
\]&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;section-16&#34;&gt;2.17&lt;/h4&gt;
&lt;p&gt; &lt;span
class=&#34;math inline&#34;&gt;\(\alpha(P_1+P_2)=-(P_1+P_2)=(-P_1)+(-P_2)=\alpha(P_1)+\alpha(P_2).\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; The map is clearly bijective and homomorphic by direct calculation.\
We can also show that the map is a isogeny, then it is homorphic.&lt;/p&gt;
&lt;p&gt; It is similar as (b).&lt;/p&gt;
&lt;h4 id=&#34;section-17&#34;&gt;2.18&lt;/h4&gt;
&lt;p&gt; If &lt;span class=&#34;math inline&#34;&gt;\(a_2=a_4=0\)&lt;/span&gt;, then the equation
of elliptic curve is &lt;span
class=&#34;math inline&#34;&gt;\(f=y^2-x^3-a_6=0\)&lt;/span&gt;. We obtain &lt;span
class=&#34;math inline&#34;&gt;\(\partial f/\partial y=2y, \partial f/\partial
x=-3x^2\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\partial f/\partial y,
\partial f/\partial x\)&lt;/span&gt; vanish at &lt;span
class=&#34;math inline&#34;&gt;\(P\in E[2]\)&lt;/span&gt;, which is not allowed.&lt;/p&gt;
&lt;p&gt; The change of variables &lt;span
class=&#34;math inline&#34;&gt;\(x=x_1+(a_4/a_2)\)&lt;/span&gt; yields the equation &lt;span
class=&#34;math display&#34;&gt;\[y_1^2=\left(x_1+\frac{a_4}{a_2}\right)^3+a_2\left(x_1+\frac{a_4}{a_2}\right)^2+a_4\left(x_1+\frac{a_4}{a_2}\right)+a_6.\]&lt;/span&gt;
The coefficient of &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; is &lt;span
class=&#34;math inline&#34;&gt;\(3a^2_4/a^2_2+3a_4=0\)&lt;/span&gt;, hence the equation
has the form &lt;span
class=&#34;math inline&#34;&gt;\(y^2_1=x^3_1+a_2^{\prime}x^2_1+a_6^{\prime}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt; The &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;-invariant of elliptic
curve &lt;span class=&#34;math inline&#34;&gt;\(y^2=x^3+a_2x^2+a_6\)&lt;/span&gt; is &lt;span
class=&#34;math display&#34;&gt;\[
j=-\frac{a^3_2}{a_6}.
\]&lt;/span&gt; If &lt;span
class=&#34;math inline&#34;&gt;\(-a^3_2/a_6=-(a^{\prime}_2)^3/a^{\prime}_6\)&lt;/span&gt;,
then &lt;span
class=&#34;math inline&#34;&gt;\((a^{\prime}_2)^3/a^3_2=a^{\prime}_6/a_6\)&lt;/span&gt;,
hence there exists &lt;span class=&#34;math inline&#34;&gt;\(\mu\in \bar{K}^*\)&lt;/span&gt;
such that &lt;span class=&#34;math inline&#34;&gt;\(a_2^{\prime}=\mu^2a_2\)&lt;/span&gt; and
&lt;span class=&#34;math inline&#34;&gt;\(a_6^{\prime}=\mu^6a_6\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; If &lt;span class=&#34;math inline&#34;&gt;\(j=0\)&lt;/span&gt;, we use the curve &lt;span
class=&#34;math inline&#34;&gt;\(E:y^2=x^3+x\)&lt;/span&gt;. Otherwise, we consider the
curve &lt;span class=&#34;math display&#34;&gt;\[
y^2+xy=x^3-\frac{1}{j_0}.
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; Let elliptic curve &lt;span class=&#34;math inline&#34;&gt;\(E\)&lt;/span&gt; and &lt;span
class=&#34;math inline&#34;&gt;\(E^{\prime}\)&lt;/span&gt; have the same &lt;span
class=&#34;math inline&#34;&gt;\(j-\)&lt;/span&gt; invariant. Consider the following two
cases:&lt;/p&gt;
&lt;p&gt;Case I. &lt;span class=&#34;math inline&#34;&gt;\(j(E)\neq0\)&lt;/span&gt;. In this case
&lt;span class=&#34;math inline&#34;&gt;\(E\)&lt;/span&gt; and &lt;span
class=&#34;math inline&#34;&gt;\(E^{\prime}\)&lt;/span&gt; have Weierstrass equations of
the form &lt;span class=&#34;math display&#34;&gt;\[
y^2=x^3+a_2x^2+a_6.
\]&lt;/span&gt; The only substitutions preserving this type of equation are
&lt;span class=&#34;math display&#34;&gt;\[
x=u^2x^\prime \qquad \text{and} \qquad y=u^3y^{\prime}.
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Case II. &lt;span class=&#34;math inline&#34;&gt;\(j(E)=0\)&lt;/span&gt;. In this case
&lt;span class=&#34;math inline&#34;&gt;\(E\)&lt;/span&gt; and &lt;span
class=&#34;math inline&#34;&gt;\(E^{\prime}\)&lt;/span&gt; have Weierstrass equations of
the form &lt;span class=&#34;math display&#34;&gt;\[
y^2=x^3+a_4x+a_6.
\]&lt;/span&gt; The substitutions preserving this form look like &lt;span
class=&#34;math display&#34;&gt;\[
x=u^2x^{\prime}+r \qquad \text{and} \qquad y=u^3y^{\prime}.
\]&lt;/span&gt; An isomorphism from &lt;span class=&#34;math inline&#34;&gt;\(E\)&lt;/span&gt; to
&lt;span class=&#34;math inline&#34;&gt;\(E^{\prime}\)&lt;/span&gt; is obtained by choosing
&lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; and &lt;span
class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; to satisfy &lt;span
class=&#34;math display&#34;&gt;\[
u^4=a_4^{\prime} \qquad \text{and} \qquad
r^3+a_4r+a_6-u^6a_6^{\prime}=0.
\]&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;section-18&#34;&gt;2.19&lt;/h4&gt;
&lt;p&gt; Since &lt;span class=&#34;math inline&#34;&gt;\((x,y)\)&lt;/span&gt; and &lt;span
class=&#34;math inline&#34;&gt;\(\alpha(x,y)\)&lt;/span&gt; lie on &lt;span
class=&#34;math inline&#34;&gt;\(E\)&lt;/span&gt;, then &lt;span class=&#34;math display&#34;&gt;\[
\frac{(x^3+Ax+B)s(x)^2}{t(x)^2}=\frac{p(x)^3+Ap(x)q(x)^2+Bq(x)^3}{q(x)^3}.
\]&lt;/span&gt; Let &lt;span
class=&#34;math inline&#34;&gt;\(u(x)=p(x)^3+Ap(x)q(x)^2+Bq(x)^3\)&lt;/span&gt;, if &lt;span
class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; and &lt;span
class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; have common root, then &lt;span
class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; and &lt;span
class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; have common root, which is not
allowed.&lt;/p&gt;
&lt;p&gt; From (a), we obtain &lt;span class=&#34;math display&#34;&gt;\[
(x^3+Ax+B)s(x)^2q(x)^3=u(x)t(x)^2.
\]&lt;/span&gt; Since &lt;span class=&#34;math inline&#34;&gt;\(t(x_0)=0\)&lt;/span&gt;, so the
multiplicity of &lt;span class=&#34;math inline&#34;&gt;\(x_0\)&lt;/span&gt; over &lt;span
class=&#34;math inline&#34;&gt;\(u(x)t(x)^2\)&lt;/span&gt; at least 2. Notice that &lt;span
class=&#34;math inline&#34;&gt;\(x^3+Ax+B\)&lt;/span&gt; has no multiple roots and &lt;span
class=&#34;math inline&#34;&gt;\(s(x_0)\neq 0\)&lt;/span&gt;, hence &lt;span
class=&#34;math inline&#34;&gt;\(x_0\)&lt;/span&gt; is a root of &lt;span
class=&#34;math inline&#34;&gt;\(q(x)\)&lt;/span&gt;, that is &lt;span
class=&#34;math inline&#34;&gt;\(q(x_0)=0\)&lt;/span&gt;.&lt;/p&gt;
&lt;h4 id=&#34;section-19&#34;&gt;2.20&lt;/h4&gt;
&lt;p&gt;Let &lt;span class=&#34;math inline&#34;&gt;\(f(x,y)=x^3+ax^2-y^2=0\)&lt;/span&gt;
describe a curve &lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt; in the affine
plane and let &lt;span class=&#34;math display&#34;&gt;\[
x=t,\qquad y=mt
\]&lt;/span&gt; be a line &lt;span class=&#34;math inline&#34;&gt;\(L\)&lt;/span&gt; written in
terms of the parameter &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;. Let &lt;span
class=&#34;math inline&#34;&gt;\(\tilde{f}(t)=f(t,mt)=t^3+(a-m^2)t^2\)&lt;/span&gt; and
&lt;span class=&#34;math inline&#34;&gt;\(t=0\)&lt;/span&gt; correspond to point &lt;span
class=&#34;math inline&#34;&gt;\((0,0)\)&lt;/span&gt;, thus 2 is the highest power of
&lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; that divides &lt;span
class=&#34;math inline&#34;&gt;\(\tilde{f}(t)\)&lt;/span&gt;, hence &lt;span
class=&#34;math inline&#34;&gt;\(L\)&lt;/span&gt; always intersects the curve to order at
least 2. If the order is 3, then &lt;span class=&#34;math inline&#34;&gt;\(t^3\mid
t^3+(a-m^2)t^2\)&lt;/span&gt;, that is exactly when &lt;span
class=&#34;math inline&#34;&gt;\(a=m^2\)&lt;/span&gt;.&lt;/p&gt;
&lt;h4 id=&#34;section-20&#34;&gt;2.21&lt;/h4&gt;
&lt;p&gt; Let the line through the point &lt;span
class=&#34;math inline&#34;&gt;\((-1,0)\)&lt;/span&gt; with slope &lt;span
class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;: &lt;span class=&#34;math inline&#34;&gt;\(u=-1+m,
v=tm\)&lt;/span&gt;. Substitute the equations into circle equation, this
yields &lt;span class=&#34;math inline&#34;&gt;\((t^2+1)m^2-2m=0\)&lt;/span&gt;. Discarding
the solution &lt;span class=&#34;math inline&#34;&gt;\(m=0\)&lt;/span&gt;, then we obtain
&lt;span class=&#34;math inline&#34;&gt;\(m=2/(t^2+1)\)&lt;/span&gt;. Thus, &lt;span
class=&#34;math display&#34;&gt;\[
u=-1+\frac{2}{t^2+1}=\frac{t^2-1}{t^2+1},\qquad v=\frac{2t}{1+t^2}.
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; Let &lt;span class=&#34;math inline&#34;&gt;\(t=m/n\)&lt;/span&gt; in the expression of
&lt;span class=&#34;math inline&#34;&gt;\(u\)&lt;/span&gt; and &lt;span
class=&#34;math inline&#34;&gt;\(v\)&lt;/span&gt; by the parameter &lt;span
class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;, then &lt;span class=&#34;math display&#34;&gt;\[
u=\frac{t^2-1}{t^2+1}=\frac{m^2-n^2}{m^2+n^2},\qquad
v=\frac{2mn}{m^2+n^2}.
\]&lt;/span&gt; Let &lt;span class=&#34;math inline&#34;&gt;\(u=y/z\)&lt;/span&gt; and &lt;span
class=&#34;math inline&#34;&gt;\(v=x/z\)&lt;/span&gt;, thus there are integers &lt;span
class=&#34;math inline&#34;&gt;\(m,n\)&lt;/span&gt; such that &lt;span
class=&#34;math display&#34;&gt;\[
x=2mn,\qquad y=m^2-n^2,\qquad z=m^2+n^2.
\]&lt;/span&gt; If &lt;span class=&#34;math inline&#34;&gt;\(\gcd(m,n)=k\neq 1\)&lt;/span&gt;,
then &lt;span class=&#34;math inline&#34;&gt;\(k^2\mid \gcd(x,y,z)\neq1\)&lt;/span&gt;,
which is not allowed, thus &lt;span
class=&#34;math inline&#34;&gt;\(\gcd(m,n)=1\)&lt;/span&gt;. If &lt;span
class=&#34;math inline&#34;&gt;\(m\equiv n\pmod 2\)&lt;/span&gt;, then there exists
integer &lt;span class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; such that &lt;span
class=&#34;math inline&#34;&gt;\(m=n+2q\)&lt;/span&gt;, this leads to &lt;span
class=&#34;math inline&#34;&gt;\(2\mid \gcd(x,y,z)\)&lt;/span&gt;, which is a
contradiction, hence &lt;span class=&#34;math inline&#34;&gt;\(m\not\equiv n \pmod
2\)&lt;/span&gt;.&lt;/p&gt;
&lt;h4 id=&#34;section-21&#34;&gt;2.22&lt;/h4&gt;
&lt;p&gt;Notice that &lt;span class=&#34;math display&#34;&gt;\[
\frac{d}{dx}\left(\frac{p(x)}{q(x)}\right)=\frac{p^{\prime}(x)q(x)-q^{\prime}(x)p(x)}{q^2(x)}.
\]&lt;/span&gt; 1. If &lt;span
class=&#34;math inline&#34;&gt;\(p^{\prime}(x)=q^{\prime}(x)=0\)&lt;/span&gt;, it is
obvious that &lt;span
class=&#34;math inline&#34;&gt;\(\frac{d}{dx}\left(\frac{p(x)}{q(x)}\right)=0\)&lt;/span&gt;.&lt;/p&gt;
&lt;ol start=&#34;2&#34; type=&#34;1&#34;&gt;
&lt;li&gt;If &lt;span
class=&#34;math inline&#34;&gt;\(\frac{d}{dx}\left(\frac{p(x)}{q(x)}\right)=0\)&lt;/span&gt;,
then we obtain &lt;span class=&#34;math display&#34;&gt;\[
\frac{p^{\prime}(x)}{q^\prime(x)}=\frac{p(x)}{q(x)}=h(x).
\]&lt;/span&gt; The equation is equivalent to &lt;span class=&#34;math display&#34;&gt;\[
p^\prime(x)=h(x)q^\prime(x)\qquad\text{and}\qquad p(x)=h(x)q(x),
\]&lt;/span&gt; this yields &lt;span class=&#34;math inline&#34;&gt;\(h(x)=e^x\)&lt;/span&gt;. If
&lt;span class=&#34;math inline&#34;&gt;\(p^\prime(x)\neq 0\)&lt;/span&gt;, then &lt;span
class=&#34;math inline&#34;&gt;\(q^\prime(x)\neq 0\)&lt;/span&gt;. But &lt;span
class=&#34;math inline&#34;&gt;\(e^xq(x)\)&lt;/span&gt; is not a polynomial, it is
impossible. Thus &lt;span class=&#34;math inline&#34;&gt;\(p^\prime(x)=0\)&lt;/span&gt;,
then &lt;span class=&#34;math inline&#34;&gt;\(q^\prime(x)=0\)&lt;/span&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;section-22&#34;&gt;2.23&lt;/h4&gt;
&lt;p&gt; &lt;span class=&#34;math display&#34;&gt;\[
j(E^{(d)})=108\frac{(4Ad^2)^3}{4(Ad^2)^3+27(Bd^3)^2}=108\frac{(4A)^3}{4A^3+27B^2}=j(E).
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; The change of variables &lt;span class=&#34;math inline&#34;&gt;\(x=dx_1, y=\pm
d\sqrt{d}y_1\)&lt;/span&gt; transform &lt;span class=&#34;math inline&#34;&gt;\(E^{(d)}:
y^2=x^3+Ad^2x+Bd^3\)&lt;/span&gt; into &lt;span class=&#34;math inline&#34;&gt;\(E:
y_1^2=x_1^3+Ax_1+B\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt; The change of variables &lt;span class=&#34;math inline&#34;&gt;\(x=dx_1, y=\pm
d^2y_1\)&lt;/span&gt; transform &lt;span class=&#34;math inline&#34;&gt;\(E^{(d)}:
y^2=x^3+Ad^2x+Bd^3\)&lt;/span&gt; into the form &lt;span
class=&#34;math inline&#34;&gt;\(dy_1^2=x_1^3+Ax_1+B\)&lt;/span&gt;.&lt;/p&gt;
&lt;h4 id=&#34;section-23&#34;&gt;2.24&lt;/h4&gt;
&lt;p&gt; Since &lt;span class=&#34;math inline&#34;&gt;\(\gcd(\alpha,\beta)=1\)&lt;/span&gt;, so
there exist integers &lt;span class=&#34;math inline&#34;&gt;\(p,q\)&lt;/span&gt; such that
&lt;span class=&#34;math inline&#34;&gt;\(p\alpha+q\beta=1\)&lt;/span&gt;. If cubic
polynomial &lt;span class=&#34;math inline&#34;&gt;\(x(x-\alpha)(x-\beta)\)&lt;/span&gt;
have a triple root, then &lt;span class=&#34;math inline&#34;&gt;\(p\mid
\alpha\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(p\mid \beta\)&lt;/span&gt;.
This yields &lt;span class=&#34;math inline&#34;&gt;\(p\mid p\alpha+q\beta=1\)&lt;/span&gt;,
which is not allowed.&lt;/p&gt;
&lt;p&gt; Directly calculate.&lt;/p&gt;
&lt;p&gt; Since &lt;span class=&#34;math inline&#34;&gt;\(\beta \equiv 0\pmod {32}\)&lt;/span&gt;,
then &lt;span class=&#34;math inline&#34;&gt;\(\alpha\beta/16 \equiv 0 \pmod
2\)&lt;/span&gt;. Thus &lt;span class=&#34;math inline&#34;&gt;\(E_1\)&lt;/span&gt; has the form
&lt;span class=&#34;math inline&#34;&gt;\(y_1^2+x_1y_1=x_1^3+ex_1^2\)&lt;/span&gt; for some
&lt;span class=&#34;math inline&#34;&gt;\(e\in\mathbf{F}_2\)&lt;/span&gt;. This curve is
singular at &lt;span class=&#34;math inline&#34;&gt;\((0,0)\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt; Let &lt;span class=&#34;math inline&#34;&gt;\(\tilde{f}(x_1,\gamma
x_1)=x_1^3+(e-\gamma^2-\gamma)x_1^2\)&lt;/span&gt; and notice that the line
&lt;span class=&#34;math inline&#34;&gt;\(y_1=\gamma x_1\)&lt;/span&gt; intersect &lt;span
class=&#34;math inline&#34;&gt;\(E_1\)&lt;/span&gt; at &lt;span
class=&#34;math inline&#34;&gt;\((0,0)\)&lt;/span&gt;. It is easy to see that if &lt;span
class=&#34;math inline&#34;&gt;\(\gamma^2+\gamma=e\)&lt;/span&gt;, then the line
intersects in part (c) to order 3, and if &lt;span
class=&#34;math inline&#34;&gt;\(\gamma^2+\gamma \neq e\)&lt;/span&gt;, then the line
intersects in part (c) to order 2.&lt;/p&gt;
&lt;p&gt; The equation &lt;span
class=&#34;math inline&#34;&gt;\(\gamma^2+\gamma-e=0\)&lt;/span&gt; has two solutions
&lt;span class=&#34;math inline&#34;&gt;\(x_1,x_2\)&lt;/span&gt; in &lt;span
class=&#34;math inline&#34;&gt;\(\mathbf{\overline{F}}_2\)&lt;/span&gt;, if &lt;span
class=&#34;math inline&#34;&gt;\(x_1=x_2\)&lt;/span&gt;, then &lt;span
class=&#34;math inline&#34;&gt;\((\gamma-x_1)^2=\gamma^2+\gamma-e\)&lt;/span&gt;. But
&lt;span class=&#34;math display&#34;&gt;\[
\frac{d}{d\gamma}(\gamma-x_1)^2=0, \qquad
\frac{d}{d\gamma}(\gamma^2+\gamma-e)=1\neq 0,
\]&lt;/span&gt; which is not allowed, hence &lt;span
class=&#34;math inline&#34;&gt;\(x_1\neq x_2\)&lt;/span&gt;.&lt;/p&gt;
</content>
        <category term="标标备忘录" scheme="http://example.com/categories/biao/" />
        <category term="密码学中的椭圆曲线" scheme="http://example.com/categories/biao/cryptology/" />
        <category term="标标备忘录" scheme="http://example.com/tags/%E6%A0%87%E6%A0%87%E5%A4%87%E5%BF%98%E5%BD%95/" />
        <category term="密码学" scheme="http://example.com/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/" />
        <updated>2024-07-03T09:34:49.804Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/07/03/post/sql/01-sql/</id>
        <title>数据库</title>
        <link rel="alternate" href="http://example.com/2024/07/03/post/sql/01-sql/"/>
        <content type="html">&lt;h1 id=&#34;数据库小记&#34;&gt;数据库小记&lt;/h1&gt;
&lt;h3 id=&#34;字符串排序转类型&#34;&gt;1、字符串排序，转类型&lt;/h3&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;在这个查询中，&lt;span class=&#34;built_in&#34;&gt;CAST&lt;/span&gt;(j.ops_jl_start &lt;span class=&#34;keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;INTEGER&lt;/span&gt;) 将 j.ops_jl_start 字符串转换为整数，然后按整数值进行排序，从而确保排序顺序为 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;、&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;、&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;、&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;如果你的数据库系统不支持 CAST 函数（例如在某些数据库系统中，可能需要使用 &lt;span class=&#34;keyword&#34;&gt;CONVERT&lt;/span&gt; 函数），你可以根据具体的数据库系统语法进行调整。例如，在 MySQL 中，可以使用：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;sql&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;CAST&lt;/span&gt;(j.ops_jl_start &lt;span class=&#34;keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;INTEGER&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;CONVERT&lt;/span&gt;(j.ops_jl_start, SIGNED &lt;span class=&#34;type&#34;&gt;INTEGER&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3
id=&#34;左连接按照某种条件只保留一条&#34;&gt;2、左连接按照某种条件只保留一条&lt;/h3&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;ROW_NUMBER&lt;/span&gt;() &lt;span class=&#34;keyword&#34;&gt;OVER&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;PARTITION&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;BY&lt;/span&gt; supplier_id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                               &lt;span class=&#34;keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;BY&lt;/span&gt; approve_date &lt;span class=&#34;keyword&#34;&gt;DESC&lt;/span&gt;) num&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; black_vl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; status &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;XX&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;AND&lt;/span&gt; mean &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;XXX&amp;#x27;&lt;/span&gt;) h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; num &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) h &lt;span class=&#34;keyword&#34;&gt;ON&lt;/span&gt; h.supplier_id &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; cps.supplier_id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;这边就是按照有多条按照approve_date最大值保存&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;数据库查询优化&#34;&gt;3、数据库查询优化&lt;/h3&gt;
&lt;p&gt;1、视图过大，新建视图，只取出自己要的值&lt;/p&gt;
</content>
        <category term="前端" scheme="http://example.com/categories/vue/" />
        <updated>2024-07-03T08:07:19.424Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/07/01/post/job/06-%E7%8F%A0%E5%95%A4%E5%BC%80%E5%8F%91%E4%BB%BB%E5%8A%A1%E5%B0%8F%E8%AE%B0/</id>
        <title>06-珠啤开发任务小记</title>
        <link rel="alternate" href="http://example.com/2024/07/01/post/job/06-%E7%8F%A0%E5%95%A4%E5%BC%80%E5%8F%91%E4%BB%BB%E5%8A%A1%E5%B0%8F%E8%AE%B0/"/>
        <content type="html">&lt;div class=&#34;hbe hbe-container&#34; id=&#34;hexo-blog-encrypt&#34; data-wpm=&#34;抱歉，这个密码看着不太对，请再试试。&#34; data-whm=&#34;抱歉，这个文章不能被校验，不过您还是能看看解密后的内容。&#34;&gt;
  &lt;script id=&#34;hbeData&#34; type=&#34;hbeData&#34; data-hmacdigest=&#34;03f7ebd5a66c7b860ba782858ddd32af7943a6976d2687becb4fa4271872ff03&#34;&gt;&lt;/script&gt;
  &lt;div class=&#34;hbe hbe-content&#34;&gt;
    &lt;div class=&#34;hbe hbe-input hbe-input-default&#34;&gt;
      &lt;input class=&#34;hbe hbe-input-field hbe-input-field-default&#34; type=&#34;password&#34; id=&#34;hbePass&#34;&gt;
      &lt;label class=&#34;hbe hbe-input-label hbe-input-label-default&#34; for=&#34;hbePass&#34;&gt;
        &lt;span class=&#34;hbe hbe-input-label-content hbe-input-label-content-default&#34;&gt;您好，这里需要输入密码查看。&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&#34;/lib/hbe.js&#34;&gt;&lt;/script&gt;&lt;link href=&#34;/css/hbe.style.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="工作日志" scheme="http://example.com/categories/job/" />
        <category term="job" scheme="http://example.com/tags/job/" />
        <updated>2024-07-01T10:55:20.257Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/07/01/post/job/05-%E6%B7%B1%E8%83%BD%E5%BC%80%E5%8F%91%E4%BB%BB%E5%8A%A1%E5%B0%8F%E8%AE%B0/</id>
        <title>05-深能开发任务小记</title>
        <link rel="alternate" href="http://example.com/2024/07/01/post/job/05-%E6%B7%B1%E8%83%BD%E5%BC%80%E5%8F%91%E4%BB%BB%E5%8A%A1%E5%B0%8F%E8%AE%B0/"/>
        <content type="html">&lt;div class=&#34;hbe hbe-container&#34; id=&#34;hexo-blog-encrypt&#34; data-wpm=&#34;抱歉，这个密码看着不太对，请再试试。&#34; data-whm=&#34;抱歉，这个文章不能被校验，不过您还是能看看解密后的内容。&#34;&gt;
  &lt;script id=&#34;hbeData&#34; type=&#34;hbeData&#34; data-hmacdigest=&#34;407d842ba09f6da4af45ca7fd47065935a0d72f0d158ac3e243339b0b83937dc&#34;&gt;&lt;/script&gt;
  &lt;div class=&#34;hbe hbe-content&#34;&gt;
    &lt;div class=&#34;hbe hbe-input hbe-input-default&#34;&gt;
      &lt;input class=&#34;hbe hbe-input-field hbe-input-field-default&#34; type=&#34;password&#34; id=&#34;hbePass&#34;&gt;
      &lt;label class=&#34;hbe hbe-input-label hbe-input-label-default&#34; for=&#34;hbePass&#34;&gt;
        &lt;span class=&#34;hbe hbe-input-label-content hbe-input-label-content-default&#34;&gt;您好，这里需要输入密码查看。&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&#34;/lib/hbe.js&#34;&gt;&lt;/script&gt;&lt;link href=&#34;/css/hbe.style.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="工作日志" scheme="http://example.com/categories/job/" />
        <category term="job" scheme="http://example.com/tags/job/" />
        <updated>2024-07-01T10:53:17.270Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/07/01/post/job/04-%E5%9B%BD%E9%99%85%E5%8C%96%E6%93%8D%E4%BD%9Ci18n/</id>
        <title>04-国际化操作i18n</title>
        <link rel="alternate" href="http://example.com/2024/07/01/post/job/04-%E5%9B%BD%E9%99%85%E5%8C%96%E6%93%8D%E4%BD%9Ci18n/"/>
        <content type="html">&lt;h1 id=&#34;vue-i18n-国际化教程&#34;&gt;vue i18n 国际化教程&lt;/h1&gt;
&lt;h2 id=&#34;国际化介绍&#34;&gt;1、国际化介绍&lt;/h2&gt;
&lt;p&gt;对于一些跨国项目来说，国际化是尤为重要的，那么什么要国际化呢?国际化的意思就是将我们写的项目，能够根据不同国家的语言，进行翻译，进行切换，方便不同国家的客户使用&lt;/p&gt;
&lt;p&gt;基本思路如下&lt;/p&gt;
&lt;p&gt;① 定义语言包：需要几种语言展示，就定义几个语言包&lt;/p&gt;
&lt;p&gt;② 创建对象，对语言包进行整合，对象的 key
为语言包的引用，值为语言包对象&lt;/p&gt;
&lt;p&gt;③ 创建 vue-i18n 类的对象，同时为其 messages
属性为第②步创建的对象，为其 locale 属性赋值为第②步中语言对象对应的
key&lt;/p&gt;
&lt;p&gt;④ 在创建 Vue 实例对象时，挂载 vue-i18n 类的对象&lt;/p&gt;
&lt;p&gt;下面具体讲解&lt;/p&gt;
&lt;h2 id=&#34;简单使用&#34;&gt;2、简单使用&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1、安装插件 vue-i18n&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;i18n&lt;/code&gt;是&lt;code&gt;internationalization&lt;/code&gt;这个单词的缩写，取了首字母&lt;code&gt;i&lt;/code&gt;和结尾字母&lt;code&gt;n&lt;/code&gt;，中间一用有18个字母，所以组合起来就所写成&lt;code&gt;i18n&lt;/code&gt;，这是一个用于给vue国际化的插件，
它可以轻松地将一些本地化功能集成到你的 Vue.js 应用程序中&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;css&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;复制代码npm &lt;span class=&#34;selector-tag&#34;&gt;i&lt;/span&gt; vue-i18n&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 main.js 中导入并作为插件使用&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;javascript复制代码&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;VueI18&lt;/span&gt;n &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;vue-i18n&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title class_&#34;&gt;Vue&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;use&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;VueI18&lt;/span&gt;n)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;2、创建语言包对象&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight arduino&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;arduino复制代码&lt;span class=&#34;comment&#34;&gt;// 1、创建中文语言包对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; zh = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  username: &lt;span class=&#34;string&#34;&gt;&amp;#x27;用户名&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  email: &lt;span class=&#34;string&#34;&gt;&amp;#x27;邮箱&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  mobile: &lt;span class=&#34;string&#34;&gt;&amp;#x27;手机&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 2、创建英文语言包对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; en = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  username: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Username&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  email: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Email&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  mobile: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Mobile&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;两个第项中的键是一样的，后面在组件中要使用&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、组合对象&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight arduino&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;arduino复制代码&lt;span class=&#34;comment&#34;&gt;// 3、组合语言包对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; messages = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  zh,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  en&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;4、创建 i18n 实例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight arduino&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;arduino复制代码&lt;span class=&#34;comment&#34;&gt;// 4、创建 VueI18n 实例，并为 messages 和 locale 属性赋值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; i18n = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;VueI18n&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  messages,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  locale: &lt;span class=&#34;string&#34;&gt;&amp;#x27;en&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;messages 属性要设置为第3步中组合的修啊ing&lt;/li&gt;
&lt;li&gt;locale：的值为 messages 对象中的某个 key 的值，如果设置为
en，则组件中使用 第1步中创建的 英文语言中包中的对应属性的值，如果设置为
zh，则使用 中文语言包中的属性的只&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;5、挂载对象&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;javascript复制代码&lt;span class=&#34;comment&#34;&gt;// 5、挂载 i18n&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Vue&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  i18n,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;render&lt;/span&gt;: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;h&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;h&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;App&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;).$mount(&lt;span class=&#34;string&#34;&gt;&amp;#x27;#app&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;6、完整代码&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;javascript复制代码&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Vue&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;vue&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;App&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;./App.vue&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;VueI18&lt;/span&gt;n &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;vue-i18n&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title class_&#34;&gt;Vue&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;use&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;VueI18&lt;/span&gt;n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 1、创建中文语言包对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; zh = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;username&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;用户名&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;email&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;邮箱&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;mobile&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;手机&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 2、创建英文语言包对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; en = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;username&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Username&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;email&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Email&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;mobile&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Mobile&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 3、组合语言包对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; messages = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  zh,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  en&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 4、创建 VueI18n 实例，并为 messages 和 locale 属性赋值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; i18n = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;VueI18&lt;/span&gt;n(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  messages,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;locale&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;en&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title class_&#34;&gt;Vue&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;config&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;productionTip&lt;/span&gt; = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 5、挂载 i18n&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Vue&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  i18n,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;render&lt;/span&gt;: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;h&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;h&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;App&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;).$mount(&lt;span class=&#34;string&#34;&gt;&amp;#x27;#app&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;7、组件中使用&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;bash复制代码&amp;lt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;div &lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;app&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;p&amp;gt;&amp;#123;&amp;#123; &lt;span class=&#34;variable&#34;&gt;$t&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;username&amp;#x27;&lt;/span&gt;) &amp;#125;&amp;#125;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;p&amp;gt;&amp;#123;&amp;#123; &lt;span class=&#34;variable&#34;&gt;$t&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;email&amp;#x27;&lt;/span&gt;) &amp;#125;&amp;#125;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;p&amp;gt;&amp;#123;&amp;#123; &lt;span class=&#34;variable&#34;&gt;$t&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;mobile&amp;#x27;&lt;/span&gt;) &amp;#125;&amp;#125;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;扩展语言包对象&#34;&gt;3、扩展语言包对象&lt;/h2&gt;
&lt;p&gt;真实的项目中，可能很多地方都需要国际化，比如表格的表头、tab
栏、导航菜单等，我们可以在语言包中创建多个键，分别存储这些模块的语言&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;css复制代码// &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;、创建中文语言包对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const zh = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;selector-tag&#34;&gt;table&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    username: &lt;span class=&#34;string&#34;&gt;&amp;#x27;用户名&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    email: &lt;span class=&#34;string&#34;&gt;&amp;#x27;邮箱&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mobile: &lt;span class=&#34;string&#34;&gt;&amp;#x27;手机&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  menus: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    home: &lt;span class=&#34;string&#34;&gt;&amp;#x27;首页&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    download: &lt;span class=&#34;string&#34;&gt;&amp;#x27;下载&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  tabs: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    info: &lt;span class=&#34;string&#34;&gt;&amp;#x27;商品描述&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    comment: &lt;span class=&#34;string&#34;&gt;&amp;#x27;评价&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;、创建英文语言包对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const en = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;selector-tag&#34;&gt;table&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    username: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Username&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    email: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Email&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mobile: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Mobile&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  menus: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    home: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Home&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    download: &lt;span class=&#34;string&#34;&gt;&amp;#x27;DownLoad&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  tabs: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    info: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Describe&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    comment: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Comment On&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;组件中使用&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;xml复制代码&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;app&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 模拟表格中使用 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; $t(&amp;#x27;table.username&amp;#x27;) &amp;#125;&amp;#125;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; $t(&amp;#x27;table.email&amp;#x27;) &amp;#125;&amp;#125;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; $t(&amp;#x27;table.mobile&amp;#x27;) &amp;#125;&amp;#125;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 模拟导航菜单中使用 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; $t(&amp;#x27;menus.home&amp;#x27;) &amp;#125;&amp;#125;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; $t(&amp;#x27;menus.download&amp;#x27;) &amp;#125;&amp;#125;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 模拟tabs 选项卡中使用 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; $t(&amp;#x27;tabs.info&amp;#x27;) &amp;#125;&amp;#125;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; $t(&amp;#x27;tabs.comment&amp;#x27;) &amp;#125;&amp;#125;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此时，如果将 locale 的值切换为 zh&lt;/p&gt;
&lt;figure class=&#34;highlight arduino&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;arduino复制代码&lt;span class=&#34;comment&#34;&gt;// 4、创建 VueI18n 实例，并为 messages 和 locale 属性赋值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; i18n = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;VueI18n&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  messages,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  locale: &lt;span class=&#34;string&#34;&gt;&amp;#x27;zh&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;实际开发中，多个组件中可能存在多个表格、导航菜单等，每个表格的表头、菜单的描述信息可能都不尽相同&lt;/p&gt;
&lt;p&gt;该如何处理呢？&lt;/p&gt;
&lt;p&gt;以表格的表头为例&lt;/p&gt;
&lt;p&gt;我们可以在语言包对象中，定义多个 table，如
userTable、roleTable等，每个当中存储自己的字段和对应的语言，也可以在一个
table 对象中，定义多个字段，把所有表格用到的表头信息全都定义在一个 table
对象中&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;单独的语言包文件&#34;&gt;4、单独的语言包文件&lt;/h2&gt;
&lt;p&gt;语言包对象
最后可能会比较大，属性比较多，所以最好的办法是将其定义成单独的 js
文件，然后再进行整合&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、创建语言包文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;src 目录下新建 langurage 目录，在其中新建 zh.js 和 en.js
文件，然后将上面的语言包代码拷贝进来，因为一会要使用语言包对象，所以要导出&lt;/p&gt;
&lt;p&gt;zh.js&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;css复制代码// &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;、创建中文语言包对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export default&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;selector-tag&#34;&gt;table&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      username: &lt;span class=&#34;string&#34;&gt;&amp;#x27;用户名&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      email: &lt;span class=&#34;string&#34;&gt;&amp;#x27;邮箱&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      mobile: &lt;span class=&#34;string&#34;&gt;&amp;#x27;手机&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    menus: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      home: &lt;span class=&#34;string&#34;&gt;&amp;#x27;首页&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      download: &lt;span class=&#34;string&#34;&gt;&amp;#x27;下载&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tabs: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      info: &lt;span class=&#34;string&#34;&gt;&amp;#x27;商品描述&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      comment: &lt;span class=&#34;string&#34;&gt;&amp;#x27;评价&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;en.js&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;css复制代码// &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;、创建英文语言包对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export default &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;selector-tag&#34;&gt;table&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        username: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Username&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        email: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Email&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mobile: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Mobile&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    menus: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        home: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Home&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        download: &lt;span class=&#34;string&#34;&gt;&amp;#x27;DownLoad&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tabs: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        info: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Describe&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        comment: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Comment On&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;2、整合语言包文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们将整合语言包对象和创建 VueI18n 实例并配置的过程写到一个 js
文件中，然后在 main.js 中导入&lt;/p&gt;
&lt;p&gt;这样 main.js 中代码就会简练很多，毕竟 main.js 中只是最后需要一个
VueI18n 的实例即可![]&lt;/p&gt;
&lt;p&gt;langurage 目录中新建 index.js，代码如下&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;javascript复制代码&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Vue&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;vue&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;VueI18&lt;/span&gt;n &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;vue-i18n&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 从语言包文件中导入语言包对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; zh &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;./zh&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; en &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;./en&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title class_&#34;&gt;Vue&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;use&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;VueI18&lt;/span&gt;n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; messages = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  zh,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  en&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; i18n = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;VueI18&lt;/span&gt;n(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  messages,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;locale&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;en&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt; i18n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;3、main.js 中引入&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;javascript复制代码&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Vue&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;vue&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;App&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;./App.vue&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; i18n &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;./langurage&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title class_&#34;&gt;Vue&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;config&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;productionTip&lt;/span&gt; = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 5、挂载 i18n&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Vue&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  i18n,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;render&lt;/span&gt;: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;h&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;h&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;App&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;).$mount(&lt;span class=&#34;string&#34;&gt;&amp;#x27;#app&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;切换语言&#34;&gt;5、切换语言&lt;/h2&gt;
&lt;p&gt;当前切换语言，需要修改如下代码中的 locale 的值&lt;/p&gt;
&lt;figure class=&#34;highlight arduino&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;arduino复制代码&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; i18n = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;VueI18n&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  messages,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  locale: &lt;span class=&#34;string&#34;&gt;&amp;#x27;en&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;手动切换当然不行了，页面中可以提供一个按钮，点击时，动态改变这里的值&lt;/p&gt;
&lt;p&gt;通过 navigator.language
方法可以获取浏览器当前使用的语言，基本就代表了用户所使用的语言&lt;/p&gt;
&lt;figure class=&#34;highlight arduino&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;arduino复制代码&lt;span class=&#34;comment&#34;&gt;// 获取浏览器当前使用的语言，并进行处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; i18n = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;VueI18n&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  messages,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  locale: navigator.language &lt;span class=&#34;comment&#34;&gt;// 获取浏览器的语言&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;组件中加入语言切换按钮&lt;/p&gt;
&lt;figure class=&#34;highlight ini&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ini复制代码    &amp;lt;button @&lt;span class=&#34;attr&#34;&gt;click&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;translate(&amp;#x27;zh&amp;#x27;)&amp;quot;&lt;/span&gt;&amp;gt;切换为中文&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;button @&lt;span class=&#34;attr&#34;&gt;click&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;translate(&amp;#x27;en&amp;#x27;)&amp;quot;&lt;/span&gt;&amp;gt;切换为英文&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;javascript复制代码  methods: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    translate(lang) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      this.$&lt;span class=&#34;attr&#34;&gt;i18n.locale&lt;/span&gt; = lang&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样，我们就实现了语言的切换了&lt;/p&gt;
&lt;h2 id=&#34;动态菜单如何处理&#34;&gt;6、动态菜单如何处理&lt;/h2&gt;
&lt;p&gt;如下面的导航菜单是请求后台数据，然后借用 element-ui 中的 menu
组件动态渲染的&lt;/p&gt;
&lt;p&gt;返回的菜单名称字段（authName）的值都是中文，此时该如何处理呢？&lt;/p&gt;
&lt;p&gt;很简单，语言包中定义相关数据&lt;/p&gt;
&lt;p&gt;zh.js&lt;/p&gt;
&lt;figure class=&#34;highlight arduino&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;arduino复制代码&lt;span class=&#34;keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  menus: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    用户管理: &lt;span class=&#34;string&#34;&gt;&amp;#x27;用户管理&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    用户列表: &lt;span class=&#34;string&#34;&gt;&amp;#x27;用户列表&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    角色列表: &lt;span class=&#34;string&#34;&gt;&amp;#x27;角色列表&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    权限管理: &lt;span class=&#34;string&#34;&gt;&amp;#x27;权限管理&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    权限列表: &lt;span class=&#34;string&#34;&gt;&amp;#x27;权限列表&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;en.js&lt;/p&gt;
&lt;figure class=&#34;highlight arduino&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;arduino复制代码&lt;span class=&#34;keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  menus: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    用户管理: &lt;span class=&#34;string&#34;&gt;&amp;#x27;User Manager&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    用户列表: &lt;span class=&#34;string&#34;&gt;&amp;#x27;User List&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    角色列表: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Role List&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    权限管理: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Rights Manager&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    权限列表: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Rights List&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;menu 组件渲染时，加入如下代码&lt;/p&gt;
&lt;p&gt;在 methods 中定义方法 menusTitle&lt;/p&gt;
&lt;figure class=&#34;highlight kotlin&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;kotlin复制代码  menusTitle(item) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.$te(&lt;span class=&#34;string&#34;&gt;&amp;#x27;menus.&amp;#x27;&lt;/span&gt; + item)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.$t(&lt;span class=&#34;string&#34;&gt;&amp;#x27;menus.&amp;#x27;&lt;/span&gt; + item)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; item&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在我们实现翻译功能&lt;/p&gt;
&lt;p&gt;头部加上一个 switch 进行语言切换&lt;/p&gt;
&lt;figure class=&#34;highlight ini&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ini复制代码&amp;lt;el-switch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;langValue&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :&lt;span class=&#34;attr&#34;&gt;active-text&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;active_text&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    :&lt;span class=&#34;attr&#34;&gt;inactive-text&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;inactive_text&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    @&lt;span class=&#34;attr&#34;&gt;change&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;translate&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;data 中的数据&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;yaml复制代码&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;langValue:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;attr&#34;&gt;lang:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;attr&#34;&gt;active_text:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;attr&#34;&gt;inactive_text:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;组件初始化时对上面的值进行初始化设置&lt;/p&gt;
&lt;p&gt;methods 中定义此方法，并在 created 钩子函数中调用&lt;/p&gt;
&lt;figure class=&#34;highlight ini&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ini复制代码 setSwitch() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;attr&#34;&gt;this.active_text&lt;/span&gt; = navigator.language === &lt;span class=&#34;string&#34;&gt;&amp;#x27;zh&amp;#x27;&lt;/span&gt; ? &lt;span class=&#34;string&#34;&gt;&amp;#x27;英文&amp;#x27;&lt;/span&gt; : &lt;span class=&#34;string&#34;&gt;&amp;#x27;中文&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;attr&#34;&gt;this.inactive_text&lt;/span&gt; = navigator.language === &lt;span class=&#34;string&#34;&gt;&amp;#x27;zh&amp;#x27;&lt;/span&gt; ? &lt;span class=&#34;string&#34;&gt;&amp;#x27;中文&amp;#x27;&lt;/span&gt; : &lt;span class=&#34;string&#34;&gt;&amp;#x27;英文&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;attr&#34;&gt;this.lang&lt;/span&gt; = navigator.language&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;switch 的 change 事件处理程序&lt;/p&gt;
&lt;figure class=&#34;highlight kotlin&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;kotlin复制代码translate() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.lang = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.lang === &lt;span class=&#34;string&#34;&gt;&amp;#x27;zh&amp;#x27;&lt;/span&gt; ? &lt;span class=&#34;string&#34;&gt;&amp;#x27;en&amp;#x27;&lt;/span&gt; : &lt;span class=&#34;string&#34;&gt;&amp;#x27;zh&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.$i18n.locale = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.lang&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;如何调整语言设置&#34;&gt;7、如何调整语言设置&lt;/h2&gt;
&lt;p&gt;在浏览器的语言设置中，可以调整语言，然后刷新页面，浏览器就会采用最新的语言设置&lt;/p&gt;
&lt;p&gt;VoerkaI18n：https://zhangfisher.github.io/voerka-i18n/#/&lt;/p&gt;
</content>
        <category term="工作日志" scheme="http://example.com/categories/job/" />
        <category term="job" scheme="http://example.com/tags/job/" />
        <category term="vue.js" scheme="http://example.com/tags/vue-js/" />
        <category term="国际化" scheme="http://example.com/tags/%E5%9B%BD%E9%99%85%E5%8C%96/" />
        <updated>2024-07-01T10:45:56.545Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/06/28/post/utils/utils/</id>
        <title>实用小工具</title>
        <link rel="alternate" href="http://example.com/2024/06/28/post/utils/utils/"/>
        <content type="html">&lt;h1 id=&#34;实用小工具&#34;&gt;实用小工具&lt;/h1&gt;
&lt;h2 id=&#34;windows系统&#34;&gt;Windows系统&lt;/h2&gt;
&lt;h4 id=&#34;geek软件卸载工具&#34;&gt;1、Geek：软件卸载工具&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;简介&lt;/strong&gt;：GeekUninstaller正式版是一款相当不错的单文件绿色卸载软件，它体积轻巧，反映迅速，并且完全免费，支持多国语言，完美支持支持32位与64位系统，并且它只有一个exe文件
(软件大小不到2M)，你不需要安装即可直接卸载软件、强制彻底清除软件残留垃圾文件或是查看某软件的注册表项目等等，让你的系统瞬间变得高速流畅。&lt;/p&gt;
&lt;p&gt;果核剥壳链接：https://www.ghxi.com/geek.html&lt;/p&gt;
&lt;p&gt;网盘分享链接：&lt;/p&gt;
&lt;h4 id=&#34;everything数据检索工具&#34;&gt;2、Everything：数据检索工具&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;简介&lt;/strong&gt;：Everything是速度最快的文件搜索软件，可以瞬间搜索到你需要的文件。如果你用过Windows自Everything是速度最快的文件搜索软件，可以瞬间搜索到你需要的文件。如果你用过Windows自带的搜索工具、Total
Commander的搜索、Google
桌面搜索或百度硬盘搜索，都因为速度或其他原因而不满意；或者用了Locate32也不满意（或满意），推荐这款体积小巧、免安装、免费、速度极快（比Locate32更快）的文件搜索工具Everything！&lt;/p&gt;
&lt;p&gt;果核剥壳链接：https://www.ghxi.com/everything.html&lt;/p&gt;
&lt;h4
id=&#34;formatfactory格式工厂格式转换工具&#34;&gt;3、FormatFactory格式工厂：格式转换工具&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;简介&lt;/strong&gt;：格式工厂是套万能的多媒体格式转换器，提供以下功能：所有类型视频转到MP4/3GP/MPG/AVI/WMV/FLV/SWF。所有类型音频转到MP3/WMA/MMF/AMR/OGG/M4A/WAV。你可以在格式工厂中文版界面的左侧列表中看到软件提供的主要功能，如视频转换、音频转换、图片转换、DVD/CD/ISO转换，以及视频合并、音频合并、混流等高级功能。格式工厂强大的格式转换功能和友好的操作性，无疑使格式工厂成为同类软件中的佼者。&lt;/p&gt;
&lt;p&gt;果核剥壳链接：https://www.ghxi.com/formatfactory-2.html&lt;/p&gt;
&lt;h4 id=&#34;timesync系统时间校准工具&#34;&gt;4、Timesync：系统时间校准工具&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;简介&lt;/strong&gt;：&lt;strong&gt;TimeSync&lt;/strong&gt;
是一款由德国知名自由软件开发工程师 &lt;strong&gt;Horst Schaeffer&lt;/strong&gt;
精心设计与荣誉出品的可用于获取来自 &lt;strong&gt;NIST&lt;/strong&gt;
标准互联网时间服务的当前时间并在必要时校准与同步用户计算机时钟时间的实用管理工具。尽管当前系统的确切时间可以由较新版本的微软
Windows
平台的官方服务器或者您的路由器提供，然而在特定需要时您可能希望拥有这样一款额外的时间校准同步助手随叫随到。&lt;/p&gt;
&lt;p&gt;下载地址：&lt;/p&gt;
&lt;p&gt;【网站】&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubGFuem91eC5jb20vYjA1YW8xYTRm&#34;&gt;蓝奏云&lt;/span&gt; &lt;a
href=&#34;https://www.90pan.com/o143870&#34;&gt;90网盘&lt;/a&gt; &lt;a
href=&#34;https://cloud.degoo.com/share/rbCgElQIOSaJMY&#34;&gt;Degoo网盘&lt;/a&gt;&lt;/p&gt;
&lt;h4
id=&#34;contextmenumanager.net.3.5-右键管理工具&#34;&gt;5、ContextMenuManager.NET.3.5
： 右键管理工具&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;简介&lt;/strong&gt;：ContextMenuManager是一款C#开发的Windows10右键菜单管理软件，软件小巧，功能强大，使用起来非常方便。遗憾的是软件只支持Windows10。&lt;/p&gt;
&lt;p&gt;果核剥壳链接：https://www.ghxi.com/contextmenumanager.html&lt;/p&gt;
&lt;h4 id=&#34;iobit-unlocker文件文件夹解锁工具&#34;&gt;6、IObit
Unlocker：文件/文件夹解锁工具&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;简介&lt;/strong&gt;：Obit Unlocker
是一款小巧、易用和免费的文件/文件夹解锁工具，您可通过拖放或点击添加按钮对目标文件/文件夹进行删除、重命名、移动和复制等操作，解决无法删除或访问被拒绝等问题。&lt;/p&gt;
&lt;p&gt;使用 IObit
Unlocker，您不会再收到“无法删除文件”、“访问被拒绝”、“文件未删除”、“该文件正被另一个程序或用户使用”或“共享冲突”等提示消息。它是一个强大的工具，通过终止所有阻止您删除或访问文件/文件夹的相关进程解决这些问题。&lt;/p&gt;
&lt;p&gt;通过“解锁 &amp;amp; 删除”、“解锁 &amp;amp; 重命名”、“解锁 &amp;amp; 移动”和“解锁
&amp;amp;
复制”功能，为您提供了一种安全的方法修改您计算机上的文件和文件夹，以确保您的数据安全和磁盘的稳定性。&lt;/p&gt;
&lt;p&gt;果核剥壳链接：https://www.ghxi.com/iobitunlocker.html&lt;/p&gt;
&lt;h4 id=&#34;spacesniffer磁盘分析工具&#34;&gt;7、SpaceSniffer：磁盘分析工具&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;简介&lt;/strong&gt;：有时候我们在整理磁盘时，想知道磁盘中哪些文件或文件夹占用了多少空间，要是一个个文件夹点进去看，那岂不是非常浪费时间，对整体也没有一个很直观的印象。
SpaceSniffer 可让您了解文件夹和文件在磁盘上的结构。通过使用可视化布局,
您可以立即看到某个文件在磁盘中到底有“多大”！看看是哪个文件夹或文件占用了大量空间，以便迅速一键删除。&lt;/p&gt;
&lt;p&gt;果核剥壳链接：https://www.ghxi.com/spacesniffer.html&lt;/p&gt;
&lt;h2 id=&#34;开发工具&#34;&gt;开发工具&lt;/h2&gt;
&lt;h4 id=&#34;idea-jrebel热部署插件&#34;&gt;1、idea-&amp;gt;JRebel热部署插件&lt;/h4&gt;
</content>
        <category term="实用小工具" scheme="http://example.com/categories/utils/" />
        <category term="tools" scheme="http://example.com/tags/tools/" />
        <updated>2024-06-28T01:37:25.457Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/06/27/post/cloud/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E5%9F%BA%E7%A1%80%E7%89%88%EF%BC%89/</id>
        <title>云服务器部署-基础版本（前后端）</title>
        <link rel="alternate" href="http://example.com/2024/06/27/post/cloud/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E5%9F%BA%E7%A1%80%E7%89%88%EF%BC%89/"/>
        <content type="html">&lt;h1 id=&#34;云服务器&#34;&gt;云服务器&lt;/h1&gt;
&lt;p&gt;基础版本（前后端），部署毕设时所用&lt;/p&gt;
&lt;h2 id=&#34;服务器&#34;&gt;1.服务器&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lY3MuY29uc29sZS5hbGl5dW4uY29tL3NlcnZlci9yZWdpb24vY24taGV5dWFu&#34;&gt;https://ecs.console.aliyun.com/server/region/cn-heyuan&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;操作系统 CentOs 7.9 Linux&lt;/p&gt;
&lt;p&gt;重置密码**********&lt;/p&gt;
&lt;h4 id=&#34;添加安全组-开启端口号&#34;&gt;添加安全组 开启端口号&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Mysql 3306
http 80
springboot 8084
vue 5173&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;工具&#34;&gt;工具&lt;/h4&gt;
&lt;p&gt;xshell：linux终端连接&lt;/p&gt;
&lt;p&gt;xftp：文件传输&lt;/p&gt;
&lt;h2 id=&#34;常用命令&#34;&gt;2.常用命令&lt;/h2&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;free -h 查看内存&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df-h  查看存储&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;top  运行软件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;根据端口号查看进程&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kill &amp;lt;PID&amp;gt;杀死进程&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//如果 lsof 命令未找到，则可能是因为它没有安装在您的系统上。lsof 是一个用于列出打开文件的工具，可以用于查看正在使用指定端口的进程。在大多数 Linux 发行版中，lsof 可能不会预装，您需要手动安装它。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo yum install lsof&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo lsof -i :8084&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//检查防火墙规则以确保 8084 端口被允许通过&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo netstat -tuln | grep 8084&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;jdk&#34;&gt;JDK&lt;/h2&gt;
&lt;p&gt;下载链接：&lt;a
href=&#34;https://www.oracle.com/cn/java/technologies/downloads/#java17&#34;
class=&#34;uri&#34;&gt;https://www.oracle.com/cn/java/technologies/downloads/#java17&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;命令&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1.安装jdk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tar -zxvf jdk-*.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2.重命名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; mv jdk-17.0.10 jdk17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3.移动&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mv jdk17 /usr/local/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4.修改配置文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd /usr/local/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vim /etc/profile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(按a或者i 进去编译模式  :wq保存退出)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5.添加配置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export JAVA_HOME=/usr/local/jdk17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export CLASSPATH=$:CLASSPATH:$JAVA_HOME/lib/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export PATH=$PATH:$JAVA_HOME/bin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /etc/profile（查看是否更改成功）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6.刷新配置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;source /etc/profile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7.检查是否安装成功&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;java -version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;docker&#34;&gt;docker&lt;/h2&gt;
&lt;p&gt;菜鸟教程：&lt;a
href=&#34;https://www.runoob.com/docker/centos-docker-install.html&#34;
class=&#34;uri&#34;&gt;https://www.runoob.com/docker/centos-docker-install.html&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;手动安装&#34;&gt;1.手动安装&lt;/h4&gt;
&lt;p&gt;1.卸载旧版本&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo yum remove docker \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  docker-client \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  docker-client-latest \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  docker-common \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  docker-latest \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  docker-latest-logrotate \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  docker-logrotate \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  docker-engine&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.安装所需软件包&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo yum install -y yum-utils \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  device-mapper-persistent-data \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  lvm2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3.设置仓库 阿里云&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo yum-config-manager \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --add-repo \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;4.安装 Docker Engine-Community&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo yum install docker-ce docker-ce-cli containerd.io docker-compose-plugin&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;启动docker&#34;&gt;2.启动docker&lt;/h4&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo systemctl start docker&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker version 验证成功&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用户设置Docker需要用户具有sudo权限，为了避免每次命令都输入sudo，可以把用户加入到Dokcer用户组&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo usermod -aG docker &lt;span class=&#34;variable&#34;&gt;$USER&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看镜像文件&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;docker images&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker ps 查看所有进程&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;设置开机自启&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;systemctl &lt;span class=&#34;built_in&#34;&gt;enable&lt;/span&gt; docker&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;镜像加速&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo mkdir -p /etc/docker&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo tee /etc/docker/daemon.json &amp;lt;&amp;lt;-&amp;#x27;EOF&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;registry-mirrors&amp;quot;: [&amp;quot;https://3n4m4jry.mirror.aliyuncs.com&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo systemctl daemon-reload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo systemctl restart docker&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;卸载docker&#34;&gt;卸载docker&lt;/h4&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;删除安装包：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;yum remove docker-ce&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;删除镜像、容器、配置文件等内容：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;rm&lt;/span&gt; -rf /var/lib/docker&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;docker-安装mysql&#34;&gt;docker 安装mysql&lt;/h3&gt;
&lt;p&gt;安装mysql&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;docker pull mysql:8.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;启动mysql&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;docker run -p 3306:3306 --name mysql \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-v /mydata/mysql/log:/var/log/mysql \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-v /mydata/mysql/data:/var/lib/mysql \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-v /mydata/mysql/conf:/etc/mysql \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-e MYSQL_ROOT_PASSWORD=root \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-d mysql:8.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker run -p 3309:3306 --name mysql \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-e MYSQL_ROOT_PASSWORD=root \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-d mysql:8.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker run -p 3309:3306 --name mysql3309 \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-v /mydata/mysql3309/log:/var/log/mysql \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-v /mydata/mysql3309/data:/var/lib/mysql \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-v /mydata/mysql3309/conf:/etc/mysql \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-e MYSQL_ROOT_PASSWORD=root \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-d mysql:8.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//用这个就可以&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker run -p 3306:3306 --name mysql -e MYSQL_ROOT_PASSWORD=cyx -d mysql:8.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker start mysql&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;进入容器命令&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\image-20240408222327539.png&#34;
alt=&#34;image-20240408222327539&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;image-20240408222327539&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//进入mysql容器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker &lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt; -it 8388d7a823cb /bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//登录mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mysql -uroot -pcyx123(账号密码)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//修改权限&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ALTER USER &lt;span class=&#34;string&#34;&gt;&amp;#x27;root&amp;#x27;&lt;/span&gt;@&lt;span class=&#34;string&#34;&gt;&amp;#x27;%&amp;#x27;&lt;/span&gt; IDENTIFIED WITH mysql_native_password BY &lt;span class=&#34;string&#34;&gt;&amp;#x27;cyx123&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//修改密码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ALTER USER &lt;span class=&#34;string&#34;&gt;&amp;#x27;root&amp;#x27;&lt;/span&gt;@&lt;span class=&#34;string&#34;&gt;&amp;#x27;%&amp;#x27;&lt;/span&gt;  IDENTIFIED BY &lt;span class=&#34;string&#34;&gt;&amp;quot;cyx123&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后可以用Navicat 直接连接mysql拷贝数据库数据&lt;/p&gt;
&lt;p&gt;数据库授权&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//先进入mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-- 查询mysql用于&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; user,host,authentication_string from mysql.user;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;--授权&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GRANT ALL PRIVILEGES ON TO *.* &lt;span class=&#34;string&#34;&gt;&amp;#x27;root&amp;#x27;&lt;/span&gt;@&lt;span class=&#34;string&#34;&gt;&amp;#x27;%&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;--刷新&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;FLUSH PRIVILEGES;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;容器&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1、停止容器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker stop 容器&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2、开启容器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker start 容器&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3、查看所有容器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker ps -a 查看&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;springboot项目打包&#34;&gt;springboot项目打包&lt;/h2&gt;
&lt;p&gt;参考连接：&lt;a
href=&#34;https://blog.csdn.net/qq_34491508/article/details/91490434&#34;
class=&#34;uri&#34;&gt;https://blog.csdn.net/qq_34491508/article/details/91490434&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;把所有本地的地址改成服务器上的&lt;/p&gt;
&lt;p&gt;mysql端口连接&lt;/p&gt;
&lt;p&gt;图片路径&lt;/p&gt;
&lt;p&gt;打包命令：&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mvn clean package -DskipTests&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;idea打包&#34;&gt;idea打包：&lt;/h4&gt;
&lt;p&gt;1、pom文件引入插件&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;build&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;plugins&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-maven-plugin&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;plugins&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;build&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2、打包 &lt;img
src=&#34;D:\Pictures\typore\watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0NDkxNTA4,size_16,color_FFFFFF,t_70.png&#34;
alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;3、jar包运行&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//指定java17的版本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;D:\Iot\jdk17\jdk-17.0.7\bin\java -jar tobacco-0.0.1-SNAPSHOT.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;java -jar tobacco-0.0.1-SNAPSHOT.jar&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;设置权限&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;chmod&lt;/span&gt; 777 tobacco-0.0.1-SNAPSHOT.jar&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后台启动&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nohup java -jar tobacco-0.0.1-SNAPSHOT.jar &amp;amp;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;java 有没有启动&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ps -ef grep java
kill -9(进程号)&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;vue项目打包&#34;&gt;VUE项目打包&lt;/h3&gt;
&lt;p&gt;端口5173&lt;/p&gt;
&lt;p&gt;1、请求路径更改axios&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\image-20240409212908376.png&#34;
alt=&#34;image-20240409212908376&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;image-20240409212908376&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;2、动态路由修改&lt;/p&gt;
&lt;p&gt;3、打开package.json 点击运行&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\image-20240409213009017.png&#34;
alt=&#34;image-20240409213009017&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;image-20240409213009017&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm run build   （X）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;packagejson中运行&lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vue-tsc是代码检查，别加&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;vite build&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;build&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;vue-tsc &amp;amp;&amp;amp; vite build&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;项目上云&lt;/p&gt;
&lt;p&gt;1.安装 Node.js 16 和 npm&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;安装 Node.js 的安装包&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl -fsSL https://rpm.nodesource.com/setup_16.x | sudo bash -&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 安装Node.js 和 npm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo yum install -y nodejs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;确认安装成功&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;node -v&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.在node环境下安装 &lt;code&gt;http-server&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install -g http-server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3.启动http服务器&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http-server -p 5173 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;将 http-server 在后台运行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;nohup&lt;/span&gt; http-server -p 5173 &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;sh启动脚本，所有放在一个压缩包里，放在云服务器上，运行启动脚本，一减部署&lt;/p&gt;
</content>
        <category term="微服务框架" scheme="http://example.com/categories/cloud/" />
        <category term="Spring Cloud" scheme="http://example.com/tags/Spring-Cloud/" />
        <category term="云服务" scheme="http://example.com/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1/" />
        <updated>2024-06-27T09:49:15.300Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/06/27/post/cloud/%E5%88%86%E5%B8%83%E5%BC%8FSpringCloud%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4/</id>
        <title>分布式Spring Cloud阿里巴巴-理论</title>
        <link rel="alternate" href="http://example.com/2024/06/27/post/cloud/%E5%88%86%E5%B8%83%E5%BC%8FSpringCloud%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4/"/>
        <content type="html">&lt;h1 id=&#34;分布式spring-cloud阿里巴巴&#34;&gt;分布式Spring Cloud阿里巴巴&lt;/h1&gt;
&lt;p&gt;（图片还未上传云）&lt;/p&gt;
&lt;h1 id=&#34;spring-cloud&#34;&gt;---01-Spring Cloud&lt;/h1&gt;
&lt;h2 id=&#34;一微服务架构&#34;&gt;一、微服务架构&lt;/h2&gt;
&lt;h4 id=&#34;什么是微服务架构&#34;&gt;1、什么是微服务架构&lt;/h4&gt;
&lt;p&gt;分布式强调系统的拆分，微服务也是强调系统的拆分，微服务架构属于分布式架构的范畴；&lt;/p&gt;
&lt;p&gt;并且到目前为止，微服务并没有一个统一的标准的定义，那么微服务究竟是什么？&lt;/p&gt;
&lt;p&gt;微服务一词源于Martin Fowler（马丁.福勒）的名为 Microservices 的博文，
可以在他的官方博客上找到这篇文章：
http://martinfowler.com/articles/microservices.html&lt;/p&gt;
&lt;p&gt;中文翻译版本：&lt;/p&gt;
&lt;p&gt;https://www.martinfowler.cn/articles/microservices.html&lt;/p&gt;
&lt;p&gt;简单地说， 微服务是系统架构上的一种设计风格，
它的主旨是将一个原本独立的系统拆分成多个小型服务，这些小型服务都在各自独立的进程中运行，服务之间通过基于HTTP的RESTful
API进行通信协作；&lt;/p&gt;
&lt;p&gt;被拆分后的每一个小型服务都围绕着系统中的某一项业务功能进行构建，
并且每个服务都是一个独立的项目，可以进行独立的测试、开发和部署等；&lt;/p&gt;
&lt;p&gt;由于各个独立的服务之间使用的是基于HTTP的作为数据通信协作的基础，所以这些微服务可以使用不同的语言来开发；&lt;/p&gt;
&lt;h4 id=&#34;微服务架构的优缺点&#34;&gt;2、微服务架构的优缺点&lt;/h4&gt;
&lt;p&gt;优：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;微服务架构是将系统中的不同功能模块拆分成多个不同的服务，这些服务进行独立地开发和部署，每个服务都运行在自己的进程内，这样每个服务的更新都不会影响其他服务的运行；&lt;/li&gt;
&lt;li&gt;由于每个服务是独立部署的，所以我们可以更准确地监控每个服务的资源消耗情况，进行性能容量的评估，通过压力测试，也很容易发现各个服务间的性能瓶颈所在；&lt;/li&gt;
&lt;li&gt;由于每个服务都是独立开发，项目的开发也比较方便，减少代码的冲突、代码的重复，逻辑处理流程也更加清晰，让后续的维护与扩展更加容易；&lt;/li&gt;
&lt;li&gt;微服务可以使用不同的编程语言进行开发；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缺：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;&lt;p&gt;微服务架构增加了系统维护、部署的难度，导致一些功能模块或代码无法复用；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;随着系统规模的日渐增长，微服务在一定程度上也会导致系统变得越来越复杂，增加了集成测试的复杂度；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;随着微服务的增多，数据的一致性问题，服务之间的通信成本等都凸显了出来；&lt;/p&gt;
&lt;p&gt;所以在系统架构时也要提醒自己：不要为了微服务而微服务&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;为什么选择spring-cloud-来构建微服务&#34;&gt;3、为什么选择Spring Cloud
来构建微服务&lt;/h4&gt;
&lt;p&gt;我们国内的互联网企业也有一些著名的框架和方案；&lt;/p&gt;
&lt;p&gt;整个微服务架构是由大量的技术框架和方案构成，比如：&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 18%&#34; /&gt;
&lt;col style=&#34;width: 81%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;服务基础开发&lt;/th&gt;
&lt;th&gt;Spring MVC、Spring、SpringBoot&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;服务注册与发现&lt;/td&gt;
&lt;td&gt;Netflix的Eureka、Apache的ZooKeeper等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;服务调用&lt;/td&gt;
&lt;td&gt;RPC调用有阿里巴巴的Dubbo，Rest方式调用有当当网Dubbo基础上扩展的Dubbox、还有其他方式实现的Rest，比如Ribbon、Feign&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;分布式配置管理&lt;/td&gt;
&lt;td&gt;百度的Disconf、360的QConf、淘宝的Diamond、Netflix的Archaius等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;负载均衡&lt;/td&gt;
&lt;td&gt;Ribbon&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;服务熔断&lt;/td&gt;
&lt;td&gt;Hystrix&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;API网关&lt;/td&gt;
&lt;td&gt;Zuul&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;批量任务&lt;/td&gt;
&lt;td&gt;当当网的Elastic-Job、Linkedln的Azkaban&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;服务跟踪&lt;/td&gt;
&lt;td&gt;京东的Hydra、Twitter的Zipkin等&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;二spring-cloud&#34;&gt;二、Spring Cloud&lt;/h3&gt;
&lt;p&gt;官网：http://spring.io&lt;/p&gt;
&lt;h4 id=&#34;spring-cloud是什么&#34;&gt;1、Spring Cloud是什么&lt;/h4&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;Spring
Cloud是一个一站式的开发分布式系统的框架，为开发者提供了一系列的构建分布式系统的工具集；&lt;/li&gt;
&lt;li&gt;Spring
Cloud为开发人员提供了快速构建分布式系统中一些常见模式的工具（比如：配置管理，服务发现，断路器，智能路由、微代理、控制总线、全局锁、决策竞选、分布式会话和集群状态管理等）；&lt;/li&gt;
&lt;li&gt;开发分布式系统都需要解决一系列共同关心的问题，而使用Spring
Cloud可以快速地实现这些分布式开发共同关心的问题，并能方便地在任何分布式环境中部署与运行。&lt;/li&gt;
&lt;li&gt;Spring
Cloud这个一站式地分布式开发框架，被近年来流行的“微服务”架构所大力推崇，成为目前进行微服务架构的优先选择工具；&lt;/li&gt;
&lt;li&gt;Spring Cloud基于Spring Boot框架构建微服务架构，学习Spring
Cloud需要先学习Spring Boot；&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;整体框架&#34;&gt;2、整体框架&lt;/h4&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\image-20240507092722104.png&#34;
alt=&#34;image-20240507092722104&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;image-20240507092722104&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Service Provider： 暴露服务的服务提供方。&lt;/p&gt;
&lt;p&gt;Service Consumer：调用远程服务的服务消费方。&lt;/p&gt;
&lt;p&gt;EureKa Server： 服务注册中心和服务发现中心。&lt;/p&gt;
&lt;h3 id=&#34;三服务注册中心eureka&#34;&gt;三、服务注册中心Eureka&lt;/h3&gt;
&lt;h4 id=&#34;走进服务中心eureka&#34;&gt;1、走进服务中心Eureka&lt;/h4&gt;
&lt;p&gt;在微服务架构中，&lt;strong&gt;服务注册与发现是核心组件之一&lt;/strong&gt;，手动指定每个服务是很低效的，Spring
Cloud提供了多种服务注册与发现的实现方式，例如：Eureka、Zookeeper。&lt;/p&gt;
&lt;p&gt;Spring Cloud支持得最好的是Eureka，其次是Zookeeper。&lt;/p&gt;
&lt;p&gt;1、什么是服务注册&lt;/p&gt;
&lt;p&gt;服务注册：将服务所在主机、端口、版本号、通信协议等信息登记到注册中心上。&lt;/p&gt;
&lt;p&gt;2、什么是服务发现&lt;/p&gt;
&lt;p&gt;服务发现：服务消费者向注册中心请求已经登记的服务列表，然后得到某个服务的主机、端口、版本号、通信协议等信息，从而实现对具体服务的调用。&lt;/p&gt;
&lt;p&gt;3、Eureka是什么&lt;/p&gt;
&lt;p&gt;Eureka是一个服务治理组件，它主要包括服务注册和服务发现，主要用来搭建服务注册中心。&lt;/p&gt;
&lt;p&gt;Eureka 是一个基于 REST
的服务，用来定位服务，进行中间层服务器的负载均衡和故障转移；&lt;/p&gt;
&lt;p&gt;Eureka
采用了C-S（客户端/服务端）的设计架构，也就是Eureka由两个组件组成：Eureka服务端和Eureka客户端。Eureka
Server
作为服务注册的服务端，它是服务注册中心，而系统中的其他微服务，使用
Eureka 的客户端连接到 Eureka
Server服务端，并维持心跳连接，Eureka客户端是一个Java客户端，用来简化与服务器的交互、负载均衡，服务的故障切换等；&lt;/p&gt;
&lt;p&gt;有了Eureka注册中心，系统的维护人员就可以通过 Eureka Server
来监控系统中各个微服务是否正常运行。&lt;/p&gt;
&lt;h4 id=&#34;eureka与zookeeper的比较&#34;&gt;2、Eureka与Zookeeper的比较&lt;/h4&gt;
&lt;p&gt;著名的CAP理论指出，一个分布式系统不可能同时满足C(一致性)、A(可用性)和P(分区容错性)。&lt;/p&gt;
&lt;p&gt;由于分区容错性在是分布式系统中必须要保证的，因此我们只能在A和C之间进行权衡，在此Zookeeper保证的是CP,
而Eureka则是AP。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、Zookeeper保证CP&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在ZooKeeper中，当master节点因为网络故障与其他节点失去联系时，剩余节点会重新进行leader选举，但是问题在于，选举leader需要一定时间,
且选举期间整个ZooKeeper集群都是不可用的，这就导致在选举期间注册服务瘫痪。在云部署的环境下，因网络问题使得ZooKeeper集群失去master节点是大概率事件，虽然服务最终能够恢复，但是在选举时间内导致服务注册长期不可用是难以容忍的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、Eureka保证AP&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Eureka优先保证可用性，Eureka各个节点是平等的，某几个节点挂掉不会影响正常节点的工作，剩余的节点依然可以提供注册和查询服务。而Eureka的客户端在向某个Eureka注册或时如果发现连接失败，则会自动切换至其它节点，只要有一台Eureka还在，就能保证注册服务可用(保证可用性)，只不过查到的信息可能不是最新的(不保证强一致性)。&lt;/p&gt;
&lt;p&gt;所以Eureka在网络故障导致部分节点失去联系的情况下，只要有一个节点可用，那么注册和查询服务就可以正常使用，而不会像zookeeper那样使整个注册服务瘫痪，Eureka优先保证了可用性。&lt;/p&gt;
&lt;h3 id=&#34;四客户端负载均衡ribbon&#34;&gt;四、客户端负载均衡Ribbon&lt;/h3&gt;
&lt;h4 id=&#34;负载均衡&#34;&gt;1、负载均衡&lt;/h4&gt;
&lt;p&gt;负载均衡：&lt;strong&gt;指将一个请求均匀地分摊到不同的节点单元上执行，负载均和分为硬件负载均衡和软件负载均衡&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;硬件负载均衡&lt;/strong&gt;：比如 F5、深信服、Array 等&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;软件负载均衡&lt;/strong&gt;：比如 Nginx、LVS、HAProxy 等&lt;/p&gt;
&lt;p&gt;硬件负载均衡或是软件负载均衡，他们都会维护一个可用的服务端清单，通过心跳检测来剔除故障的服务端节点以保证清单中都是可以正常访问的服务端节点。当客户端发送请求到负载均衡设备的时候，该设备按某种算法（比如轮询、权重、
最小连接数等）从维护的可用服务端清单中取出一台服务端的地址，然后进行转发。&lt;/p&gt;
&lt;h4 id=&#34;ribbon介绍&#34;&gt;2、Ribbon介绍&lt;/h4&gt;
&lt;p&gt;Ribbon是Netflix发布的开源项目，&lt;strong&gt;主要功能&lt;/strong&gt;是&lt;u&gt;提供客户端的软件负载均衡算法，是一个基于HTTP和TCP的客户端负载均衡工具&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;Spring
Cloud对Ribbon做了二次封装，可以让我们使用&lt;strong&gt;RestTemplate&lt;/strong&gt;的服务请求，自动转换成客户端负载均衡的服务调用。&lt;/p&gt;
&lt;p&gt;Ribbon支持多种负载均衡算法，还支持自定义的负载均衡算法。&lt;/p&gt;
&lt;p&gt;Ribbon只是一个工具类框架，比较小巧，Spring
Cloud对它封装后使用也非常方便，它不像服务注册中心、配置中心、API网关那样需要独立部署，&lt;strong&gt;Ribbon只需要在代码直接使用即可&lt;/strong&gt;；&lt;/p&gt;
&lt;h4 id=&#34;ribbon-与-nginx-的区别&#34;&gt;3、Ribbon 与 Nginx 的区别&lt;/h4&gt;
&lt;p&gt;Ribbon是客户端的负载均衡工具，而客户端负载均衡和服务端负载均衡最大的区别在于服务清单所存储的位置不同，在客户端负载均衡中，所有客户端节点下的服务端清单，需要自己从服务注册中心上获取，比如Eureka服务注册中心。同服务端负载均衡的架构类似，在客户端负载均衡中也需要心跳去维护服务端清单的健康性，只是这个步骤需要与服务注册中心配合完成。在Spring
Cloud中，由于Spring
Cloud对Ribbon做了二次封装，所以默认会创建针对Ribbon的自动化整合配置&lt;/p&gt;
&lt;h4 id=&#34;使用&#34;&gt;4、使用&lt;/h4&gt;
&lt;p&gt;在Spring
Cloud中，Ribbon主要与RestTemplate对象配合起来使用，Ribbon会自动化配置RestTemplate对象，通过@LoadBalanced开启RestTemplate对象调用时的负载均衡。&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\image-20240507093858824.png&#34;
alt=&#34;image-20240507093858824&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;image-20240507093858824&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&#34;五resttemplate模板&#34;&gt;五、RestTemplate模板&lt;/h3&gt;
&lt;p&gt;当我们从服务消费端去调用服务提供者的服务的时候，使用了一个极其方便的对象叫RestTemplate，当时我们只使用了RestTemplate中最简单的一个功能getForEntity发起了一个get请求去调用服务端的数据，同时，我们还通过配置@LoadBalanced注解开启客户端负载均衡，RestTemplate的功能非常强大，那么接下来我们就来详细的看一下RestTemplate中几种常见请求方法的使用。&lt;/p&gt;
&lt;p&gt;在日常操作中，基于Rest的方式通常是四种情况，它们分表是：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GET请求 --查询数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;POST请求 –添加数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PUT请求 – 修改数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DELETE请求 –删除数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面我们逐一解读。&lt;/p&gt;
&lt;h3 id=&#34;六服务熔断hystrix&#34;&gt;六、服务熔断Hystrix&lt;/h3&gt;
&lt;h4 id=&#34;hystrix是什么&#34;&gt;1、Hystrix是什么&lt;/h4&gt;
&lt;p&gt;​
在微服务架构中，我们是将一个&lt;strong&gt;单体应用拆分成多个服务单元&lt;/strong&gt;，各个服务单元之间通过注册中心彼此发现和消费对方提供的服务，每个服务单元都是单独部署，在各自的服务进程中运行，服务之间通过远程调用实现信息交互，那么当某个服务的响应太慢或者故障，又或者因为网络波动或故障，则会造成调用者延迟或调用失败，当大量请求到达，则会造成请求的堆积，导致调用者的线程挂起，从而引发调用者也无法响应，调用者也发生故障。&lt;/p&gt;
&lt;p&gt;EG：电商中的用户下订单，我们有两个服务，一个下订单服务，一个减库存服务，当用户下订单时调用下订单服务，然后下订单服务又调用减库存服务，如果减库存服务响应延迟或者没有响应，则会造成下订单服务的线程挂起等待，如果大量的用户请求下订单，或导致大量的请求堆积，引起下订单服务也不可用，如果还有另外一个服务依赖于订单服务，比如用户服务，它需要查询用户订单，那么用户服务查询订单也会引起大量的延迟和请求堆积，导致用户服务也不可用。&lt;/p&gt;
&lt;p&gt;所以在微服务架构中，很容易造成服务故障的蔓延，引发整个微服务系统瘫痪不可用。为了解决此问题，微服务架构中引入了一种叫熔断器的服务保护机制。&lt;/p&gt;
&lt;p&gt;微服务架构中的熔断器，就是&lt;strong&gt;当被调用方没有响应，调用方直接返回一个错误响应即可，而不是长时间的等待&lt;/strong&gt;，这样避免调用时因为等待而线程一直得不到释放，避免故障在分布式系统间蔓延；&lt;/p&gt;
&lt;p&gt;用法：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;异常熔断&lt;/li&gt;
&lt;li&gt;超时熔断&lt;/li&gt;
&lt;li&gt;Hystrix的服务降级&lt;/li&gt;
&lt;li&gt;Hystrix的异常处理&lt;/li&gt;
&lt;li&gt;异常忽略&lt;/li&gt;
&lt;li&gt;自定义熔断处理&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;3.Hystrix的服务降级&lt;/p&gt;
&lt;p&gt;有了服务的熔断，随之就会有服务的降级，所谓服务降级，就是当某个服务熔断之后，服务端提供的服务将不再被调用，此时由客户端自己准备一个本地的fallback回调，返回一个默认值来代表服务端的返回；&lt;/p&gt;
&lt;p&gt;这种做法，虽然不能得到正确的返回结果，但至少保证了服务的可用，比直接抛出错误或服务不可用要好很多，当然这需要根据具体的业务场景来选择；&lt;/p&gt;
&lt;p&gt;6.自定义熔断处理&lt;/p&gt;
&lt;p&gt;我们也可以自定义类继承自HystrixCommand来实现自定义的Hystrix请求，在getFallback方法中调用getExecutionException方法来获取服务抛出的异常，这种熔断主要针对于远程服务的异常处理。&lt;/p&gt;
&lt;h3 id=&#34;七声明式服务消费feign&#34;&gt;七、声明式服务消费Feign&lt;/h3&gt;
&lt;h4 id=&#34;fegin介绍&#34;&gt;1、Fegin介绍&lt;/h4&gt;
&lt;p&gt;Feign是Netflix公司开发的一个声明式的&lt;strong&gt;REST调用客户端&lt;/strong&gt;；&lt;/p&gt;
&lt;p&gt;Ribbon负载均衡、Hystrix服务熔断是我们Spring
Cloud中进行微服务开发非常基础的组件，在使用的过程中我们也发现它们一般都是同时出现的，而且配置也都非常相似，每次开发都有很多相同的代码，&lt;strong&gt;因此Spring
Cloud基于Netflix
Feign整合了Ribbon和Hystrix两个组件&lt;/strong&gt;，让我们的开发工作变得更加简单，就像Spring
Boot是对Spring+SpringMVC的简化一样，Spring Cloud
Feign对Ribbon负载均衡、Hystrix服务熔断进行简化，在其基础上进行了进一步的封装，不仅在配置上大大简化了开发工作，同时还提供了一种声明式的Web服务客户端定义方式；&lt;/p&gt;
&lt;h1 id=&#34;nacos&#34;&gt;----02-Nacos&lt;/h1&gt;
&lt;h3 id=&#34;一springcloudalibab简介&#34;&gt;一、springCloudAlibab简介&lt;/h3&gt;
&lt;p&gt;Spring Cloud Alibaba
是阿里巴巴提供的微服务开发一站式解决方案，是&lt;strong&gt;阿里巴巴开源中间件与
Spring Cloud 体系的融合&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;同 Spring Cloud 一样，Spring Cloud Alibaba
也是一套微服务解决方案，包含开发分布式应用微服务的必需组件，方便开发者通过
Spring Cloud 编程模型轻松使用这些组件来开发分布式应用服务。&lt;/p&gt;
&lt;p&gt;依托 Spring Cloud Alibaba，您只需要添加一些注解和少量配置，就可以将
Spring Cloud
应用接入阿里微服务解决方案，通过阿里中间件来迅速搭建分布式应用系统。&lt;/p&gt;
&lt;p&gt;作为 Spring Cloud 体系下的新实现，Spring Cloud Alibaba
跟官方的组件或其它的第三方实现如 Netflix, Consul，Zookeeper
等对比，具备了更多的功能:&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\image-20240507094612394.png&#34;
alt=&#34;image-20240507094612394&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;image-20240507094612394&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;https://spring-cloud-alibaba-group.github.io/github-pages/hoxton/en-us/index.html&lt;/p&gt;
&lt;h3 id=&#34;二nacos&#34;&gt;二、Nacos&lt;/h3&gt;
&lt;h4 id=&#34;什么是nacos&#34;&gt;1、什么是nacos&lt;/h4&gt;
&lt;p&gt;https://nacos.io/zh-cn/docs/what-is-nacos.html&lt;/p&gt;
&lt;p&gt;Nacos 致力于帮助您发现、配置和管理微服务。Nacos
提供了一组简单易用的特性集，帮助您快速实现动态服务发现、服务配置、服务元数据及流量管理。&lt;/p&gt;
&lt;p&gt;Nacos 帮助您更敏捷和容易地构建、交付和管理微服务平台。 Nacos
是构建以“服务”为中心的现代应用架构 (例如微服务范式、云原生范式)
的服务基础设施。&lt;/p&gt;
&lt;h4 id=&#34;使用-1&#34;&gt;2、使用&lt;/h4&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;Nacos下载和安装&lt;/li&gt;
&lt;li&gt;服务注册和发现&lt;/li&gt;
&lt;li&gt;分布式配置中心&lt;/li&gt;
&lt;li&gt;数据持久化
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;配置数据源（数据库-表）&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Nacos集群配置&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;sentinel&#34;&gt;----03-Sentinel&lt;/h1&gt;
&lt;h3 id=&#34;一sentinel&#34;&gt;一、Sentinel&lt;/h3&gt;
&lt;h4 id=&#34;sentinel是什么&#34;&gt;1、Sentinel是什么&lt;/h4&gt;
&lt;p&gt;随着微服务的流行，服务和服务之间的稳定性变得越来越重要。&lt;/p&gt;
&lt;p&gt;Sentinel
:以流量为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。&lt;/p&gt;
&lt;p&gt;主要特征：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;&lt;strong&gt;丰富的应用场景&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;完备的实时监控&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;广泛的开源生态&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;完善的 SPI 扩展机制&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;主要特性：&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\image-20240507095123148.png&#34;
alt=&#34;image-20240507095123148&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;image-20240507095123148&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h4 id=&#34;主要功能&#34;&gt;2、主要功能&lt;/h4&gt;
&lt;p&gt;1、流量控制&lt;/p&gt;
&lt;p&gt;​ &lt;strong&gt;流量控制&lt;/strong&gt;（flow control），其原理是监控应用流量的
QPS
或并发线程数等指标，当达到指定的阈值时对流量进行控制，以避免被瞬时的流量高峰冲垮，从而保障应用的高可用性。&lt;/p&gt;
&lt;p&gt;2、熔断降级&lt;/p&gt;
&lt;p&gt;​
除了流量控制以外，对调用链路中不稳定的资源进行熔断降级也是保障高可用的重要措施之一。一个服务常常会调用别的模块，可能是另外的一个远程服务、数据库，或者第三方
API 等。例如，支付的时候，可能需要远程调用银联提供的
API；查询某个商品的价格，可能需要进行数据库查询。然而，这个被依赖服务的稳定性是不能保证的。如果依赖的服务出现了不稳定的情况，请求的响应时间变长，那么调用服务的方法的响应时间也会变长，线程会产生堆积，最终可能耗尽业务自身的线程池，服务本身也变得不可用。&lt;/p&gt;
&lt;p&gt;3、热点参数限流&lt;/p&gt;
&lt;p&gt;​
何为热点？热点即经常访问的数据。很多时候我们希望统计某个热点数据中访问频次最高的
Top K 数据，并对其访问进行限制。比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;商品 ID 为参数，统计一段时间内最常购买的商品 ID 并进行限制&lt;/li&gt;
&lt;li&gt;用户 ID 为参数，针对一段时间内频繁访问的用户 ID 进行限制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;热点参数限流会统计传入参数中的热点参数，并根据配置的限流阈值与模式，对包含热点参数的资源调用进行限流。热点参数限流可以看做是一种特殊的流量控制，仅对包含热点参数的资源调用生效。&lt;/p&gt;
&lt;p&gt;4、黑白名单控制&lt;/p&gt;
&lt;p&gt;​
很多时候，我们需要根据调用来源来判断该次请求是否允许放行，这时候可以使用
Sentinel
的来源访问控制（黑白名单控制）的功能。来源访问控制根据资源的请求来源（origin）限制资源是否通过，若配置白名单则只有请求来源位于白名单内时才可通过；若配置黑名单则请求来源位于黑名单时不通过，其余的请求通过。&lt;/p&gt;
&lt;p&gt;5、系统自适应限流&lt;/p&gt;
&lt;p&gt;​ 系统保护规则是从应用级别的入口流量进行控制，从单台机器的 load、CPU
使用率、平均 RT、入口 QPS
和并发线程数等几个维度监控应用指标，让系统尽可能跑在最大吞吐量的同时保证系统整体的稳定性。&lt;/p&gt;
&lt;p&gt;系统保护规则是应用整体维度的，而不是资源维度的，并且&lt;strong&gt;仅对入口流量生效&lt;/strong&gt;。入口流量指的是进入应用的流量（EntryType.IN），比如
Web 服务或 Dubbo 服务端接收的请求，都属于入口流量。&lt;/p&gt;
&lt;h1 id=&#34;gateway&#34;&gt;---04-GateWay&lt;/h1&gt;
&lt;h3 id=&#34;一认识gateway&#34;&gt;一、认识GateWay&lt;/h3&gt;
&lt;h4 id=&#34;spring-cloud的gateway&#34;&gt;1、 Spring Cloud的Gateway&lt;/h4&gt;
&lt;p&gt;1、Spring Cloud的Gateway是什么&lt;/p&gt;
&lt;p&gt;首先来看一个微服务架构图：&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\image-20240507095522777.png&#34;
alt=&#34;image-20240507095522777&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;image-20240507095522777&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;在上面的架构图中，我们的服务包括：内部服务Service A和内部服务Service
B，这两个服务都是集群部署，每个服务部署了3个实例，他们都会通过Eureka
Server注册中心注册与订阅服务，而Open
Service是一个对外的服务，也是集群部署，外部调用方通过负载均衡设备调用Open
Service服务，比如负载均衡使用Nginx，这样的实现是否合理，或者是否有更好的实现方式呢？接下来我们主要围绕该问题展开讨论。&lt;/p&gt;
&lt;p&gt;1、如果我们的微服务中有很多个独立服务都要对外提供服务，那么我们要如何去管理这些接口？特别是当项目非常庞大的情况下要如何管理？&lt;/p&gt;
&lt;p&gt;2、在微服务中，一个独立的系统被拆分成了很多个独立的服务，为了确保安全，权限管理也是一个不可回避的问题，如果在每一个服务上都添加上相同的权限验证代码来确保系统不被非法访问，那么工作量也就太大了，而且维护也非常不方便。&lt;/p&gt;
&lt;p&gt;为了解决上述问题，微服务架构中提出了API网关的概念，它就像一个安检站一样，所有外部的请求都需要经过它的调度与过滤，然后API网关来实现请求路由、负载均衡、权限验证等功能；&lt;/p&gt;
&lt;p&gt;那么Spring Cloud这个一站式的微服务开发框架基于Netflix
Zuul实现了Spring Cloud Zuul，采用Spring Cloud
Zuul即可实现一套API网关服务。&lt;/p&gt;
&lt;p&gt;2、Spring Cloud Gateway简介&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;你们项目里面 用的什么网关？ gateway zuul&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它是Spring
Cloud&lt;strong&gt;官方&lt;/strong&gt;提供的用来取代&lt;strong&gt;zuul（netflix）&lt;/strong&gt;的新一代网关组件&lt;/p&gt;
&lt;p&gt;（zuul：1.0 , 2.0
，zuul的本质，&lt;strong&gt;一组过滤器，根据自定义的过滤器顺序来执行，本质就是web组件&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;Zuul1.0 使用的是BIO（Blocking IO） tomcat7.0以前都是BIO 性能一般&lt;/p&gt;
&lt;p&gt;Zuul2.0 性能好NIO&lt;/p&gt;
&lt;p&gt;它基于spring5.x，springboot2.x和ProjectReactor等技术。&lt;/p&gt;
&lt;p&gt;它的目地是让&lt;strong&gt;路由更加简单，灵活，还提供了一些强大的过滤器功能&lt;/strong&gt;，例如：熔断、限流、重试,自义定过滤器等
token校验ip黑名单等&lt;/p&gt;
&lt;p&gt;SpringCloud Gateway作为Spring
Cloud生态的网关，目标是替代Zuul，在SpringCloud2.0以上的版本中，没有对新版本的zuul2.0以上的最新高性能版本进行集成，仍然还是使用的zuul1.x[可以看项目依赖找到]非Reactor模式的老版本。而为了提升网关的性能，SpringCloud
Gateway是基于webFlux
框架实现的，而webFlux框架底层则使用了高性能的Reactor模式通信框架的Netty&lt;/p&gt;
&lt;p&gt;NIO(非阻塞式io) BIO 你只需要了解网关能做什么？ 网关里面写什么代码
就可以了&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\image-20240507095601997.png&#34;
alt=&#34;image-20240507095601997&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;image-20240507095601997&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;3、工作流程&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\image-20240507095704824.png&#34;
alt=&#34;image-20240507095704824&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;image-20240507095704824&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;客户端向springcloud Gateway 发出请求&lt;/p&gt;
&lt;p&gt;然后在 Gateway Handler Mapping 中找到与请求相匹配的路由，将其发送到
Gateway Web Handler。&lt;/p&gt;
&lt;p&gt;Handler
再通过指定的过滤器来将请求发送到我们实际的服务的业务逻辑，然后返回。&lt;/p&gt;
&lt;p&gt;过滤器之间用虚线分开是因为过滤器可能会在发送请求之前【pre】或之后【post】执行业务逻辑，对其进行加强或处理。&lt;/p&gt;
&lt;p&gt;Filter在 【pre】
类型的过滤器可以做参数校验、权限校验、流量监控、日志输出、协议转换等&lt;/p&gt;
&lt;p&gt;在【post】
类型的过滤器中可以做响应内容、响应头的修改、日志的输出，流量监控等有着非常重要的作用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总结：Gateway 的核心逻辑也就是 路由转发 +
执行过滤器链&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;4、三大核心概念&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Route（路由）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;路由信息的组成：&lt;/p&gt;
&lt;p&gt;由一个ID、一个目的URL、一组断言工厂、一组Filter组成。&lt;/p&gt;
&lt;p&gt;如果路由断言为真，说明请求URL和配置路由匹配。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Predicate（断言）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Java 8中的断言函数。 lambda 四大接口
供给形，消费性，函数型，断言型&lt;/p&gt;
&lt;p&gt;Spring Cloud Gateway中的断言函数输入类型是Spring
5.0框架中的ServerWebExchange。Spring Cloud
Gateway的断言函数允许开发者去定义匹配来自于Http
Request中的任何信息比如请求头和参数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Filter（过滤）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个标准的Spring WebFilter。 Web三大组件(servlet listener filter) mvc
interceptor&lt;/p&gt;
&lt;p&gt;Spring Cloud Gateway中的Filter分为两种类型的Filter，分别是Gateway
Filter和Global Filter。过滤器Filter将会对请求和响应进行修改处理。&lt;/p&gt;
&lt;p&gt;一个是针对某一个路由的filter 对某一个接口做限流&lt;/p&gt;
&lt;p&gt;一个是针对全局的filter token ip黑名单&lt;/p&gt;
&lt;h1 id=&#34;rocketmq&#34;&gt;---05-RocketMQ&lt;/h1&gt;
&lt;h3 id=&#34;一rocketmq概述&#34;&gt;一、RocketMQ概述&lt;/h3&gt;
&lt;h4 id=&#34;什么是消息队列&#34;&gt;1、什么是消息队列&lt;/h4&gt;
&lt;h4 id=&#34;为什么要使用消息队列&#34;&gt;2、为什么要使用消息队列&lt;/h4&gt;
&lt;h4 id=&#34;rocketmq基本概念16条&#34;&gt;3、RocketMQ基本概念（16条）&lt;/h4&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;&lt;p&gt;消息模型（Message Model）&lt;/p&gt;
&lt;p&gt;​ RocketMQ主要由 Producer、Broker、Consumer 三部分组成，其中Producer
负责生产消息，Consumer 负责消费消息，Broker 负责存储消息。Broker
在实际部署过程中对应一台服务器，每个 Broker
可以存储多个Topic的消息，每个Topic的消息也可以分片存储于不同的
Broker。Message Queue
用于存储消息的物理地址，每个Topic中的消息地址存储于多个 Message Queue
中。ConsumerGroup 由多个Consumer 实例构成。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;消息生产者（Producer）&lt;/p&gt;
&lt;p&gt;​
负责生产消息，一般由业务系统负责生产消息。一个消息生产者会把业务应用系统里产生的消息发送到broker服务器。RocketMQ提供多种发送方式，同步发送、异步发送、顺序发送、单向发送。同步和异步方式均需要Broker返回确认信息，单向发送不需要。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;消息消费者（Consumer）&lt;/p&gt;
&lt;p&gt;​
负责消费消息，一般是后台系统负责异步消费。一个消息消费者会从Broker服务器拉取消息、并将其提供给应用程序。从用户应用的角度而言提供了两种消费形式：拉取式消费、推动式消费。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;主题（Topic）&lt;/p&gt;
&lt;p&gt;​
表示一类消息的集合，每个主题包含若干条消息，每条消息只能属于一个主题，是RocketMQ进行消息订阅的基本单位。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;代理服务器（Broker Server）&lt;/p&gt;
&lt;p&gt;​
消息中转角色，负责存储消息、转发消息。代理服务器在RocketMQ系统中负责接收从生产者发送来的消息并存储、同时为消费者的拉取请求作准备。代理服务器也存储消息相关的元数据，包括消费者组、消费进度偏移和主题和队列消息等。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;名字服务（Name Server）&lt;/p&gt;
&lt;p&gt;​
名称服务充当路由消息的提供者。生产者或消费者能够通过名字服务查找各主题相应的Broker
IP列表。多个Namesrv实例组成集群，但相互独立，没有信息交换。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;拉取式消费（Pull Consumer）&lt;/p&gt;
&lt;p&gt;​
Consumer消费的一种类型，应用通常主动调用Consumer的拉消息方法从Broker服务器拉消息、主动权由应用控制。一旦获取了批量消息，应用就会启动消费过程。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;推动式消费（Push Consumer）&lt;/p&gt;
&lt;p&gt;​
Consumer消费的一种类型，该模式下Broker收到数据后会主动推送给消费端，该消费模式一般实时性较高。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;生产者组（Producer Group）&lt;/p&gt;
&lt;p&gt;​
同一类Producer的集合，这类Producer发送&lt;strong&gt;同一类消息且发送逻辑一致&lt;/strong&gt;。如果发送的是事务消息且原始生产者在发送之后崩溃，则Broker服务器会联系同一生产者组的其他生产者实例以提交或回溯消费。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;消费者组（Consumer Group）&lt;/p&gt;
&lt;p&gt;​
同一类Consumer的集合，这类Consumer通常&lt;strong&gt;消费同一类消息且消费逻辑一致&lt;/strong&gt;。消费者组使得在消息消费方面，实现负载均衡和容错的目标变得非常容易。要注意的是，&lt;strong&gt;消费者组的消费者实例必须订阅完全相同的Topic&lt;/strong&gt;。RocketMQ
支持两种消息模式：集群消费（Clustering）和广播消费（Broadcasting）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;集群消费（Clustering）&lt;/p&gt;
&lt;p&gt;​ 集群消费模式下,相同Consumer
Group的每个Consumer实例平均分摊消息。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;广播消费（Broadcasting）&lt;/p&gt;
&lt;p&gt;​ 广播消费模式下，相同Consumer
Group的每个Consumer实例都接收全量的消息。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;普通顺序消息（Normal Ordered Message）&lt;/p&gt;
&lt;p&gt;​ 普通顺序消费模式下，消费者通过同一个消息队列（ Topic 分区，称作
Message Queue）
收到的消息是有顺序的，不同消息队列收到的消息则可能是无顺序的。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;严格顺序消息（Strictly Ordered Message）&lt;/p&gt;
&lt;p&gt;​ 严格顺序消息模式下，消费者收到的所有消息均是有顺序的。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;消息（Message）&lt;/p&gt;
&lt;p&gt;​
消息系统所传输信息的物理载体，生产和消费数据的最小单位，每条消息必须属于一个主题。RocketMQ中每个消息拥有唯一的Message
ID，且可以携带具有业务标识的Key。系统提供了通过Message
ID和Key查询消息的功能。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;标签（Tag）&lt;/p&gt;
&lt;p&gt;​
为消息设置的标志，用于同一主题下区分不同类型的消息。来自同一业务单元的消息，可以根据不同业务目的在同一主题下设置不同标签。标签能够有效地保持代码的清晰度和连贯性，并优化RocketMQ提供的查询系统。消费者可以根据Tag实现对不同子主题的不同消费逻辑，实现更好的扩展性。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;rocketmq特性&#34;&gt;4、RocketMQ特性&lt;/h4&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;&lt;p&gt;订阅与发布&lt;/p&gt;
&lt;p&gt;​
消息的发布是指某个生产者向某个topic发送消息；消息的订阅是指某个消费者关注了某个topic中带有某些tag的消息，进而从该topic消费数据。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;消息顺序&lt;/p&gt;
&lt;p&gt;​
消息有序指的是一类消息消费时，能按照发送的顺序来消费。例如：一个订单产生了三条消息分别是订单创建、订单付款、订单完成。消费时要按照这个顺序消费才能有意义，但是同时订单之间是可以并行消费的。RocketMQ可以严格的保证消息有序。&lt;/p&gt;
&lt;p&gt;顺序消息分为&lt;strong&gt;全局顺序消息&lt;/strong&gt;与&lt;strong&gt;分区顺序消息&lt;/strong&gt;，全局顺序是指某个Topic下的所有消息都要保证顺序；部分顺序消息只要保证每一组消息被顺序消费即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全局顺序 对于指定的一个
Topic，所有消息按照严格的先入先出（FIFO）的顺序进行发布和消费。
适用场景：性能要求不高，所有的消息严格按照 FIFO
原则进行消息发布和消费的场景&lt;/li&gt;
&lt;li&gt;分区顺序 对于指定的一个 Topic，所有消息根据 sharding key
进行区块分区。 同一个分区内的消息按照严格的 FIFO 顺序进行发布和消费。
Sharding key 是顺序消息中用来区分不同分区的关键字段，和普通消息的 Key
是完全不同的概念。 适用场景：性能要求高，以 sharding key
作为分区字段，在同一个区块中严格的按照 FIFO
原则进行消息发布和消费的场景。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;消息过滤&lt;/p&gt;
&lt;p&gt;​
RocketMQ的&lt;strong&gt;消费者可以根据Tag进行消息过滤&lt;/strong&gt;，也支持&lt;strong&gt;自定义属性过滤&lt;/strong&gt;。消息过滤目前是在Broker端实现的，优点是减少了对于Consumer无用消息的网络传输，缺点是增加了Broker的负担、而且实现相对复杂。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;消息可靠性&lt;/p&gt;
&lt;p&gt;​ RocketMQ支持消息的高可靠，影响消息可靠性的几种情况：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;Broker非正常关闭&lt;/li&gt;
&lt;li&gt;Broker异常Crash&lt;/li&gt;
&lt;li&gt;OS Crash&lt;/li&gt;
&lt;li&gt;机器掉电，但是能立即恢复供电情况&lt;/li&gt;
&lt;li&gt;机器无法开机（可能是cpu、主板、内存等关键设备损坏）&lt;/li&gt;
&lt;li&gt;磁盘设备损坏&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;1)、2)、3)、4)
四种情况都属于硬件资源可立即恢复情况，RocketMQ在这四种情况下能保证消息不丢，或者丢失少量数据（依赖刷盘方式是同步还是异步）。&lt;/p&gt;
&lt;p&gt;5)、6)属于单点故障，且无法恢复，一旦发生，在此单点上的消息全部丢失。RocketMQ在这两种情况下，通过异步复制，可保证99%的消息不丢，但是仍然会有极少量的消息可能丢失。通过同步双写技术可以完全避免单点，同步双写势必会影响性能，适合对消息可靠性要求极高的场合，例如与Money相关的应用。注：RocketMQ从3.0版本开始支持同步双写。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;至少一次&lt;/p&gt;
&lt;p&gt;​ 至少一次(At least
Once)指每个消息必须投递一次。Consumer先Pull消息到本地，消费完成后，才向服务器返回ack，如果没有消费一定不会ack消息，所以RocketMQ可以很好的支持此特性。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;回溯消费&lt;/p&gt;
&lt;p&gt;​
回溯消费是指Consumer已经消费成功的消息，由于业务上需求需要重新消费，要支持此功能，Broker在向Consumer投递成功消息后，消息仍然需要保留。并且重新消费一般是按照时间维度，例如由于Consumer系统故障，恢复后需要重新消费1小时前的数据，那么Broker要提供一种机制，可以按照时间维度来回退消费进度。RocketMQ支持按照时间回溯消费，时间维度精确到毫秒。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;事务消息&lt;/p&gt;
&lt;p&gt;​ RocketMQ事务消息（Transactional
Message）是&lt;strong&gt;指应用本地事务和发送消息操作可以被定义到全局事务中，要么同时成功，要么同时失败。&lt;/strong&gt;RocketMQ的事务消息提供类似
X/Open XA
的分布事务功能，通过事务消息能达到分布式事务的最终一致。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;定时消息&lt;/p&gt;
&lt;p&gt;​
定时消息（延迟队列）是指消息发送到broker后，不会立即被消费，等待特定时间投递给真正的topic。
broker有配置项messageDelayLevel，默认值为“1s 5s 10s 30s 1m 2m 3m 4m 5m
6m 7m 8m 9m 10m 20m 30m 1h
2h”，18个level。可以配置自定义messageDelayLevel。注意，messageDelayLevel是broker的属性，不属于某个topic。发消息时，设置delayLevel等级即可：msg.setDelayLevel(level)。level有以下三种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;level == 0，消息为非延迟消息&lt;/li&gt;
&lt;li&gt;1&amp;lt;=level&amp;lt;=maxLevel，消息延迟特定时间，例如level==1，延迟1s&lt;/li&gt;
&lt;li&gt;level &amp;gt; maxLevel，则level== maxLevel，例如level==20，延迟2h&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;定时消息会暂存在名为SCHEDULE_TOPIC_XXXX的topic中，并根据delayTimeLevel存入特定的queue，queueId
= delayTimeLevel –
1，即一个queue只存相同延迟的消息，保证具有相同发送延迟的消息能够顺序消费。broker会调度地消费SCHEDULE_TOPIC_XXXX，将消息写入真实的topic。&lt;/p&gt;
&lt;p&gt;需要注意的是，定时消息会在第一次写入和调度写入真实topic时都会计数，因此发送数量、tps都会变高。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;消息重试&lt;/p&gt;
&lt;p&gt;​
Consumer消费消息失败后，要提供一种重试机制，令消息再消费一次。Consumer消费消息失败通常可以认为有以下几种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由于消息本身的原因，例如反序列化失败，消息数据本身无法处理（例如话费充值，当前消息的手机号被注销，无法充值）等。这种错误通常需要跳过这条消息，再消费其它消息，而这条失败的消息即使立刻重试消费，99%也不成功，所以最好提供一种定时重试机制，即过10秒后再重试。&lt;/li&gt;
&lt;li&gt;由于依赖的下游应用服务不可用，例如db连接不可用，外系统网络不可达等。遇到这种错误，即使跳过当前失败的消息，消费其他消息同样也会报错。这种情况建议应用sleep
30s，再消费下一条消息，这样可以减轻Broker重试消息的压力。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RocketMQ会为每个消费组都设置一个Topic名称为“%RETRY%+consumerGroup”的重试队列（这里需要注意的是，这个Topic的重试队列是针对消费组，而不是针对每个Topic设置的），用于暂时保存因为各种异常而导致Consumer端无法消费的消息。考虑到异常恢复起来需要一些时间，会为重试队列设置多个重试级别，每个重试级别都有与之对应的重新投递延时，重试次数越多投递延时就越大。RocketMQ对于重试消息的处理是先保存至Topic名称为“SCHEDULE_TOPIC_XXXX”的延迟队列中，后台定时任务按照对应的时间进行Delay后重新保存至“%RETRY%+consumerGroup”的重试队列中。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;消息重投&lt;/p&gt;
&lt;p&gt;​
生产者在发送消息时，同步消息失败会重投，异步消息有重试，oneway没有任何保证。&lt;strong&gt;消息重投保证消息尽可能发送成功、不丢失，但可能会造成消息重复，消息重复在RocketMQ中是无法避免的问题。&lt;/strong&gt;消息重复在一般情况下不会发生，当出现消息量大、网络抖动，消息重复就会是大概率事件。另外，生产者主动重发、consumer负载变化也会导致重复消息。如下方法可以设置消息重试策略：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;retryTimesWhenSendFailed:同步发送失败重投次数，默认为2，因此生产者会最多尝试发送retryTimesWhenSendFailed
+
1次。不会选择上次失败的broker，尝试向其他broker发送，最大程度保证消息不丢。超过重投次数，抛出异常，由客户端保证消息不丢。当出现RemotingException、MQClientException和部分MQBrokerException时会重投。&lt;/li&gt;
&lt;li&gt;retryTimesWhenSendAsyncFailed:异步发送失败重试次数，异步重试不会选择其他broker，仅在同一个broker上做重试，不保证消息不丢。&lt;/li&gt;
&lt;li&gt;retryAnotherBrokerWhenNotStoreOK:消息刷盘（主或备）超时或slave不可用（返回状态非SEND_OK），是否尝试发送到其他broker，默认false。十分重要消息可以开启。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;流量控制&lt;/p&gt;
&lt;p&gt;​
生产者流控，因为broker处理能力达到瓶颈；消费者流控，因为消费能力达到瓶颈。&lt;/p&gt;
&lt;p&gt;生产者流控：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;commitLog文件被锁时间超过osPageCacheBusyTimeOutMills时，参数默认为1000ms，返回流控。&lt;/li&gt;
&lt;li&gt;如果开启transientStorePoolEnable ==
true，且broker为异步刷盘的主机，且transientStorePool中资源不足，拒绝当前send请求，返回流控。&lt;/li&gt;
&lt;li&gt;broker每隔10ms检查send请求队列头部请求的等待时间，如果超过waitTimeMillsInSendQueue，默认200ms，拒绝当前send请求，返回流控。&lt;/li&gt;
&lt;li&gt;broker通过拒绝send 请求方式实现流量控制。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意，生产者流控，不会尝试消息重投。&lt;/p&gt;
&lt;p&gt;消费者流控：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;消费者本地缓存消息数超过pullThresholdForQueue时，默认1000。&lt;/li&gt;
&lt;li&gt;消费者本地缓存消息大小超过pullThresholdSizeForQueue时，默认100MB。&lt;/li&gt;
&lt;li&gt;消费者本地缓存消息跨度超过consumeConcurrentlyMaxSpan时，默认2000。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;消费者流控的结果是降低拉取频率。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;死信队列&lt;/p&gt;
&lt;p&gt;​
死信队列用于&lt;strong&gt;处理无法被正常消费的消息&lt;/strong&gt;。当一条消息初次消费失败，消息队列会自动进行消息重试；达到最大重试次数后，若消费依然失败，则表明消费者在正常情况下无法正确地消费该消息，此时，消息队列
不会立刻将消息丢弃，而是将其发送到该消费者对应的特殊队列中。&lt;/p&gt;
&lt;p&gt;RocketMQ将这种正常情况下无法被消费的消息称为死信消息（Dead-Letter
Message），将存储死信消息的特殊队列称为死信队列（Dead-Letter
Queue）。在RocketMQ中，可以通过使用console控制台对死信队列中的消息进行重发来使得消费者实例再次进行消费。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;seata&#34;&gt;---06-Seata&lt;/h1&gt;
&lt;h3 id=&#34;一分布式事务介绍&#34;&gt;一、分布式事务介绍&lt;/h3&gt;
&lt;p&gt;分布式事务是指事务的参与者、支持事务的服务器、资源服务器以及事务管理器分别位于不同的分布式系统的不同节点之上。&lt;/p&gt;
&lt;p&gt;例如订单服务添加订单后，需要调用远程商品服务完成减库存操作，这时如何确保添加订单和减少库存的2个SQL要么全部执行要么全部不执行？&lt;/p&gt;
&lt;p&gt;由于2个SQL写操作不在同一事务范围内，因此正常情况无法确保2个事务同时提交或同时回滚，这就会出现数据不一致的现象。这种情况就需要使用分布式事务框来解决这个问题。&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\image-20240507101415093.png&#34;
alt=&#34;image-20240507101415093&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;image-20240507101415093&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&#34;二seata介绍&#34;&gt;二、Seata介绍&lt;/h3&gt;
&lt;p&gt;Seata
是一款开源的分布式事务解决方案，致力于提供高性能和简单易用的分布式事务服务。Seata
将为用户提供了 AT、TCC、SAGA 和 XA
事务模式，为用户打造一站式的分布式解决方案。&lt;/p&gt;
&lt;p&gt;官网地址&lt;a
href=&#34;https://seata.io/zh-cn&#34;&gt;https://seata.io/zh-cn/&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;相关术语&#34;&gt;1、相关术语&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;TC (Transaction Coordinator) -&lt;/strong&gt;
&lt;strong&gt;事务协调者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;维护全局和分支事务的状态，驱动全局事务提交或回滚。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TM (Transaction Manager) -&lt;/strong&gt;
&lt;strong&gt;事务管理器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;定义全局事务的范围：开始全局事务、提交或回滚全局事务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RM (Resource Manager) -&lt;/strong&gt;
&lt;strong&gt;资源管理器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;管理分支事务处理的资源，与TC交谈以注册分支事务和报告分支事务的状态，并驱动分支事务提交或回滚。&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\image-20240507101504277.png&#34;
alt=&#34;image-20240507101504277&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;image-20240507101504277&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h4 id=&#34;at模式&#34;&gt;2、AT模式&lt;/h4&gt;
&lt;p&gt;1、前提&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于支持本地 ACID 事务的关系型数据库。&lt;/li&gt;
&lt;li&gt;Java 应用，通过 JDBC 访问数据库。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2、整体机制&lt;/p&gt;
&lt;p&gt;两阶段提交协议：&lt;/p&gt;
&lt;p&gt;一阶段：业务数据和回滚日志记录在同一个本地事务中提交，释放本地锁和连接资源。&lt;/p&gt;
&lt;p&gt;二阶段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;提交异步化，非常快速地完成。&lt;/li&gt;
&lt;li&gt;回滚通过一阶段的回滚日志进行反向补偿。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3、写隔离&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一阶段本地事务提交前，需要确保先拿到 &lt;strong&gt;全局锁&lt;/strong&gt; 。&lt;/li&gt;
&lt;li&gt;拿不到 &lt;strong&gt;全局锁&lt;/strong&gt; ，不能提交本地事务。&lt;/li&gt;
&lt;li&gt;拿 &lt;strong&gt;全局锁&lt;/strong&gt;
的尝试被限制在一定范围内，超出范围将放弃，并回滚本地事务，释放本地锁。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以一个示例来说明：&lt;/p&gt;
&lt;p&gt;两个全局事务 tx1 和 tx2，分别对 a 表的 m 字段进行更新操作，m 的初始值
1000。&lt;/p&gt;
&lt;p&gt;tx1 先开始，开启本地事务，拿到本地锁，更新操作 m = 1000 - 100 =
900。本地事务提交前，先拿到该记录的 &lt;strong&gt;全局锁&lt;/strong&gt;
，本地提交释放本地锁。 tx2 后开始，开启本地事务，拿到本地锁，更新操作 m
= 900 - 100 = 800。本地事务提交前，尝试拿该记录的
&lt;strong&gt;全局锁&lt;/strong&gt; ，tx1 全局提交前，该记录的全局锁被 tx1 持有，tx2
需要重试等待 &lt;strong&gt;全局锁&lt;/strong&gt; 。&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\image-20240507101742335.png&#34;
alt=&#34;image-20240507101742335&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;image-20240507101742335&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;tx1 二阶段全局提交，释放 &lt;strong&gt;全局锁&lt;/strong&gt; 。tx2 拿到
&lt;strong&gt;全局锁&lt;/strong&gt; 提交本地事务。&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\image-20240507101755671.png&#34;
alt=&#34;image-20240507101755671&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;image-20240507101755671&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;如果 tx1 的二阶段全局回滚，则 tx1
需要重新获取该数据的本地锁，进行反向补偿的更新操作，实现分支的回滚。&lt;/p&gt;
&lt;p&gt;此时，如果 tx2 仍在等待该数据的
&lt;strong&gt;全局锁&lt;/strong&gt;，同时持有本地锁，则 tx1
的分支回滚会失败。分支的回滚会一直重试，直到 tx2 的
&lt;strong&gt;全局锁&lt;/strong&gt; 等锁超时，放弃 &lt;strong&gt;全局锁&lt;/strong&gt;
并回滚本地事务释放本地锁，tx1 的分支回滚最终成功。&lt;/p&gt;
&lt;p&gt;因为整个过程 &lt;strong&gt;全局锁&lt;/strong&gt; 在 tx1 结束前一直是被 tx1
持有的，所以不会发生 &lt;strong&gt;脏写&lt;/strong&gt; 的问题。&lt;/p&gt;
&lt;p&gt;4、读隔离&lt;/p&gt;
&lt;p&gt;在数据库本地事务隔离级别 &lt;strong&gt;读已提交（Read Committed）&lt;/strong&gt;
或以上的基础上，Seata（AT 模式）的默认全局隔离级别是
&lt;strong&gt;读未提交（Read Uncommitted）&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;如果应用在特定场景下，必需要求全局的 &lt;strong&gt;读已提交&lt;/strong&gt; ，目前
Seata 的方式是通过 SELECT FOR UPDATE 语句的代理。&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\image-20240507101813112.png&#34;
alt=&#34;image-20240507101813112&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;image-20240507101813112&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;SELECT FOR UPDATE 语句的执行会申请 &lt;strong&gt;全局锁&lt;/strong&gt; ，如果
&lt;strong&gt;全局锁&lt;/strong&gt; 被其他事务持有，则释放本地锁（回滚 SELECT FOR
UPDATE 语句的本地执行）并重试。这个过程中，查询是被 block 住的，直到
&lt;strong&gt;全局锁&lt;/strong&gt; 拿到，即读取的相关数据是 &lt;strong&gt;已提交&lt;/strong&gt;
的，才返回。&lt;/p&gt;
&lt;p&gt;出于总体性能上的考虑，Seata 目前的方案并没有对所有 SELECT
语句都进行代理，仅针对 FOR UPDATE 的 SELECT 语句。&lt;/p&gt;
&lt;p&gt;5、工作机制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;以一个示例来说明整个 AT 分支的工作过程。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;业务表：&lt;code&gt;product&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;```&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- AT 事务的业务逻辑：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- update` product `set` `name` = `&amp;#x27;GTS&amp;#x27;` `where` `name` = `&amp;#x27;TXC&amp;#x27;`;`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- #### 1 一阶段&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- 过程：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- \1. 解析 SQL：得到 SQL 的类型（UPDATE），表（product），条件（where name = &amp;#x27;TXC&amp;#x27;）等相关的信息。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- \2. 查询前镜像：根据解析得到的条件信息，生成查询语句，定位数据。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- select id, name, since from product where name = &amp;#x27;TXC&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- 得到前镜像：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- `  ```&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- \3. 执行业务 SQL：更新这条记录的 name 为 &amp;#x27;GTS&amp;#x27;。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- \4. 查询后镜像：根据前镜像的结果，通过 **主键** 定位数据。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- ```&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  select id, name, since from product where id = 1;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;\5. 插入回滚日志：把前后镜像数据以及业务 SQL
相关的信息组成一条回滚日志记录，插入到 &lt;code&gt;UNDO_LOG&lt;/code&gt;
表中。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;`&lt;code&gt;&amp;#123;&lt;/code&gt; &#34;branchId&#34;:
641789253,&lt;code&gt;&#34;undoItems&#34;: [&amp;#123;&lt;/code&gt; &#34;afterImage&#34;:
{&lt;code&gt;&#34;rows&#34;: [&amp;#123;&lt;/code&gt; &#34;fields&#34;: [{&lt;code&gt;&#34;name&#34;: &#34;id&#34;,&lt;/code&gt; &#34;type&#34;:
4,&lt;code&gt;&#34;value&#34;: 1&lt;/code&gt; }, {&lt;code&gt;&#34;name&#34;: &#34;name&#34;,&lt;/code&gt; &#34;type&#34;:
12,&lt;code&gt;&#34;value&#34;: &#34;GTS&#34;&lt;/code&gt; }, {&lt;code&gt;&#34;name&#34;: &#34;since&#34;,&lt;/code&gt; &#34;type&#34;:
12,&lt;code&gt;&#34;value&#34;: &#34;2014&#34;&lt;/code&gt; }]&lt;code&gt;&amp;#125;],&lt;/code&gt; &#34;tableName&#34;:
&#34;product&#34;&lt;code&gt;&amp;#125;,&lt;/code&gt; &#34;beforeImage&#34;: {&lt;code&gt;&#34;rows&#34;: [&amp;#123;&lt;/code&gt;
&#34;fields&#34;: [{&lt;code&gt;&#34;name&#34;: &#34;id&#34;,&lt;/code&gt; &#34;type&#34;: 4,&lt;code&gt;&#34;value&#34;: 1&lt;/code&gt;
}, {&lt;code&gt;&#34;name&#34;: &#34;name&#34;,&lt;/code&gt; &#34;type&#34;: 12,&lt;code&gt;&#34;value&#34;: &#34;TXC&#34;&lt;/code&gt;
}, {&lt;code&gt;&#34;name&#34;: &#34;since&#34;,&lt;/code&gt; &#34;type&#34;:
12,&lt;code&gt;&#34;value&#34;: &#34;2014&#34;&lt;/code&gt; }]&lt;code&gt;&amp;#125;],&lt;/code&gt; &#34;tableName&#34;:
&#34;product&#34;&lt;code&gt;&amp;#125;,&lt;/code&gt; &#34;sqlType&#34;: &#34;UPDATE&#34;&lt;code&gt;&amp;#125;],&lt;/code&gt; &#34;xid&#34;:
&#34;xid:xxx&#34;``} &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- \6. 提交前，向 TC 注册分支：申请 `product` 表中，主键值等于 1 的记录的 **全局锁** 。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- \7. 本地事务提交：业务数据的更新和前面步骤中生成的 UNDO LOG 一并提交。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- \8. 将本地事务提交的结果上报给 TC。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- #### 2 二阶段-回滚&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- 1. 收到 TC 的分支回滚请求，开启一个本地事务，执行如下操作。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  2. 通过 XID 和 Branch ID 查找到相应的 UNDO LOG 记录。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  3. 数据校验：拿     UNDO LOG 中的后镜与当前数据进行比较，如果有不同，说明数据被当前全局事务之外的动作做了修改。这种情况，需要根据配置策略来做处理，详细的说明在另外的文档中介绍。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4. 根据 UNDO     LOG 中的前镜像和业务 SQL 的相关信息生成并执行回滚的语句：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- ```&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          update product set name = &amp;#x27;TXC&amp;#x27; where id = 1;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;提交本地事务。并把本地事务的执行结果（即分支事务回滚的结果）上报给
TC&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&#34;二阶段-提交&#34;&gt;3 二阶段-提交&lt;/h4&gt;&lt;/li&gt;
&lt;li&gt;&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;收到 TC
的分支提交请求，把请求放入一个异步任务的队列中，马上返回提交成功的结果给
TC。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;异步任务阶段的分支提交请求将异步和批量地删除相应 UNDO LOG
记录&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;tcc模式&#34;&gt;3、TCC模式&lt;/h4&gt;
&lt;p&gt;一个分布式的全局事务，整体是 &lt;strong&gt;两阶段提交&lt;/strong&gt;
的模型。全局事务是由若干分支事务组成的，分支事务要满足
&lt;strong&gt;两阶段提交&lt;/strong&gt;
的模型要求，即需要每个分支事务都具备自己的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一阶段 prepare 行为&lt;/li&gt;
&lt;li&gt;二阶段 commit 或 rollback 行为&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;saga模式&#34;&gt;4、SAGA模式&lt;/h4&gt;
&lt;p&gt;Saga模式是SEATA提供的长事务解决方案，在Saga模式中，业务流程中每个参与者都提交本地事务，当出现某一个参与者失败则补偿前面已经成功的参与者，一阶段正向服务和二阶段补偿服务都由业务开发实现。&lt;/p&gt;
&lt;h4 id=&#34;xa模式&#34;&gt;5、XA模式&lt;/h4&gt;
&lt;p&gt;前提&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持XA 事务的数据库。&lt;/li&gt;
&lt;li&gt;Java 应用，通过 JDBC 访问数据库。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;整体机制&lt;/p&gt;
&lt;p&gt;在 Seata 定义的分布式事务框架内，利用事务资源（数据库、消息服务等）对
XA 协议的支持，以 XA 协议的机制来管理分支事务的一种 事务模式。&lt;/p&gt;
&lt;h1 id=&#34;sky-walking链式跟踪&#34;&gt;---07-Sky Walking链式跟踪&lt;/h1&gt;
&lt;h3 id=&#34;一sky-walking简介&#34;&gt;一、Sky Walking简介&lt;/h3&gt;
&lt;h4 id=&#34;主要功能-1&#34;&gt;1、主要功能&lt;/h4&gt;
&lt;p&gt;Sky Walking
是针对&lt;strong&gt;分布式系统的APM（应用性能监控）系统&lt;/strong&gt;，特别针对微服务、cloud
native 和容器化(Docker, Kubernetes, Mesos)架构，
其核心是个&lt;strong&gt;分布式追踪系统&lt;/strong&gt;。它通过探针自动收集所需的指标，且&lt;strong&gt;基于探针技术对应用零侵入零耦合&lt;/strong&gt;。主要提供以下功能：&lt;/p&gt;
&lt;p&gt;\1. 服务、服务实例和端点(如：单个HTTP URI）的性能指标分析&lt;/p&gt;
&lt;p&gt;\2. 根本原因分析&lt;/p&gt;
&lt;p&gt;\3. 服务拓扑图分析&lt;/p&gt;
&lt;p&gt;\4. 服务和端点依赖分析&lt;/p&gt;
&lt;p&gt;\5. 慢服务和慢端点检测&lt;/p&gt;
&lt;p&gt;\6. 分布式追踪和上下文传播&lt;/p&gt;
&lt;p&gt;\7. 告警&lt;/p&gt;
&lt;h4 id=&#34;总体框架&#34;&gt;2、总体框架&lt;/h4&gt;
&lt;p&gt;\1. collector：链路数据归集器，数据可以落地MySQL、Elastic
Search等&lt;/p&gt;
&lt;p&gt;\2. agent：探针，使用Java
agent做字节码植入，无侵入式的收集，并通过HTTP或者g
RPC方式发送数据collector&lt;/p&gt;
&lt;p&gt;\3. web ：web可视化平台，用来展示落地的数据&lt;/p&gt;
&lt;h1 id=&#34;spring-security&#34;&gt;---08-Spring Security&lt;/h1&gt;
&lt;h3 id=&#34;一认证授权的基础概念&#34;&gt;一、认证授权的基础概念&lt;/h3&gt;
&lt;h4 id=&#34;什么是认证登录&#34;&gt;1、什么是认证（登录）&lt;/h4&gt;
&lt;p&gt;进入移动互联网时代，大家每天都在刷手机，常用的软件有微信、支付宝、头条等，下边拿微信来举例子说明认证相关的基本概念，在初次使用微信前需要注册成为微信用户，然后输入账号和密码即可登录微信，输入账号和密码登录微信的过程就是认证。&lt;/p&gt;
&lt;p&gt;系统为什么要认证？&lt;/p&gt;
&lt;p&gt;认证是为了保护系统的隐私数据与资源，用户的身份合法方可访问该系统的资源。&lt;/p&gt;
&lt;p&gt;认证
：&lt;strong&gt;用户认证就是判断一个用户的身份是否合法的过程&lt;/strong&gt;，用户去访问系统资源（url接口）时系统要求验证用户的身份信息，身份合法方可继续访问，不合法则拒绝访问。常见的用户身份认证方式有：用户名密码登录，二维码登录，手机短信登录，指纹认证等方式。&lt;/p&gt;
&lt;p&gt;user.getUserByUsername(“zhangsan”)&lt;/p&gt;
&lt;h4 id=&#34;什么是会话&#34;&gt;2、什么是会话&lt;/h4&gt;
&lt;p&gt;用户认证通过后，为了避免用户的每次操作都进行认证可将用户的信息保证在会话中。会话就是系统为了保持当前用户的登录状态所提供的机制，&lt;strong&gt;常见的有基于session方式、基于token方式&lt;/strong&gt;等。&lt;/p&gt;
&lt;p&gt;1 基于session的认证方式&lt;/p&gt;
&lt;p&gt;它的交互流程是，用户认证成功后，在服务端生成用户相关的数据保存在session(当前会话)中，发给客户端的sesssion_id
存放到 cookie 中，这样用户客户端请求时带上 session_id
就可以验证服务器端是否存在 session
数据，以此完成用户的合法校验，当用户退出系统或session过期销毁时,客户端的session_id也就无效了&lt;/p&gt;
&lt;p&gt;2 基于token方式认证方式&lt;/p&gt;
&lt;p&gt;它的交互流程是，用户认证成功后，服务端生成一个token发给客户端，客户端可以放到
cookie 或 local Storage等存储中，每次请求时带上
token，服务端收到token通过验证后即可确认用户身份。Redis 存的用户信息
&lt;strong&gt;共享session&lt;/strong&gt; （分布式中）&lt;/p&gt;
&lt;p&gt;基于session的认证方式由Servlet规范定制，服务端要存储session信息需要占用内存资源，客户端需要支持cookie；基于token的方式则一般不需要服务端存储token，并且不限制客户端的存储方式。&lt;strong&gt;如今移动互联网时代更多类型的客户端需要接入系统，系统多是采用前后端分离的架构进行实现，所以基于token的方式更适合&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;什么是授权给用户颁发权限&#34;&gt;3、什么是授权（给用户颁发权限）&lt;/h4&gt;
&lt;p&gt;还拿微信来举例子，微信登录成功后用户即可使用微信的功能，比如，发红包、发朋友圈、添加好友等，没有绑定银行卡的用户是无法发送红包的，绑定银行卡的用户才可以发红包，发红包功能、发朋友圈功能都是微信的资源即功能资源，用户拥有发红包功能的权限才可以正常使用发送红包功能，拥有发朋友圈功能的权限才可以使用发朋友圈功能，这个根据用户的权限来控制用户使用资源的过程就是授权。
&lt;strong&gt;鉴权（判断用户是否有这个权限）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;java应用中什么叫资源 url就是资源 （接口就是资源）&lt;/p&gt;
&lt;h4 id=&#34;授权的数据模型rbac&#34;&gt;4、授权的数据模型（RBAC）&lt;/h4&gt;
&lt;p&gt;用户 角色 权限&lt;/p&gt;
&lt;p&gt;如何进行授权即如何对用户访问资源进行控制，首先需要学习授权相关的数据模型。&lt;/p&gt;
&lt;p&gt;授权可简单理解为&lt;strong&gt;Who对What(which)进行How操作&lt;/strong&gt;，包括如下：&lt;/p&gt;
&lt;p&gt;Who，即主体（Subject），主体一般是指用户，也可以是程序，需要访问系统中的资源。
What，即资源（Resource），如系统菜单、页面、按钮、代码方法、系统商品信息、系统订单信息等。系统菜单、页面、按钮、代码方法都属于系统功能资源，对于web系统每个功能资源通常对应一个URL；系统商品信息、系统订单信息都属于实体资源（数据资源），实体资源由资源类型和资源实例组成，比如商品信息为资源类型，商品编号
为001的商品为资源实例。
How，权限/许可（Permission），规定了用户对资源的操作许可，权限离开资源没有意义，如用户查询权限、用户添加权限、某个代码方法的调用权限、编号为001的用户的修改权限等，通过权限可知用户对哪些资源都有哪些操作可。&lt;/p&gt;
&lt;p&gt;主体、资源、权限关系如下图：&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\clip_image002-17150487587261.jpg&#34;
alt=&#34;IMG_256&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;IMG_256&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;主体、资源、权限相关的数据模型如下：&lt;/p&gt;
&lt;p&gt;主体（用户id、账号、密码、...）&lt;/p&gt;
&lt;p&gt;资源（资源id、资源名称、访问地址、...）&lt;/p&gt;
&lt;p&gt;权限（权限id、权限标识、权限名称、资源id、...）&lt;/p&gt;
&lt;p&gt;角色（角色id、角色名称、...）&lt;/p&gt;
&lt;p&gt;角色和权限关系（角色 id、权限id、...）&lt;/p&gt;
&lt;p&gt;主体（用户）和角色关系（用户id、角色id、...）&lt;/p&gt;
&lt;p&gt;主体（用户）、资源、权限关系如下图：&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\clip_image002-17150487703522.jpg&#34;
alt=&#34;IMG_257&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;IMG_257&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;通常企业开发中将资源和权限表合并为一张权限表，如下：&lt;/p&gt;
&lt;p&gt;资源（资源id、资源名称、访问地址、...）&lt;/p&gt;
&lt;p&gt;权限（权限id、权限标识、权限名称、资源id、...）&lt;/p&gt;
&lt;p&gt;合并为：&lt;/p&gt;
&lt;p&gt;权限（权限id、权限标识、权限名称、资源名称、资源访问地址、...）&lt;/p&gt;
&lt;p&gt;修改后数据模型之间的关系如下图：&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\clip_image002-17150487790833.jpg&#34;
alt=&#34;IMG_258&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;IMG_258&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h4 id=&#34;rbac&#34;&gt;5、RBAC&lt;/h4&gt;
&lt;p&gt;用户，角色，权限 本质：就是把权限打包给角色，分配给用户&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RBAC一般指基于角色的访问控制&lt;/strong&gt; 权限 五张表
（最少五张表）&lt;/p&gt;
&lt;p&gt;基于角色的访问控制（RBAC）是实施面向企业安全策略的一种有效的访问控制方式。&lt;/p&gt;
&lt;p&gt;系统的资源访问级别会更加细化&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1 基于角色的访问控制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;RBAC基于角色的访问控制（Role-Based Access
Control）是按角色进行授权，比如：主体的角色为总经理可以查询企业运营报表，查询员工工资信息等&lt;/p&gt;
&lt;p&gt;根据上图中的判断逻辑，授权代码可表示如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;if(主体.hasRole(&#34;总经理角色id&#34;)){&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查询工资&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;}&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果上图中查询工资所需要的角色变化为总经理和部门经理，此时就需要修改判断逻辑为“判断用户的角色是否是总经理或部门经理”，修改代码如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;if(主体.hasRole(&#34;总经理角色id&#34;) ||&lt;/strong&gt;
&lt;strong&gt;主体.hasRole(&#34;部门经理角色id&#34;)){&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查询工资&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;}&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据上边的例子发现，当需要修改角色的权限时就需要修改授权的相关代码，系统可扩展性差。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2 基于权限的访问控制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;RBAC基于资源的访问控制（Resource-Based Access
Control）是按资源（或权限）进行授权，比如：用户必须具有查询工资权限才可以查询员工工资信息等，如下的判断&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;if(主体.hasPermission(&#34;查询工资&#34;) ){&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查询工资&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;}&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;优点：系统设计时定义好查询工资的权限标识，即使查询工资所需要的角色变化为总经理和部门经理也不需要修改授权代码，系统可扩展性强。&lt;/p&gt;
&lt;h3 id=&#34;二spring-security简介&#34;&gt;二、Spring Security简介&lt;/h3&gt;
&lt;p&gt;官网： https://spring.io/projects/spring-security&lt;/p&gt;
&lt;p&gt;中文文档： https://www.springcloud.cc/spring-security.html&lt;/p&gt;
&lt;h4 id=&#34;什么是spring-security&#34;&gt;1、什么是Spring Security&lt;/h4&gt;
&lt;p&gt;Spring
Security是一个能够为基于Spring的企业应用系统提供&lt;strong&gt;声明式（注解）的安全访问控制解决方案的安全框架&lt;/strong&gt;。它提供了一组可以在Spring应用上下文中配置的Bean，充分利用了Spring
IoC，DI（控制反转Inversion of Control ,DI:Dependency Injection
依赖注入）和AOP（面向切面编程）功能，为应用系统提供声明式的安全访问控制功能，减少了为企业系统安全控制编写大量重复代码的工作。&lt;/p&gt;
&lt;p&gt;以上解释来源于百度百科。可以一句话来概括，SpringSecurity
是一个安全框架。&lt;/p&gt;
&lt;h3 id=&#34;三jwt概述&#34;&gt;三、JWT概述&lt;/h3&gt;
&lt;h4 id=&#34;什么是jwt&#34;&gt;1、什么是JWT&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Json web token (JWT)&lt;/strong&gt;,
是&lt;strong&gt;为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准&lt;/strong&gt;（(RFC
7519).该token被设计为&lt;strong&gt;紧凑且安全&lt;/strong&gt;的，特别适用于&lt;strong&gt;分布式站点的单点登录（&lt;/strong&gt;SSO）场景。JWT的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源，也可以增加一些额外的其它业务逻辑所必须的声明信息，该token也可直接被用于认证，也可被加密。&lt;/p&gt;
&lt;p&gt;官网： &lt;a
href=&#34;https://jwt.io/&#34;&gt;&lt;strong&gt;https://jwt.io/&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;跨域认证问题&#34;&gt;2、跨域认证问题&lt;/h4&gt;
&lt;p&gt;互联网服务离不开用户认证。一般流程是下面这样。&lt;/p&gt;
&lt;p&gt;l 用户向服务器发送用户名和密码。&lt;/p&gt;
&lt;p&gt;l
服务器验证通过后，在当前对话（session）里面保存相关数据，比如用户角色、登录时间等等。&lt;/p&gt;
&lt;p&gt;l 服务器向用户返回一个 session_id，写入浏览器的
Cookie。（Cookie不能跨域携带）&lt;/p&gt;
&lt;p&gt;l 用户随后的每一次请求，都会通过 Cookie，将 session_id
传回服务器。&lt;/p&gt;
&lt;p&gt;l 服务器收到 session_id，找到前期保存的数据，由此得知用户的身份。&lt;/p&gt;
&lt;p&gt;这种模式的问题在于，扩展性（scaling）不好。单机当然没有问题，如果是服务器集群，或者是跨域的服务导向架构，就要求
session 数据共享，每台服务器都能够读取 session。&lt;/p&gt;
&lt;p&gt;举例来说，A 网站和 B
网站是同一家公司的关联服务。现在要求，用户只要在其中一个网站登录，再访问另一个网站就会自动登录，请问怎么实现？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一种解决方案是 session&lt;/strong&gt;
&lt;strong&gt;数据持久化&lt;/strong&gt;，写入数据库或别的持久层。各种服务收到请求后，都向持久层请求数据。这种方案的优点是架构清晰，缺点是工程量比较大。另外，持久层万一挂了，就会单点失败。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;另一种方案是服务器索性不保存 session&lt;/strong&gt;
&lt;strong&gt;数据了，所有数据都保存在客户端，每次请求都发回服务器&lt;/strong&gt;。JWT
就是这种方案的一个代表。 服务器不存数据，客户端存，服务器解析就行了&lt;/p&gt;
&lt;h4 id=&#34;jwt原理&#34;&gt;3、JWT原理&lt;/h4&gt;
&lt;p&gt;JWT 的原理是，服务器认证以后，生成一个 JSON
对象，发回给用户，就像下面这样。&lt;/p&gt;
&lt;p&gt;{ &#34;姓名&#34;: &#34;张三&#34;, &#34;角色&#34;: &#34;管理员&#34;, &#34;到期时间&#34;: &#34;2018年7月1日0点0分&#34;
}&lt;/p&gt;
&lt;p&gt;以后，用户与服务端通信的时候，都要发回这个 JSON
对象。服务器完全只靠这个对象认定用户身份。为了防止用户篡改数据，服务器在生成这个对象的时候，会加&lt;strong&gt;上签名&lt;/strong&gt;（详见后文）。&lt;/p&gt;
&lt;p&gt;服务器就不保存任何 session
数据了，也就是说，服务器变成&lt;strong&gt;无状态&lt;/strong&gt;了，从而比较容易实现扩展。&lt;/p&gt;
&lt;h4 id=&#34;jwt数据结构&#34;&gt;4、JWT数据结构&lt;/h4&gt;
&lt;p&gt;实际的 JWT 大概就像下面这样。&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\clip_image002-17150492894634.png&#34;
alt=&#34;IMG_256&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;IMG_256&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;它是一个很长的字符串，中间用点（.）分隔成三个部分。注意，JWT
内部是没有换行的，这里只是为了便于展示，将它写成了几行。&lt;/p&gt;
&lt;p&gt;JWT 的三个部分依次如下。&lt;/p&gt;
&lt;p&gt;面试问题： jwt知道吗？谈谈你的理解（由浅入深的聊）&lt;/p&gt;
&lt;p&gt;Ø Header（头部）&lt;/p&gt;
&lt;p&gt;Ø Payload（负载）&lt;/p&gt;
&lt;p&gt;Ø Signature（签名）&lt;/p&gt;
&lt;p&gt;写成一行，就是下面的样子。&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\clip_image002-17150492956465.png&#34;
alt=&#34;IMG_257&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;IMG_257&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;1、Header&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Header 部分是一个 JSON 对象，描述 JWT
的元数据，通常是下面的样子。&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;attr&#34;&gt;&amp;quot;alg&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;HS256&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;attr&#34;&gt;&amp;quot;typ&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;JWT&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码中，alg属性表示签名的算法（algorithm），默认是 HMAC
SHA256（写成 HS256）；typ属性表示这个令牌（token）的类型（type），JWT
令牌统一写为JWT。&lt;/p&gt;
&lt;p&gt;最后，将上面的 JSON 对象使用 &lt;strong&gt;Base64URL&lt;/strong&gt;
&lt;strong&gt;算法转成字符串&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、Payload&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Payload 部分也是一个 JSON
对象，用来存放&lt;strong&gt;实际需要传递的数据&lt;/strong&gt;。JWT
规定了7个官方字段，供选用。&lt;/p&gt;
&lt;p&gt;iss (issuer)：签发人&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;exp (expiration time)：过期时间&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;sub (subject)：主题&lt;/p&gt;
&lt;p&gt;aud (audience)：受众&lt;/p&gt;
&lt;p&gt;nbf (Not Before)：生效时间&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;iat (Issued At)：签发时间&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;jti (JWT ID)：编号&lt;/p&gt;
&lt;p&gt;除了官方字段，你还可以在这个部分定义私有字段，下面就是一个例子。&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;attr&#34;&gt;&amp;quot;sub&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;1234567890&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;John Doe&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;attr&#34;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意，JWT
默认是不加密的，任何人都可以读到，所以不要把&lt;strong&gt;秘密信息（密码，手机号等）&lt;/strong&gt;放在这个部分。&lt;/p&gt;
&lt;p&gt;这个 JSON 对象也要使用 Base64URL 算法转成字符串。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、Signature（保证数据安全）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Signature 部分是对前两部分的签名，&lt;strong&gt;防止数据篡改&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;钥匙：一个字符串 秘钥 abcdefg 对称加密 非对称加密 A B&lt;/p&gt;
&lt;p&gt;首先，需要指定一个&lt;strong&gt;密钥（secret）&lt;/strong&gt;。这个密钥只有服务器才知道，不能泄露给用户。然后，使用
Header 里面指定的签名算法（默认是 HMAC
SHA256），按照下面的公式产生签名。&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;HMACSHA256(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;base64UrlEncode(header) + &lt;span class=&#34;string&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;base64UrlEncode(payload)&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;secret)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;算出签名以后，把 Header、Payload、Signature
三个部分拼成一个字符串，每个部分之间用&#34;点&#34;（.）分隔，就可以返回给用户。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、Base64URL（转码）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;前面提到，Header 和 Payload 串型化的算法是 Base64URL。这个算法跟
Base64 算法基本类似，但有一些小的不同。&lt;/p&gt;
&lt;p&gt;JWT 作为一个令牌（token），有些场合可能会放到 URL（比如
api.example.com/?token=xxx）。&lt;/p&gt;
&lt;p&gt;Base64 有三个字符+、/和=，在 URL
里面有特殊含义，所以要被替换掉：=被省略、+替换成-，/替换成_ 。这就是
&lt;strong&gt;Base64URL 算法&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;jwt的使用方式重点&#34;&gt;5、JWT的使用方式【重点】&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;客户端收到服务器返回的 JWT，可以储存在 Cookie&lt;/strong&gt;
&lt;strong&gt;里面，也可以储存在 localStorage&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;此后，客户端每次与服务器通信，都要带上这个 JWT。你可以把它放在
Cookie里面自动发送，但是这样不能跨域，所以更好的做法是放在
HTTP请求的头信息Authorization字段里面&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Authorization: Bearer jwt&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;另一种做法是，跨域的时候，JWT&lt;/strong&gt; &lt;strong&gt;就放在
POST&lt;/strong&gt; &lt;strong&gt;请求的数据体里面。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;jwt的特点&#34;&gt;6、JWT的特点&lt;/h4&gt;
&lt;p&gt;JWT 默认是不加密，但也是可以加密的。生成原始 Token
以后，可以用密钥再加密一次。&lt;/p&gt;
&lt;p&gt;JWT 不加密的情况下，不能将秘密数据写入 JWT。&lt;/p&gt;
&lt;p&gt;JWT 不仅可以用于认证，也可以用于交换信息。有效使用
JWT，可以降低服务器查询数据库的次数。&lt;/p&gt;
&lt;p&gt;JWT 的最大缺点是，由于服务器不保存 session
状态，因此无法在使用过程中废止某个 token，或者更改 token
的权限。也就是说，一旦 JWT
签发了，在到期之前就会始终有效，除非服务器部署额外的逻辑（JWT的登出问题）。就是因为服务端无状态了&lt;/p&gt;
&lt;p&gt;正常情况下 修改了密码后就会跳转到登录页面
：修改成功后清空浏览器保存的token了&lt;/p&gt;
&lt;p&gt;后端怎么玩？ 因为服务端不保留token 我用之前的token
还是可以继续访问的&lt;/p&gt;
&lt;p&gt;从有状态（后端也会存一个）的变成无状态的了&lt;/p&gt;
&lt;p&gt;我们就要把它从无状态再变成有状态了&lt;/p&gt;
&lt;p&gt;JWT
本身包含了认证信息，一旦泄露，任何人都可以获得该令牌的所有权限。为了减少盗用，JWT
的有效期应该设置得比较短。对于一些比较重要的权限，使用时应该再次对用户进行认证。&lt;/p&gt;
&lt;p&gt;为了减少盗用，JWT 不应该使用 HTTP 协议明码传输，要使用 HTTPS
协议传输。&lt;/p&gt;
&lt;p&gt;我们颁发一个令牌 用户名称 用户的权限信息 这个令牌2个小时有效&lt;/p&gt;
&lt;p&gt;Jwt只要能解析 就认为你是可用的 做不了 登出 后端不存储用户信息了
后端无状态了&lt;/p&gt;
&lt;h1 id=&#34;docker&#34;&gt;---09-Docker&lt;/h1&gt;
&lt;h3 id=&#34;一docker简介&#34;&gt;一、Docker简介&lt;/h3&gt;
&lt;p&gt;1、什么是Docker&lt;/p&gt;
&lt;p&gt;​
Docker是一个开源项目，&lt;strong&gt;它的目标是实现经量级的操作系统虚拟化解决方案。Docker是一种容器技术。Docker的基础是Linux容器（LXC）等技术。在LXC的基础上Docker进行了进一步的封装，让用户不需要关心容器的管理，使得操作更加简单。用户操作Docker的容器就像操作一个快速轻量级的虚拟机一样简单。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2、Docker设计思想&lt;/p&gt;
&lt;p&gt;​
Docker的思想来自于集装箱，集装箱解决了什么问题？在一艘大船上，可以把货物规整的摆放起来。并且各种各样的货物被集装箱标准化了，集装箱和集装箱之间不会互相影响。那么我就不需要专门运送水果的船和专门运送化学品的船了。只要这些货物在集装箱里封装的好好的，那我就可以用一艘大船把他们都运走。docker就是类似的理念。现在都流行云计算了，云计算就好比大货轮。&lt;/p&gt;
&lt;p&gt;通过Docker能够把
net，php开发的应用作为容器（集装箱）运行。net和php开发的两个应用是各自独立的环境。基于容器（集装箱）可以运行多种应用，redis，mysql，tomcat，centos等等。总之Docker就是集装箱原理。&lt;/p&gt;
&lt;p&gt;3、为什么要使用Docker&lt;/p&gt;
&lt;p&gt;作为一种新兴的虚拟化方式，Docker
跟传统的虚拟化方式相比具有众多的优势。首先，&lt;strong&gt;Docker&lt;/strong&gt;
&lt;strong&gt;容器的启动可以在秒级实现&lt;/strong&gt;，这相比传统的虚拟机方式要快得多。其次，&lt;strong&gt;Docker&lt;/strong&gt;
&lt;strong&gt;对系统资源的利用率很高，一台主机上可以同时运行数千个Docker&lt;/strong&gt;
&lt;strong&gt;容器&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;容器除了运行其中应用外，基本不消耗额外的系统资源，使得应用的性能很高，同时系统的开销尽量小。&lt;/p&gt;
&lt;p&gt;传统虚拟机方式运行10 个不同的应用就要起10 个虚拟机，而Docker
只需要启动10 个隔离的应用即可。具体说来，Docker
在如下几个方面具有较大的优势。&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;更快速的交付和部署&lt;/li&gt;
&lt;li&gt;更轻松的迁移和扩展&lt;/li&gt;
&lt;li&gt;更简单的管理&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;4、Docker的局限&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;&lt;strong&gt;Docker是基于Linux
64bit的，无法在32bit的linux/Windows/unix环境下使用&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;隔离性相比虚拟机之类的虚拟化方案还是有些欠缺，所有容器公用一部分的运行库&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网络管理相对简单&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Docker对磁盘的管理比较有限&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;容器随着用户进程的停止而销毁，容器中的日志等用户数据不便收集&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;二掌握docker说明&#34;&gt;二、【掌握】Docker说明&lt;/h3&gt;
&lt;p&gt;官网 http://www.docker.com&lt;/p&gt;
&lt;p&gt;中文官网 https://docker-cn.com&lt;/p&gt;
&lt;p&gt;仓库（镜像网站） https://hub.docker.com&lt;/p&gt;
</content>
        <category term="微服务框架" scheme="http://example.com/categories/cloud/" />
        <category term="Spring Cloud" scheme="http://example.com/tags/Spring-Cloud/" />
        <updated>2024-06-27T09:42:00.255Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/06/27/post/job/03-%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/</id>
        <title>03-实现图片压缩</title>
        <link rel="alternate" href="http://example.com/2024/06/27/post/job/03-%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/"/>
        <content type="html">&lt;h1 id=&#34;一java实现图片压缩&#34;&gt;一、Java实现图片压缩&lt;/h1&gt;
&lt;h3 id=&#34;简介&#34;&gt;1、简介&lt;/h3&gt;
&lt;p&gt;我们在项目中经常会遇到图片上传的需求，如商品图片，但图片太大的话，在客户端加载太慢影响用户体验，所有一般会将图片进行压缩。&lt;/p&gt;
&lt;h3 id=&#34;实现&#34;&gt;2、实现&lt;/h3&gt;
&lt;h5 id=&#34;添加依赖&#34;&gt;添加依赖&lt;/h5&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;net.coobird&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;thumbnailator&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;0.4.8&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;按质量压缩&#34;&gt;2.1按质量压缩&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.io.File;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.io.FileOutputStream;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; net.coobird.thumbnailator.Thumbnails;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Client&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Thumbnails.of(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;File&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;D:/showqrcode.jpg&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .scale(&lt;span class=&#34;number&#34;&gt;1f&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;//图片大小（长宽）压缩比例 从0-1，1表示原图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .outputQuality(&lt;span class=&#34;number&#34;&gt;0.5f&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;//图片质量压缩比例 从0-1，越接近1质量越好&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .toOutputStream(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;FileOutputStream&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;D:/showqrcode_50.jpg&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;按比例压缩&#34;&gt;2.2按比例压缩&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.io.File;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.io.FileOutputStream;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; net.coobird.thumbnailator.Thumbnails;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Client2&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Thumbnails.of(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;File&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;D:/showqrcode.jpg&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .scale(&lt;span class=&#34;number&#34;&gt;0.5f&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;//图片大小（长宽）压缩 从0按照&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .outputQuality(&lt;span class=&#34;number&#34;&gt;0.5f&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;//图片质量压缩比例 从0-1，越接近1质量越好&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .toOutputStream(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;FileOutputStream&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;D:/showqrcode_50%.jpg&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;按大小和比例缩放&#34;&gt;2.3按大小和比例缩放&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.io.File;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.io.FileOutputStream;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; net.coobird.thumbnailator.Thumbnails;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Client21&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Thumbnails.of(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;File&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;D:/showqrcode.jpg&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .size(&lt;span class=&#34;number&#34;&gt;500&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// 图片比例不变&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .toOutputStream(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;FileOutputStream&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;D:/showqrcode_500_300.jpg&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;按大小缩放&#34;&gt;2.4按大小缩放&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.io.File;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.io.FileOutputStream;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; net.coobird.thumbnailator.Thumbnails;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Client22&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Thumbnails.of(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;File&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;D:/showqrcode.jpg&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .forceSize(&lt;span class=&#34;number&#34;&gt;500&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;//不保持图片比例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .toOutputStream(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;FileOutputStream&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;D:/showqrcode_500_300.jpg&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;旋转&#34;&gt;2.5旋转&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.io.File;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.io.FileOutputStream;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; net.coobird.thumbnailator.Thumbnails;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Client3&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Thumbnails.of(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;File&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;D:/showqrcode.jpg&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .forceSize(&lt;span class=&#34;number&#34;&gt;500&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .rotate(&lt;span class=&#34;number&#34;&gt;90f&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;//向右旋转&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .toOutputStream(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;FileOutputStream&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;D:/showqrcode+90.jpg&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;加水印&#34;&gt;2.6加水印&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.io.File;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.io.IOException;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; javax.imageio.ImageIO;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; net.coobird.thumbnailator.Thumbnails;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; net.coobird.thumbnailator.geometry.Positions;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Client4&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; IOException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Thumbnails.of(&lt;span class=&#34;string&#34;&gt;&amp;quot;D:/showqrcode.jpg&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .size(&lt;span class=&#34;number&#34;&gt;1280&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .watermark(Positions.BOTTOM_RIGHT, ImageIO.read(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;File&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;D:/watermark.jpg&amp;quot;&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;number&#34;&gt;0.5f&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;//位置，水印来源，透明度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .outputQuality(&lt;span class=&#34;number&#34;&gt;0.8f&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .toFile(&lt;span class=&#34;string&#34;&gt;&amp;quot;D:/showqrcode_watermark_bottom_right.jpg&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;裁剪&#34;&gt;2.7裁剪&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.io.IOException;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; net.coobird.thumbnailator.Thumbnails;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; net.coobird.thumbnailator.geometry.Positions;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Client5&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; IOException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Thumbnails.of(&lt;span class=&#34;string&#34;&gt;&amp;quot;D:/showqrcode.jpg&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .sourceRegion(Positions.CENTER, &lt;span class=&#34;number&#34;&gt;800&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;600&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;//位置，宽，高&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .size(&lt;span class=&#34;number&#34;&gt;800&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;600&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .keepAspectRatio(&lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .toFile(&lt;span class=&#34;string&#34;&gt;&amp;quot;D:/showqrcode_region_center.jpg&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;拼接&#34;&gt;2.8拼接&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.awt.Graphics;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.awt.image.BufferedImage;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.io.ByteArrayInputStream;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.io.ByteArrayOutputStream;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.io.File;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.io.FileOutputStream;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.io.IOException;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.util.ArrayList;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.util.List;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.util.Objects;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; javax.imageio.ImageIO;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Client6&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;byte&lt;/span&gt;[] bytes = joinImages(&lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;File&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;D:/showqrcode.jpg&amp;quot;&lt;/span&gt;), &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;File&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;D:/showqrcode.jpg&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Objects.nonNull(bytes)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;ByteArrayInputStream&lt;/span&gt;(bytes).transferTo(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;FileOutputStream&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;D:/showqrcode_join.jpg&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   * 将多张图片拼接成一张&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; horizontal 是否为水平拼接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; files 文件列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   * &lt;span class=&#34;doctag&#34;&gt;@return&lt;/span&gt; 拼接后的文件字节数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;byte&lt;/span&gt;[] joinImages(&lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; horizontal, File... files) &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; IOException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Objects.isNull(files) || files.length == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    List&amp;lt;BufferedImage&amp;gt; imageList = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;ArrayList&lt;/span&gt;&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (File file : files) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;type&#34;&gt;BufferedImage&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;image&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; ImageIO.read(file);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      imageList.add(image);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;height&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; imageList.get(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;).getHeight();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;width&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; imageList.get(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;).getWidth();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (horizontal) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      width = imageList.stream().mapToInt(BufferedImage::getWidth).sum();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      height = imageList.stream().mapToInt(BufferedImage::getHeight).sum();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//创建拼接后的图片画布，参数分别为宽，高，类型，这里我们使用RGB3元色类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;BufferedImage&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;resultImage&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BufferedImage&lt;/span&gt;(width, height, BufferedImage.TYPE_INT_RGB);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;Graphics&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;graphics&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; resultImage.getGraphics();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;previousWidth&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;previousHeight&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (BufferedImage image : imageList) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;//向画布上画图片&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      graphics.drawImage(image, previousWidth, previousHeight, &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (horizontal) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        previousWidth += image.getWidth();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        previousHeight += image.getHeight();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;ByteArrayOutputStream&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;ByteArrayOutputStream&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ImageIO.write(resultImage, &lt;span class=&#34;string&#34;&gt;&amp;quot;jpg&amp;quot;&lt;/span&gt;, output);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; output.toByteArray();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;
&lt;p&gt;图片经过以上处理之后都会去除EXIF信息，关于EXIF详情，请查看&lt;a
href=&#34;https://www.cnblogs.com/strongmore/p/14146799.html&#34;&gt;java获取图片的GPS信息&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;
&lt;p&gt;&lt;a
href=&#34;https://www.cnblogs.com/linkstar/p/7412012.html&#34;&gt;java使用google开源工具实现图片压缩&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="工作日志" scheme="http://example.com/categories/job/" />
        <category term="job" scheme="http://example.com/tags/job/" />
        <updated>2024-06-27T09:28:06.503Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/06/25/post/game/VALORANT/errorCode/</id>
        <title>无畏契约错误代码[解决方案]</title>
        <link rel="alternate" href="http://example.com/2024/06/25/post/game/VALORANT/errorCode/"/>
        <content type="html">&lt;h1 id=&#34;无畏契约错误代码解决方案&#34;&gt;无畏契约错误代码解决方案&lt;/h1&gt;
&lt;h1 id=&#34;港服-riot&#34;&gt;港服 Riot&lt;/h1&gt;
&lt;h3 id=&#34;错误代码van79&#34;&gt;错误代码Van79&lt;/h3&gt;
&lt;p&gt;解释：van79的问题就是没有成功启用拳头反作弊的程序&lt;/p&gt;
&lt;p&gt;方案：重新打开反作弊程序&lt;/p&gt;
&lt;p&gt;1、添加信任区，允许vgc服务自启动，【设置】-【应用】-【启动】-【找到vanguard
tray notification】。&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\006V2BDqly8hrgw9lsysdj30qs0mjgnx.jpg&#34;
alt=&#34;alt&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;alt&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;2、然后我们在【我的电脑】-【右键管理】-【服务和应用程序】-【服务】找到vgc，接着在vgc里右键属性，启动类型（自动），服务状态（启动），最后应用确定，再重启电脑即可&lt;/p&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\006V2BDqly8hrgwa8a5j4j30rs0jv40l.jpg&#34;
alt=&#34;alt&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;alt&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\006V2BDqly8hrgwaehla7j30rs0jvdkn.jpg&#34;
alt=&#34;alt&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;alt&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img data-src=&#34;D:\Pictures\typore\006V2BDqly8hrgwajskqlj30di0gtjsg.jpg&#34;
alt=&#34;alt&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;alt&lt;/figcaption&gt;
&lt;/figure&gt;
</content>
        <category term="游戏" scheme="http://example.com/categories/game/" />
        <category term="VALORANT" scheme="http://example.com/categories/game/VALORANT/" />
        <category term="game" scheme="http://example.com/tags/game/" />
        <category term="VALORANT" scheme="http://example.com/tags/VALORANT/" />
        <category term="无畏契约" scheme="http://example.com/tags/%E6%97%A0%E7%95%8F%E5%A5%91%E7%BA%A6/" />
        <updated>2024-06-25T14:56:45.954Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/06/18/post/job/02-quartz%E5%AE%9A%E6%97%B6%E8%B0%83%E5%BA%A6%E4%BB%BB%E5%8A%A1/</id>
        <title>02-quartz定时调度任务</title>
        <link rel="alternate" href="http://example.com/2024/06/18/post/job/02-quartz%E5%AE%9A%E6%97%B6%E8%B0%83%E5%BA%A6%E4%BB%BB%E5%8A%A1/"/>
        <content type="html">&lt;h2 id=&#34;quartz概念&#34;&gt;1、Quartz概念&lt;/h2&gt;
&lt;p&gt;Quartz就是一个基于Java实现的任务调度框架，用于执行你想要执行的任何任务。
Quartz是OpenSymphony开源组织在Job
scheduling（定时调度）领域的开源项目，它可以与J2EE和J2SE应用程序相结合也可以单独使用。&lt;/p&gt;
&lt;p&gt;Quartz是开源且具有丰富特性的任务调度库，能够集成任何的Java应用。它能创建简单的或者复杂的调度任务，以执行上十，上百，上千，上万的任务。任务job被定义为标准的Java组件。能工执行任何你想要实现的功能。Quartz调度框架包含许多企业级的特性，如JTA事务，集群的支持。&lt;/p&gt;
&lt;p&gt;官网：http://www.quartz-scheduler.org/&lt;/p&gt;
&lt;h2 id=&#34;quartz运行环境&#34;&gt;2、Quartz运行环境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Quartz可以运行嵌入在另一个独立的应用程序中&lt;/li&gt;
&lt;li&gt;Quartz可以在应用程序服务器（或servlet容器）内被实例化，bin参与事务&lt;/li&gt;
&lt;li&gt;Quartz可以作为一个独立的程序运行（其自己的java虚拟机内），可以通过RMI使用&lt;/li&gt;
&lt;li&gt;Quartz可以被实例化，作为独立的项目集群（负载平衡和故障转移功能），用于作业执行&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;quartz使用的设计模式&#34;&gt;3、Quartz使用的设计模式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Builder模式&lt;/li&gt;
&lt;li&gt;Factory模式&lt;/li&gt;
&lt;li&gt;组件模式&lt;/li&gt;
&lt;li&gt;链式编程&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;quartz学习的核心概念&#34;&gt;4、Quartz学习的核心概念&lt;/h3&gt;
&lt;p&gt;1、任务job&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;job就是你想实现的任务类，每一个job必须实现org.quartz.job接口，且只需实现接口定义的execute()方法&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2、触发器trigger&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Trigger为你执行任务的触发器（定时）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Trigger主要包含两个SimpleTrigger和CronTrigger两种&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3、调度器Scheduler&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Scheduler为定时任务调度，它会将任务Job及触发器Trigger整合起来，负责基于Trigger设定的时间来执行Job&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;体系结构&#34;&gt;5、体系结构&lt;/h3&gt;
&lt;figure&gt;
&lt;img
src=&#34;https://dlink.host/wx4.sinaimg.cn/large/006V2BDqly8hqta4ht60fj30nt0gotag.jpg&#34;
title=&#34;这是体系结构照片&#34; alt=&#34;这里是 alt&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;这里是 alt&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&#34;quartz的几个常用api&#34;&gt;6、Quartz的几个常用API&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Scheduler：用于定时调度程序交互的主程序接口。Scheduler调度程序：任务执行计划表，只有安排进执行计划的任务Job【通过scheduler.scheduleJob方法安排进执行任务】，当它预先定义的执行时间到了的时候（任务出发trigger）该任务才会被执行&lt;/li&gt;
&lt;li&gt;Job：预先定义的，希望在未来某个使劲能被调度程序执行的任务类，可自定义&lt;/li&gt;
&lt;li&gt;JobDetail：使用JobDetail来定义定时任务的实例，JobDetail实例是通过JobBuilder类创建的&lt;/li&gt;
&lt;li&gt;JobDataMap：可以包含不限量（序列化的）的数对象，在Job实例执行的时候，可以使用其中的数据；JobDataMap是Java
Map接口的一个实现，额外增加了一些便于存取基本类型数据的方法&lt;/li&gt;
&lt;li&gt;Trigger：触发器，Trigger对象是用来触发执行Job的。当调度一个Job时，我们实例一个触发器然后调整他的属性来满足Job执行的条件。表明任务在什么时候会执行。【定义了一个已经被安排的任务将会在什么时候执行的时间条件】&lt;/li&gt;
&lt;li&gt;JobBuilder：用于声明一个任务实例，也可以定义关于该任务的详情比如任务名，组名等。通过JobBuilder声明的实例将会作为一个实际执行的任务。&lt;/li&gt;
&lt;li&gt;TriggerBuilder：触发器创建器，用于创建触发器trigger实例&lt;/li&gt;
&lt;li&gt;JobListener、TriggerListener、SchedulerListener监听器，用于对组件的监听&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;入门案例&#34;&gt;7、入门案例&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;构建一个任务类实现Job接口，重写execute（执行方法）方法，在执行方法中编写定时调度需要实现的逻辑。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;创建一个main方法，在main方法中构建任务实例和处方实例有调度器实例进行绑定并开启任务。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;pom.xml&#34;&gt;1、pom.xml&lt;/h5&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.quartz-scheduler&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;quartz&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.3.0&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.quartz-scheduler&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;quartz-jobs&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.3.0&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.projectlombok&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;lombok&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;任务类&#34;&gt;2、任务类&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; 任务类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloJob&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Job&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobExecutionContext jobExecutionContext)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; JobExecutionException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd hh:mm:ss&amp;quot;&lt;/span&gt;).format(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Date&lt;/span&gt;()) + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 任务被执行了&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;调度器&#34;&gt;3、调度器&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; 调度器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloSchedulerDemo&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; SchedulerException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//从调度工厂中获取调度器实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Scheduler&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;scheduler&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; StdSchedulerFactory.getDefaultScheduler();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过JobBuilder构建一个任务实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobDetail&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetail&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; JobBuilder.newJob(HelloJob.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//设置任务的唯一实例名称和任务组名称组名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(&lt;span class=&#34;string&#34;&gt;&amp;quot;job1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;group1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//构建实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过TriggerBuilder构建触发器实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;SimpleTrigger&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;trigger&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; TriggerBuilder.newTrigger()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//设置触发器唯一实例名称和触发器的组名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(&lt;span class=&#34;string&#34;&gt;&amp;quot;trigger1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;group1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//执行计划，每五秒执行一次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withSchedule(SimpleScheduleBuilder.repeatSecondlyForever(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//立即执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .startNow()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//构建实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//调度器绑定任务实例和触发器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.scheduleJob(jobDetail,trigger);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//开启定时任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;启动程序观察控制台输出内容&lt;/p&gt;
&lt;h3 id=&#34;job和jobdetail的关系介绍&#34;&gt;8、Job和JobDetail的关系介绍&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Job：工作任务调度接口，任务类需要实现的接口。该接口中定义了execute方法，类似JDK提供的TimeTask类的run方法。在这里面编写任务执行的业务逻辑&lt;/li&gt;
&lt;li&gt;Job实例在Quartz中的生命周期：每次调度器执行Job时，它在调用execute方法前会创建一个新的Job实例，当调度完成后，管理的Job对象实例将会被释放，释放的实例会被垃圾回收机制回收&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloJob&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Job&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;HelloJob&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;实例被创建了&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobExecutionContext jobExecutionContext)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; JobExecutionException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd hh:mm:ss&amp;quot;&lt;/span&gt;).format(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Date&lt;/span&gt;()) + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 任务被执行了&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img
src=&#34;D:\Pictures\typore\006V2BDqly8hqtasabnb0j31a1094jx4.jpg&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JobDetail：JobDetail为Job实例提供了许多设置属性，已经JobDetaMap成员变量属性，它用来存储特定Job实例的状态信息，调度器需要借助于JobDetail对象来添加Job实例【JobDetail中重要的属性：name[任务实例的唯一标识名称]、group[任务调度实例的组名]、jobClass[任务类信息]、jobDataMap】&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloSchedulerDemo&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; SchedulerException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//从调度工厂中获取调度器实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Scheduler&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;scheduler&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; StdSchedulerFactory.getDefaultScheduler();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过JobBuilder构建一个任务实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobDetail&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetail&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; JobBuilder.newJob(HelloJob.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//设置任务的唯一实例名称和任务组名称组名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(&lt;span class=&#34;string&#34;&gt;&amp;quot;job1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;group1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//构建实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//jobDataMap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobDataMap&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDataMap&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobDetail.getJobDataMap();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//任务实例的唯一标识名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobDetail.getKey().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//任务调度实例的组名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;group&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobDetail.getKey().getGroup();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//任务类信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;clazzName&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobDetail.getKey().getClass().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;jobDataMap:&amp;#123;&amp;#125;&amp;quot;&lt;/span&gt;, jobDataMap);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;任务实例的唯一标识名称：&amp;quot;&lt;/span&gt;+name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;任务调度实例的组名：&amp;quot;&lt;/span&gt;+group);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;任务类信息：&amp;quot;&lt;/span&gt;+clazzName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过TriggerBuilder构建触发器实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;SimpleTrigger&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;trigger&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; TriggerBuilder.newTrigger()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//设置触发器唯一实例名称和触发器的组名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(&lt;span class=&#34;string&#34;&gt;&amp;quot;trigger1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;group1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//执行计划，每五秒执行一次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withSchedule(SimpleScheduleBuilder.repeatSecondlyForever(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//立即执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .startNow()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//构建实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//调度器绑定任务实例和触发器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.scheduleJob(jobDetail,trigger);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//开启定时任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img
src=&#34;D:\Pictures\typore\006V2BDqly8hqtatu9hkoj30yi07dq5n.jpg&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;jobexecutioncontext的介绍&#34;&gt;9、JobExecutionContext的介绍&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;当Scheduler调用一个Job，就会将JobExecutionContext传递给Job的execute()方法&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Job能通过JobExecuteContext对象访问到Quartz&lt;code&gt;运行时的环境&lt;/code&gt;以及&lt;code&gt;Job本身的明细数据&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;获取JobDetail相关信息、获取Trigger相关信息、获取Job类本身的信息&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; 任务类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloJob&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Job&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobExecutionContext jobExecutionContext)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; JobExecutionException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过JobExecutionContext获取JobDetail&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobDetail&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetail&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobExecutionContext.getJobDetail();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobKey&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobKey&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobDetail.getKey();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetailName&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobKey.getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetailGroup&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobKey.getGroup();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobClazzNameJobDetail&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobKey.getClass().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;任务实例的唯一标识名称：&amp;quot;&lt;/span&gt; + jobDetailName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;任务实例的组名：&amp;quot;&lt;/span&gt; + jobDetailGroup);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;任务实例绑定的任务类信息：&amp;quot;&lt;/span&gt; + jobClazzNameJobDetail);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;-----------------------------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过JobExecutionContext获取Trigger&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Trigger&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;trigger&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobExecutionContext.getTrigger();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;TriggerKey&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;triggerKey&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; trigger.getKey();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;triggerKeyName&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; triggerKey.getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;triggerKeyGroup&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; triggerKey.getGroup();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;triggerClazzName&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; triggerKey.getClass().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;触发器的唯一标识名称：&amp;quot;&lt;/span&gt; + triggerKeyName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;触发器的组名：&amp;quot;&lt;/span&gt; + triggerKeyGroup);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;触发器绑定的任务类信息：&amp;quot;&lt;/span&gt; + triggerClazzName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;-----------------------------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过JobExecutionContext&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobClazzName&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobExecutionContext.getClass().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;job类相关的信息：&amp;quot;&lt;/span&gt;+jobClazzName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;-----------------------------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd hh:mm:ss&amp;quot;&lt;/span&gt;).format(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Date&lt;/span&gt;()) + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 任务被执行了&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;jobdatamap介绍&#34;&gt;10、JobDataMap介绍&lt;/h3&gt;
&lt;h5 id=&#34;使用map获取&#34;&gt;1、使用Map获取&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;在进行任务调度时，JobDataMap存储在JobExecutionContent中，非常方便获取&lt;/li&gt;
&lt;li&gt;JobDataMap可以用来存储任何可序列化的数据对象，当Job实例对象被执行时这些参数都会传递给它&lt;/li&gt;
&lt;li&gt;JobDataMap实现了JDK的Map接口，并且添加了非常方便的方法来存储基本数据类型&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; 调度器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloSchedulerDemo&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; SchedulerException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//从调度工厂中获取调度器实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Scheduler&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;scheduler&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; StdSchedulerFactory.getDefaultScheduler();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过JobBuilder构建一个任务实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobDetail&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetail&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; JobBuilder.newJob(HelloJob.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//设置任务的唯一实例名称和任务组名称组名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(&lt;span class=&#34;string&#34;&gt;&amp;quot;job1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;group1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//设置jobDataMap数据  &amp;lt;&amp;lt;===============&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .usingJobData(&lt;span class=&#34;string&#34;&gt;&amp;quot;message&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;勇敢牛牛、不怕困难&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//构建实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过TriggerBuilder构建触发器实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;SimpleTrigger&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;trigger&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; TriggerBuilder.newTrigger()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//设置触发器唯一实例名称和触发器的组名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(&lt;span class=&#34;string&#34;&gt;&amp;quot;trigger1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;group1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//设置jobDataMap数据   &amp;lt;&amp;lt;===============&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .usingJobData(&lt;span class=&#34;string&#34;&gt;&amp;quot;username&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;张三&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//执行计划，每五秒执行一次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withSchedule(SimpleScheduleBuilder.repeatSecondlyForever(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//立即执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .startNow()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//构建实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//调度器绑定任务实例和触发器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.scheduleJob(jobDetail,trigger);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//开启定时任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; 任务类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloJob&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Job&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobExecutionContext jobExecutionContext)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; JobExecutionException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过JobExecutionContext获取JobDetail&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobDetail&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetail&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobExecutionContext.getJobDetail();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobKey&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobKey&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobDetail.getKey();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetailName&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobKey.getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetailGroup&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobKey.getGroup();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobClazzNameJobDetail&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobKey.getClass().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;任务实例的唯一标识名称：&amp;quot;&lt;/span&gt; + jobDetailName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;任务实例的组名：&amp;quot;&lt;/span&gt; + jobDetailGroup);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;任务实例绑定的任务类信息：&amp;quot;&lt;/span&gt; + jobClazzNameJobDetail);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;-----------------------------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过JobExecutionContext获取Trigger&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Trigger&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;trigger&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobExecutionContext.getTrigger();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;TriggerKey&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;triggerKey&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; trigger.getKey();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;triggerKeyName&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; triggerKey.getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;triggerKeyGroup&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; triggerKey.getGroup();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;triggerClazzName&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; triggerKey.getClass().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;触发器的唯一标识名称：&amp;quot;&lt;/span&gt; + triggerKeyName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;触发器的组名：&amp;quot;&lt;/span&gt; + triggerKeyGroup);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;触发器绑定的任务类信息：&amp;quot;&lt;/span&gt; + triggerClazzName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;-----------------------------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过JobExecutionContext&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobClazzName&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobExecutionContext.getClass().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;job类相关的信息：&amp;quot;&lt;/span&gt;+jobClazzName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;-----------------------------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//获取JobDetail中JobDataMap中的message内容  &amp;lt;&amp;lt;===============&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobDataMap&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDataMap&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobDetail.getJobDataMap();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobDataMap.getString(&lt;span class=&#34;string&#34;&gt;&amp;quot;message&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;从JobDetail-JobDataMap中或到的message内容为：&amp;quot;&lt;/span&gt; + message);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//获取Trigger中JobDataMap中的username内容   &amp;lt;&amp;lt;===============&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobDataMap&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;triggerJobDataMap&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; trigger.getJobDataMap();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;username&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; triggerJobDataMap.getString(&lt;span class=&#34;string&#34;&gt;&amp;quot;username&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;从Trigger-JobDataMap中获取到的username内容为：&amp;quot;&lt;/span&gt; + username);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;-----------------------------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd hh:mm:ss&amp;quot;&lt;/span&gt;).format(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Date&lt;/span&gt;()) + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 任务被执行了&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img
src=&#34;D:\Pictures\typore\006V2BDqly8hqtay96pxjj310u07l77f.jpg&#34; /&gt;&lt;/p&gt;
&lt;h5
id=&#34;job实现类中添加setter方法对应jobdatamap的键值quartz框架默认的jobfactory实现类在初始化job实例对象时会自动的调用这些setter方法&#34;&gt;2、Job实现类中添加setter方法对应JobDataMap的键值，Quartz框架默认的JobFactory实现类在初始化Job实例对象时会自动的调用这些setter方法&lt;/h5&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;调度器的内容是不变的。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;注意：如果任务实例和触发器的JobDataMap中使用的是同一个key那么触发器的JobDataMap值会覆盖掉任务实例的值&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; 任务类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloJob&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Job&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; String message;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; String username;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;setMessage&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String message)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.message = message;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;setUsername&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String username)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.username = username;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobExecutionContext jobExecutionContext)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; JobExecutionException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过JobExecutionContext获取JobDetail&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobDetail&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetail&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobExecutionContext.getJobDetail();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobKey&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobKey&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobDetail.getKey();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetailName&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobKey.getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetailGroup&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobKey.getGroup();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobClazzNameJobDetail&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobKey.getClass().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;任务实例的唯一标识名称：&amp;quot;&lt;/span&gt; + jobDetailName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;任务实例的组名：&amp;quot;&lt;/span&gt; + jobDetailGroup);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;任务实例绑定的任务类信息：&amp;quot;&lt;/span&gt; + jobClazzNameJobDetail);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;-----------------------------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过JobExecutionContext获取Trigger&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Trigger&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;trigger&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobExecutionContext.getTrigger();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;TriggerKey&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;triggerKey&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; trigger.getKey();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;triggerKeyName&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; triggerKey.getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;triggerKeyGroup&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; triggerKey.getGroup();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;triggerClazzName&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; triggerKey.getClass().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;触发器的唯一标识名称：&amp;quot;&lt;/span&gt; + triggerKeyName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;触发器的组名：&amp;quot;&lt;/span&gt; + triggerKeyGroup);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;触发器绑定的任务类信息：&amp;quot;&lt;/span&gt; + triggerClazzName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;-----------------------------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过JobExecutionContext&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobClazzName&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobExecutionContext.getClass().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;job类相关的信息：&amp;quot;&lt;/span&gt;+jobClazzName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;-----------------------------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//获取JobDetail中JobDataMap中的message内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//JobDataMap jobDataMap = jobDetail.getJobDataMap();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//String message = jobDataMap.getString(&amp;quot;message&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;从JobDetail-JobDataMap中或到的message内容为：&amp;quot;&lt;/span&gt; + message);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//获取Trigger中JobDataMap中的username内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//JobDataMap triggerJobDataMap = trigger.getJobDataMap();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//String username = triggerJobDataMap.getString(&amp;quot;username&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;从Trigger-JobDataMap中获取到的username内容为：&amp;quot;&lt;/span&gt; + username);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;-----------------------------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd hh:mm:ss&amp;quot;&lt;/span&gt;).format(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Date&lt;/span&gt;()) + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 任务被执行了&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img
src=&#34;D:\Pictures\typore\006V2BDqly8hqtazsfjwpj310y08cwi2.jpg&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;获取其他&#34;&gt;3、获取其他&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//获取任务的本次执行时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Date&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;fireTime&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobExecutionContext.getFireTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//获取任务的下次执行时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Date&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;nextFireTime&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobExecutionContext.getNextFireTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;任务的本次执行时间：&amp;quot;&lt;/span&gt; + &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd hh:mm:ss&amp;quot;&lt;/span&gt;).format(fireTime));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;任务的下次执行时间：&amp;quot;&lt;/span&gt; + &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd hh:mm:ss&amp;quot;&lt;/span&gt;).format(nextFireTime));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;有状态的job和无状态的job&#34;&gt;11、有状态的Job和无状态的Job&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;有状态的Job可以理解为多次Job调用期间可以持有一些状态信息，这些状态信息存储在JobDataMap中，而默认的无状态Job每次调用时都会创建一个新的JobDataMap&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5
id=&#34;job默认是无状态的通过如下示例查看&#34;&gt;1、Job默认是无状态的，通过如下示例查看&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;package&lt;/span&gt; com.scholartang.quartz.main;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; com.scholartang.quartz.job.HelloJob;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; lombok.extern.slf4j.Slf4j;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; org.quartz.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; org.quartz.impl.StdSchedulerFactory;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; org.quartz.impl.triggers.CoreTrigger;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; 调度器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloSchedulerDemo&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; SchedulerException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//从调度工厂中获取调度器实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Scheduler&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;scheduler&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; StdSchedulerFactory.getDefaultScheduler();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过JobBuilder构建一个任务实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobDetail&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetail&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; JobBuilder.newJob(HelloJob.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//设置任务的唯一实例名称和任务组名称组名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(&lt;span class=&#34;string&#34;&gt;&amp;quot;job1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;group1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//设置jobDataMap数据   &amp;lt;&amp;lt;===============&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .usingJobData(&lt;span class=&#34;string&#34;&gt;&amp;quot;count&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//构建实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过TriggerBuilder构建触发器实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;SimpleTrigger&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;trigger&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; TriggerBuilder.newTrigger()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//设置触发器唯一实例名称和触发器的组名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(&lt;span class=&#34;string&#34;&gt;&amp;quot;trigger1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;group1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//执行计划，每五秒执行一次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withSchedule(SimpleScheduleBuilder.repeatSecondlyForever(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//立即执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .startNow()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//构建实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//调度器绑定任务实例和触发器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.scheduleJob(jobDetail,trigger);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//开启定时任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; 任务类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloJob&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Job&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; Integer count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;setCount&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Integer count)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.count = count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobExecutionContext jobExecutionContext)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; JobExecutionException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过JobExecutionContext获取JobDetail&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobDetail&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetail&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobExecutionContext.getJobDetail();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        jobDetail.getJobDataMap().put(&lt;span class=&#34;string&#34;&gt;&amp;quot;count&amp;quot;&lt;/span&gt;,count);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd hh:mm:ss&amp;quot;&lt;/span&gt;).format(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Date&lt;/span&gt;()) + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 任务被执行了&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;当前count的值为：&amp;quot;&lt;/span&gt; + count);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img
src=&#34;D:\Pictures\typore\006V2BDqly8hqtb29vk90j30va0dste1.jpg&#34; /&gt;&lt;/p&gt;
&lt;h5
id=&#34;通过persistjobdataafterexecution注解将job设置为由状态的&#34;&gt;2、通过@PersistJobDataAfterExecution注解将Job设置为由状态的&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; 任务类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@PersistJobDataAfterExecution&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloJob&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Job&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; Integer count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;setCount&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Integer count)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.count = count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobExecutionContext jobExecutionContext)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; JobExecutionException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过JobExecutionContext获取JobDetail&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobDetail&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetail&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobExecutionContext.getJobDetail();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        jobDetail.getJobDataMap().put(&lt;span class=&#34;string&#34;&gt;&amp;quot;count&amp;quot;&lt;/span&gt;,count);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd hh:mm:ss&amp;quot;&lt;/span&gt;).format(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Date&lt;/span&gt;()) + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 任务被执行了&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;当前count的值为：&amp;quot;&lt;/span&gt; + count);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img
src=&#34;D:\Pictures\typore\006V2BDqly8hqtb51a8ltj30rp0ivwlr.jpg&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;如果Job类没有添加@PersistJobDataAfterExecution注解，每次调用时都会创建一个新的JobDataMap。不会累加count的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;如果Job类添加了@PersistJobDataAfterExecution注解，每次调用期间都会持有一些状态信息，。会累加count的值&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;trigger触发器的介绍&#34;&gt;12、Trigger触发器的介绍&lt;/h3&gt;
&lt;p&gt;&lt;img
src=&#34;D:\Pictures\typore\006V2BDqly8hqtb60xbe2j30v40e075w.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;上图即是Quartz的触发器类型，常用的为SimpleTriggerImpl，CronTriggerImpl&lt;/p&gt;
&lt;h5 id=&#34;simpletriggerimpl的使用&#34;&gt;1、SimpleTriggerImpl的使用&lt;/h5&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;设置触发的开始时间和结束时间及执行计划&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; 任务类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@PersistJobDataAfterExecution&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloJobTrigger&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Job&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobExecutionContext jobExecutionContext)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; JobExecutionException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Trigger&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;trigger&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; jobExecutionContext.getTrigger();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobKey&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobKey&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; trigger.getJobKey();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;触发器名称：&amp;quot;&lt;/span&gt; + jobKey.getName() + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 触发器组名：&amp;quot;&lt;/span&gt; + jobKey.getGroup() );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;触发器开始执行时间：&amp;quot;&lt;/span&gt; + &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd hh:mm:ss&amp;quot;&lt;/span&gt;).format(trigger.getStartTime()) + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 触发器结束执行时间：&amp;quot;&lt;/span&gt; + &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd hh:mm:ss&amp;quot;&lt;/span&gt;).format(trigger.getEndTime()));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd hh:mm:ss&amp;quot;&lt;/span&gt;).format(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Date&lt;/span&gt;()) + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 任务被执行了&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; 调度器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloSchedulerDemo&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; SchedulerException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//开始时间 &amp;amp; 结束时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Date&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;startTime&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Date&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;endTime&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        endTime.setTime(endTime.getTime() + &lt;span class=&#34;number&#34;&gt;20000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//从调度工厂中获取调度器实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Scheduler&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;scheduler&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; StdSchedulerFactory.getDefaultScheduler();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过JobBuilder构建一个任务实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobDetail&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetail&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; JobBuilder.newJob(HelloJobTrigger.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//设置任务的唯一实例名称和任务组名称组名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(&lt;span class=&#34;string&#34;&gt;&amp;quot;job1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;group1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//构建实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过TriggerBuilder构建触发器实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;SimpleTrigger&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;trigger&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; TriggerBuilder.newTrigger()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//设置触发器唯一实例名称和触发器的组名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(&lt;span class=&#34;string&#34;&gt;&amp;quot;trigger1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;group1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//执行计划，每五秒执行一次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withSchedule(SimpleScheduleBuilder.repeatSecondlyForever(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                               .withRepeatCount(SimpleTrigger.REPEAT_INDEFINITELY) &lt;span class=&#34;comment&#34;&gt;//重复执行次数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                             )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//开始执行时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .startAt(startTime)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//结束执行时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .endAt(endTime)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//构建实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//调度器绑定任务实例和触发器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.scheduleJob(jobDetail,trigger);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//开启定时任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;注意：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SimpleTrigger的属性有：开始时间，结束时间，重复次数和重复时间间隔&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;重复次数的值可以为0、正数、或常量。例如：SimpleTrigger.REPEAT_INDEFINITELY&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;重复的时间间隔属性值必须为大于0或者长整型的整数，以毫秒为为时间单位，当重复的时间间隔为0时，意味着与Trigger同时触发执行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;如果有指定结束时间属性值，则结束时间属性优先于重复次数属性，这样的好处在于；当我们需要创建一个每间隔10秒触发一次直到指定的结束时间的Trigger，而无需去计算从开始到结束的所重复执行次数。我们只需要简单的执行结束时间和使用REPEAT_INDEFINITELY作为重复次数的属性值即可&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;crontrigger触发器的介绍&#34;&gt;13、CronTrigger触发器的介绍&lt;/h3&gt;
&lt;h5 id=&#34;crontrigger简介&#34;&gt;1、CronTrigger简介&lt;/h5&gt;
&lt;p&gt;如果需要像日历那样按日程来触发任务，而不是像SimpleTrigger那样每隔特定的间隔时间触发，CronTriggers通常比SimpleTrigger更有用，因为它是基于日历的任务调度器&lt;/p&gt;
&lt;p&gt;使用CronTrigger，可以指定诸如每个周五的12点，或者每天的9点等等…这样的日程来安排触发。甚至还可以像SimpleTrigger一样，CornTrigger也有一个startTime以指定日程从什么时候开始，也有一个（可选的）endTime以指定任何日期不再继续配置、资源SchedulerFactory&lt;/p&gt;
&lt;h5 id=&#34;corn表达式&#34;&gt;2、corn表达式&lt;/h5&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;corn表达式相信大家并不陌生，corn表达式被用来配置CronTrigger实例。corn表达式是一个由7个表达式组成的字符串。每一个子表达式描述了一个单独的日程细节。这些子表达式用空格分隔，分别表示：seconds秒、minutes分钟、hours小时、day-of-month月中的天、moth月，year年&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在线生成corn表达式：https://cron.qqe2.com/&lt;/p&gt;
&lt;p&gt;cron表达式详细介绍以及常用的例子：https://developer.aliyun.com/article/1349827&lt;/p&gt;
&lt;h5 id=&#34;案例&#34;&gt;案例：&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; 任务类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloJonCornTrigger&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Job&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobExecutionContext context)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; JobExecutionException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd hh:mm:ss&amp;quot;&lt;/span&gt;).format(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Date&lt;/span&gt;()) + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 任务被执行了&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; 调度器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloSchedulerDemo&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; SchedulerException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//从调度工厂中获取调度器实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Scheduler&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;scheduler&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; StdSchedulerFactory.getDefaultScheduler();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过JobBuilder构建一个任务实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobDetail&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetail&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; JobBuilder.newJob(HelloJonCornTrigger.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//设置任务的唯一实例名称和任务组名称组名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(&lt;span class=&#34;string&#34;&gt;&amp;quot;job1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;group1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//构建实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过TriggerBuilder构建触发器实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Trigger&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;trigger&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; TriggerBuilder.newTrigger()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//设置触发器唯一实例名称和触发器的组名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(&lt;span class=&#34;string&#34;&gt;&amp;quot;trigger1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;group1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            	&lt;span class=&#34;comment&#34;&gt;//立刻执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .startNow()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//每年的每月的每个星期得每天的每小时的每秒都会执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withSchedule(CronScheduleBuilder.cronSchedule(&lt;span class=&#34;string&#34;&gt;&amp;quot;* * * * * ?&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//构建实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//调度器绑定任务实例和触发器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.scheduleJob(jobDetail,trigger);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//开启定时任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;配置资源schedulerfactory&#34;&gt;14、配置、资源SchedulerFactory&lt;/h3&gt;
&lt;p&gt;Quartz以模块方式架构，因此要使它运行。几个组件必须要很好的咬合在一起。【现在已经有了一些现成的助手可以完成这些工作】&lt;/p&gt;
&lt;p&gt;所有scheduler实例是由SchedulerFactory创建。Quartz的三个核心概念：调度器，任务，触发器。&lt;/p&gt;
&lt;p&gt;调度器，任务，触发器三者之间的关系为：&lt;/p&gt;
&lt;p&gt;&lt;img
src=&#34;D:\Pictures\typore\006V2BDqly8hqtbbbl8bkj30nw0d60to.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;一个作业，比较重要的三个要素是Scheduler，JobDetail，Trigger；而Trigger对于Job而言就好比一个驱动器；没有触发器来定时驱动作业，作业就无法运行；对于Job而言，一个Job可以对应多个Trigger，但对于Trigger而言，一个Trigger只能对应一个Job；所以一个Trigger只能指派给一个Job；如果需要一个更复杂的触发计划，可以创建多个Trigger并指派他妈给同一个Job&lt;/p&gt;
&lt;h5 id=&#34;scheduler的创建方式&#34;&gt;Scheduler的创建方式&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;StdSchedulerFactory&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Quartz默认的SchedulerFactory&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;使用一组参数（java.util.Properties）来创建和初始化Quartz调度器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;配置参数一般存储在quartz.properties文件中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;调用getScheduler方法就能穿件和初始化调度器对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;SchedulerFactory&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;schedulerFactory&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;StdSchedulerFactory&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Scheduler&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;scheduler&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; schedulerFactory.getScheduler();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-----用法一：输出调度器开始的时间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//调度器绑定任务实例和触发器，方法返回调开始执行的时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Date&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;date&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; scheduler.scheduleJob(jobDetail, trigger);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-----用法二：启动任务调度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//开启任务调度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;scheduler.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-----用法三：任务调度挂起【暂停操作】&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//任务调度挂起&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;scheduler.standby();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-----用法四：任务调度关闭&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//关闭任务调度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;scheduler.shutdown(); &lt;span class=&#34;comment&#34;&gt;//默认为false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//scheduler.shutdown(true);  表示等待所有正在执行的Job执行完毕后，再关闭&amp;gt;Scheduler&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//scheduler.shutdown(false); 表示直接关闭Scheduler&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DirectSchedulerFactory&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;DirectSchedulerFactory是对SchedulerFactory的直接实现，通过它可以直接构建scheduler，threadpool等&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DirectSchedulerFactory directSchedulerFactory = DirectSchedulerFactory.getInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Scheduler scheduler = directSchedulerFactory.getScheduler();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;quartz监听器&#34;&gt;15、Quartz监听器&lt;/h3&gt;
&lt;h5 id=&#34;概念&#34;&gt;1、概念&lt;/h5&gt;
&lt;p&gt;Quartz的监听器用于当任务调度中你所关注事件发生时，能够及时获取这一事件的通知。类似于任务执行过程中的邮件，短信的提醒。
Quartz监听器主要有JobListener、TriggerListener、SchedulerListener三种，顾名思义，分别表示任务，触发器，调度器对应的监听器。三者的使用方法类似，在开始介绍三种监听器之前，需要明确两个概念：全局监听器与非全局监听器。
两者的区别在于： 全局监听器只能够接收到所有的Job、Trigger的事件通知。
而非全局监听器只能接收到在其上注册的Job或Trigger的事件，不在其上注册的Job或Trigger则不会进行监听。&lt;/p&gt;
&lt;h5 id=&#34;joblistener监听器的使用&#34;&gt;2、JobListener监听器的使用&lt;/h5&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;obListener是一个接口，它内部有四个方法。详细解析如下所示；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;JobListener用于监听任务，通常需要被监听的任务类实现该接口&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&#34;joblistener源码&#34;&gt;1、JobListener源码&lt;/h6&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;public interface JobListener &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     * 用于获取该JobListener的名称&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     * scheduler在JobDetail将要被执行时调用这个方法【JobDetail执行前】&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     * @see #jobExecutionVetoed(JobExecutionContext)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    void jobToBeExecuted(JobExecutionContext context);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     * scheduler在JobDetail即将被执行，但又被TriggerListener否决时会调用该方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     * @see #jobToBeExecuted(JobExecutionContext)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    void jobExecutionVetoed(JobExecutionContext context);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     * scheduler在JobDetail被执行后调用这个方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    void jobWasExecuted(JobExecutionContext context,JobExecutionException jobException);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&#34;使用案例&#34;&gt;1、使用案例&lt;/h6&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;创建任务类：HelloJobToListener&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;创建任务调度类：HelloSchedulerDemoListener&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;创建job监听类：MyJobListener&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;任务类实现Job接口，并重写execute方法；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;任务调度类创建任务执行实例和触发器与调度器进行绑定。并设置对job的监听【全局监听，局部监听】&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;job监听类实现JobListener接口，重写对应的方法。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;HelloJobToListener.java&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; 任务类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloJobToListener&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Job&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobExecutionContext context)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd hh:mm:ss&amp;quot;&lt;/span&gt;).format(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Date&lt;/span&gt;()) + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 任务被执行了&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;MyJobListener.java&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; JobListener&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MyJobListener&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;JobListener&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;title function_&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.getClass().getSimpleName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;当前JobListener的名称为：&amp;quot;&lt;/span&gt; + name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jobToBeExecuted&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobExecutionContext context)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; context.getJobDetail().getJobClass().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;当前Job的名称为：&amp;quot;&lt;/span&gt; + name + &lt;span class=&#34;string&#34;&gt;&amp;quot;，JobDetail将要被执行了...&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jobExecutionVetoed&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobExecutionContext context)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; context.getJobDetail().getJobClass().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;当前Job的名称为：&amp;quot;&lt;/span&gt; + name + &lt;span class=&#34;string&#34;&gt;&amp;quot;，JobDetail将要被执，但被TriggerListener否决...&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jobWasExecuted&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobExecutionContext context, JobExecutionException jobException)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; context.getJobDetail().getJobClass().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;当前Job的名称为：&amp;quot;&lt;/span&gt; + name + &lt;span class=&#34;string&#34;&gt;&amp;quot;，JobDetail执行完成了...&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;HelloSchedulerDemoListener.java&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; 调度器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloSchedulerDemoListener&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; SchedulerException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过调度器工厂构建调度器实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Scheduler&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;scheduler&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; StdSchedulerFactory.getDefaultScheduler();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过JobBuilder构建JobDetail&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobDetail&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetail&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; JobBuilder.newJob(HelloJobToListener.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(&lt;span class=&#34;string&#34;&gt;&amp;quot;job1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;group1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//通过TriggerBuilder构建Trigger&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;CronTrigger&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;trigger&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; TriggerBuilder.newTrigger()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(&lt;span class=&#34;string&#34;&gt;&amp;quot;trigger1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;group1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .startNow()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withSchedule(CronScheduleBuilder.cronSchedule(&lt;span class=&#34;string&#34;&gt;&amp;quot;3 * * * * ?&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//调度器绑定JobDetail和Trigger&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.scheduleJob(jobDetail, trigger);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//绑定job监听&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//1.全局绑定，所有的job在被调度的时候都会被监听&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//scheduler.getListenerManager().addJobListener(new MyJobListener(), EverythingMatcher.allJobs());&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//2.局部监听，用来监听指定的job&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.getListenerManager().addJobListener(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MyJobListener&lt;/span&gt;(), KeyMatcher&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//jobKey中的name参数和group参数对应的就是任务实例【JobDetail】的name和group&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .keyEquals(JobKey.jobKey(&lt;span class=&#34;string&#34;&gt;&amp;quot;job1&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;group1&amp;quot;&lt;/span&gt;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//开启调度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;执行结果&#34;&gt;执行结果：&lt;img
src=&#34;D:\Pictures\typore\006V2BDqly8hqtbfcr51tj313p093gpi.jpg&#34; /&gt;&lt;/h5&gt;
&lt;h5 id=&#34;triggerlistener监听器的使用&#34;&gt;3、TriggerListener监听器的使用&lt;/h5&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;任务调度过程中，与触发器Trigger相关的事件包括：触发器触发，触发器未正常触发，触发器触发完成&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&#34;triggerlistener源码&#34;&gt;1、TriggerListener源码&lt;/h6&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;TriggerListener&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 用于触发器的名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String &lt;span class=&#34;title function_&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 当与监听器相关联的Trigger被触发，Job上的execute()方法将被执行时，Scheduler就调用该方法【job执行前】&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;triggerFired&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Trigger trigger, JobExecutionContext context)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 在Trigger触发后，Job将要被执行由Scheduler调用这个方法。Trigger Listener给了一个选择去否决Job的执行。假如这个方法返回true，这个Job将不会为此次Trigger而得到触发【job执行前】&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;vetoJobExecution&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Trigger trigger, JobExecutionContext context)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * scheduler调用这个方法是在Trigger错过触发时，你应该关注此方法中持续时间长的逻辑；在出现许多错过触发的Trigger时，长逻辑会导致骨牌效应，你应当保持这个方法尽量的少使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;triggerMisfired&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Trigger trigger)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * Trigger被触发并完成了Job的执行，scheduler调用这个方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;triggerComplete&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Trigger trigger, JobExecutionContext context,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;            CompletedExecutionInstruction triggerInstructionCode)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&#34;使用案例-1&#34;&gt;2、使用案例&lt;/h6&gt;
&lt;p&gt;&lt;strong&gt;HelloJobToTrigger.java&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; 任务类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloJobToTrigger&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Job&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobExecutionContext jobExecutionContext)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; JobExecutionException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd HH:mm:ss&amp;quot;&lt;/span&gt;).format(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Date&lt;/span&gt;()) + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 任务被执行...&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;HelloJobToTrigger.java&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; TriggerListener&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MyTriggerListener&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;TriggerListener&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;title function_&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;simpleName&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.getClass().getSimpleName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; simpleName;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;triggerFired&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Trigger trigger, JobExecutionContext jobExecutionContext)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; trigger.getKey().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(name + &lt;span class=&#34;string&#34;&gt;&amp;quot; | Job上的execute()方法将被执行时，Scheduler就调用该方法&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;vetoJobExecution&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Trigger trigger, JobExecutionContext jobExecutionContext)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;temp&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; trigger.getKey().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(name + &lt;span class=&#34;string&#34;&gt;&amp;quot; | Job将要被执行由Scheduler调用这个方法。Trigger Listener给了一个选择去否决Job的执行为&amp;quot;&lt;/span&gt; + (temp ? &lt;span class=&#34;string&#34;&gt;&amp;quot;为此次Trigger触发&amp;quot;&lt;/span&gt; : &lt;span class=&#34;string&#34;&gt;&amp;quot;不为此次Trigger触发&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;triggerMisfired&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Trigger trigger)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; trigger.getKey().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(name + &lt;span class=&#34;string&#34;&gt;&amp;quot; ｜ scheduler调用这个方法是在Trigger错过触发时调用该方法&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;triggerComplete&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Trigger trigger, JobExecutionContext jobExecutionContext, Trigger.CompletedExecutionInstruction completedExecutionInstruction)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; trigger.getKey().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(name + &lt;span class=&#34;string&#34;&gt;&amp;quot; | Trigger被触发并完成了Job的执行，scheduler调用这个方法&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;HelloSchedulerDemoTrigger.java&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; 调度器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloSchedulerDemoTrigger&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; SchedulerException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Scheduler&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;scheduler&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; StdSchedulerFactory.getDefaultScheduler();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobDetail&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetail&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; JobBuilder.newJob(HelloJobToTrigger.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(&lt;span class=&#34;string&#34;&gt;&amp;quot;job1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;group1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;CronTrigger&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;trigger&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; TriggerBuilder.newTrigger()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(&lt;span class=&#34;string&#34;&gt;&amp;quot;trigger1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;group1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .startNow()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withSchedule(CronScheduleBuilder.cronSchedule(&lt;span class=&#34;string&#34;&gt;&amp;quot;3 * * * * ?&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.scheduleJob(jobDetail, trigger);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//全局监听&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.getListenerManager().addTriggerListener(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MyTriggerListener&lt;/span&gt;(), EverythingMatcher.allTriggers());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//局部监听&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//scheduler.getListenerManager().addTriggerListener(new MyTriggerListener(), KeyMatcher.keyEquals(TriggerKey.triggerKey(&amp;quot;trigger1&amp;quot;, &amp;quot;group1&amp;quot;)));&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;执行结果&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img
src=&#34;D:\Pictures\typore\006V2BDqly8hqtbj5ts1oj323k0rsqgq.jpg&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;scheduler-listener监听器的使用&#34;&gt;4.Scheduler
Listener监听器的使用&lt;/h5&gt;
&lt;h6 id=&#34;scheduler-listener源码&#34;&gt;1、Scheduler Listener源码&lt;/h6&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SchedulerListener&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 用于部署Job Detail时调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jobScheduled&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Trigger trigger)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 用于卸载JobDetail时调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jobUnscheduled&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(TriggerKey triggerKey)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 当一个Trigger来到了再也不会触发的状态时调用这个方法。除非这个Job已设置成了持久性，否则它就会中scheduler中移除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;triggerFinalized&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Trigger trigger)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * scheduler调用这个方法时发生在一个Trigger被暂停时调用。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;triggerPaused&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(TriggerKey triggerKey)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * scheduler调用这个方法时发生在一个Trigger组被暂停时调用。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;triggersPaused&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String triggerGroup)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * scheduler调用这个方法发生在为一个Trigger从暂停中恢复时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;triggerResumed&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(TriggerKey triggerKey)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * scheduler调用这个方法发生在为一个Trigger组从暂停中恢复时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;triggersResumed&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String triggerGroup)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 添加任务时被调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jobAdded&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobDetail jobDetail)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 删除任务时被调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jobDeleted&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobKey jobKey)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 暂停任务时被调&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jobPaused&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobKey jobKey)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 暂停任务组时被调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jobsPaused&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String jobGroup)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 恢复任务时被调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jobResumed&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobKey jobKey)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 恢复任务组时被调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jobsResumed&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String jobGroup)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 在scheduler的政策运行期间发生严重错误时被调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;schedulerError&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String msg, SchedulerException cause)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 在scheduler处于挂载状态时被调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;schedulerInStandbyMode&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 在scheduler开启时被调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;schedulerStarted&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 当调度程序启动时调用该方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;schedulerStarting&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 当scheduler关闭时调用该方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;schedulerShutdown&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 当调度程序关闭时调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;schedulerShuttingdown&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 当scheduler中的数据被清除时，调用该方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;schedulingDataCleared&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&#34;使用案例-2&#34;&gt;2、使用案例：&lt;/h6&gt;
&lt;p&gt;&lt;strong&gt;HelloJobToScheduler.java&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; 任务类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloJobToScheduler&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Job&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobExecutionContext jobExecutionContext)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; JobExecutionException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd HH:mm:ss&amp;quot;&lt;/span&gt;).format(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Date&lt;/span&gt;()) + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 任务被执行...&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;MySchedulerListener.java&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; TriggerListener&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MySchedulerListener&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SchedulerListener&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jobScheduled&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Trigger trigger)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(trigger.getKey().getName() + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 用于部署Job Detail时调用&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jobUnscheduled&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(TriggerKey triggerKey)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(triggerKey.getName() + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 用于卸载JobDetail时调用&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;triggerFinalized&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Trigger trigger)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(trigger.getKey().getName() + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 当一个Trigger来到了再也不会触发的状态时调用这个方法。除非这个Job已设置成了持久性，否则它就会中scheduler中移除&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;triggerPaused&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(TriggerKey triggerKey)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(triggerKey.getName() + &lt;span class=&#34;string&#34;&gt;&amp;quot; | scheduler调用这个方法时发生在一个Trigger被暂停时调用。&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;triggersPaused&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String triggerGroup)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(triggerGroup + &lt;span class=&#34;string&#34;&gt;&amp;quot; | scheduler调用这个方法时发生在一个Trigger组被暂停时调用。&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;triggerResumed&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(TriggerKey triggerKey)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(triggerKey.getName() + &lt;span class=&#34;string&#34;&gt;&amp;quot; | scheduler调用这个方法发生在为一个Trigger从暂停中恢复时&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;triggersResumed&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String triggerGroup)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(triggerGroup + &lt;span class=&#34;string&#34;&gt;&amp;quot; | scheduler调用这个方法发生在为一个Trigger组从暂停中恢复时&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jobAdded&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobDetail jobDetail)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;添加任务时被调用&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jobDeleted&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobKey jobKey)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;删除任务时被调用&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jobPaused&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobKey jobKey)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;暂停任务时被调&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jobsPaused&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String jobGroup)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;暂停任务组时被调用&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jobResumed&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobKey jobKey)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;恢复任务时被调用&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;jobsResumed&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String jobGroup)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;恢复任务组时被调用&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;schedulerError&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String msg, SchedulerException cause)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;在scheduler的政策运行期间发生严重错误时被调用&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;schedulerInStandbyMode&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;在scheduler处于挂载状态时被调用&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;schedulerStarted&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;在scheduler开启时被调用&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;schedulerStarting&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;当调度程序启动时调用该方法&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;schedulerShutdown&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;当scheduler关闭时调用该方法&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;schedulerShuttingdown&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;当调度程序关闭时调用&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;schedulingDataCleared&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;当scheduler中的数据被清除时，调用该方法&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;HelloSchedulerDemoScheduler.java&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@Desc&lt;/span&gt; 调度器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HelloSchedulerDemoScheduler&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Scheduler&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;scheduler&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; StdSchedulerFactory.getDefaultScheduler();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobDetail&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetail&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; JobBuilder.newJob(HelloJobToScheduler.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(&lt;span class=&#34;string&#34;&gt;&amp;quot;job1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;group1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;CronTrigger&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;trigger&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; TriggerBuilder.newTrigger()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(&lt;span class=&#34;string&#34;&gt;&amp;quot;trigger1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;group1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .startNow()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withSchedule(CronScheduleBuilder.cronSchedule(&lt;span class=&#34;string&#34;&gt;&amp;quot;* * * * * ?&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.scheduleJob(jobDetail, trigger);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.getListenerManager().addSchedulerListener(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MySchedulerListener&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Thread.sleep(&lt;span class=&#34;number&#34;&gt;10000L&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.shutdown();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;执行结果&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img
src=&#34;D:\Pictures\typore\006V2BDqly8hqtblb4b7rj31z00ew0xz.jpg&#34; /&gt;&lt;/p&gt;
&lt;h3
id=&#34;springboot整合任务调度框架quartz&#34;&gt;※、SpringBoot整合任务调度框架（Quartz）&lt;/h3&gt;
&lt;h4 id=&#34;springboot与quartz快速整合&#34;&gt;1、SpringBoot与Quartz快速整合&lt;/h4&gt;
&lt;h5 id=&#34;引入依赖&#34;&gt;引入依赖&lt;/h5&gt;
&lt;p&gt;主要是&lt;code&gt;spring-boot-starter-quartz&lt;/code&gt;这个依赖，是SpringBoot与Quartz的整合。&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 实现对 Spring MVC 的自动化配置 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-web&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 实现对 Quartz 的自动化配置 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-quartz&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;创建job&#34;&gt;创建Job&lt;/h5&gt;
&lt;p&gt;为了演示两种Trigger及两种配置方式，我们创建两个不同的Job。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;FirstJob&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;QuartzJobBean&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;executeInternal&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobExecutionContext jobExecutionContext)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; JobExecutionException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; DateTimeFormatter.ofPattern(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd HH:mm:ss&amp;quot;&lt;/span&gt;).format(LocalDateTime.now());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;当前的时间: &amp;quot;&lt;/span&gt; + now);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Slf4j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SecondJob&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;QuartzJobBean&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;executeInternal&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobExecutionContext jobExecutionContext)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; JobExecutionException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; DateTimeFormatter.ofPattern(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd HH:mm:ss&amp;quot;&lt;/span&gt;).format(LocalDateTime.now());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;SecondJob执行, 当前的时间: &amp;quot;&lt;/span&gt; + now);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们在创建Job的时候，可以实现Job接口，也可以继承QuartzJobBean。&lt;/p&gt;
&lt;p&gt;QuartzJobBean实现了Job，并且定义了公用的execute方法，子类可以继承QuartzJobBean并实现executeInternal方法。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;abstract&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;QuartzJobBean&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Job&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	 * This implementation applies the passed-in job data map as bean property&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	 * values, and delegates to &amp;#123;&lt;span class=&#34;doctag&#34;&gt;@code&lt;/span&gt; executeInternal&amp;#125; afterwards.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	 * &lt;span class=&#34;doctag&#34;&gt;@see&lt;/span&gt; #executeInternal&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobExecutionContext context)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; JobExecutionException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &lt;span class=&#34;comment&#34;&gt;// 将当前对象包装为BeanWrapper&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;BeanWrapper&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;bw&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; PropertyAccessorFactory.forBeanPropertyAccess(&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 设置属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;type&#34;&gt;MutablePropertyValues&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;pvs&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MutablePropertyValues&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			pvs.addPropertyValues(context.getScheduler().getContext());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			pvs.addPropertyValues(context.getMergedJobDataMap());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			bw.setPropertyValues(pvs, &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (SchedulerException ex) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;JobExecutionException&lt;/span&gt;(ex);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 子类实现该方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		executeInternal(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	 * Execute the actual job. The job data map will already have been&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	 * applied as bean property values by execute. The contract is&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	 * exactly the same as for the standard Quartz execute method.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	 * &lt;span class=&#34;doctag&#34;&gt;@see&lt;/span&gt; #execute&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;abstract&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;executeInternal&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(JobExecutionContext context)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; JobExecutionException;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;调度器scheduler绑定&#34;&gt;调度器Scheduler绑定&lt;/h5&gt;
&lt;p&gt;Scheduler绑定有两种方式，一种是使用bena的自动配置，一种是Scheduler手动配置。&lt;/p&gt;
&lt;p&gt;自动配置，这里演示SimpleScheduleBuilder&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Configuration&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;QuartzConfig&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;ID&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;SUMMERDAY&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Bean&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; JobDetail &lt;span class=&#34;title function_&#34;&gt;jobDetail1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; JobBuilder.newJob(FirstJob.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(ID + &lt;span class=&#34;string&#34;&gt;&amp;quot; 01&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .storeDurably()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Bean&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; Trigger &lt;span class=&#34;title function_&#34;&gt;trigger1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 简单的调度计划的构造器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;SimpleScheduleBuilder&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;scheduleBuilder&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; SimpleScheduleBuilder.simpleSchedule()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIntervalInSeconds(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// 频率&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .repeatForever(); &lt;span class=&#34;comment&#34;&gt;// 次数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; TriggerBuilder.newTrigger()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .forJob(jobDetail1())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(ID + &lt;span class=&#34;string&#34;&gt;&amp;quot; 01Trigger&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withSchedule(scheduleBuilder)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;手动配置，这里演示CronScheduleBuilder&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Component&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;JobInit&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;ApplicationRunner&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;ID&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;SUMMERDAY&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Autowired&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; Scheduler scheduler;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(ApplicationArguments args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobDetail&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetail&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; JobBuilder.newJob(FirstJob.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(ID + &lt;span class=&#34;string&#34;&gt;&amp;quot; 01&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .storeDurably()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;CronScheduleBuilder&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;scheduleBuilder&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                CronScheduleBuilder.cronSchedule(&lt;span class=&#34;string&#34;&gt;&amp;quot;0/5 * * * * ? *&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 创建任务触发器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Trigger&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;trigger&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; TriggerBuilder.newTrigger()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .forJob(jobDetail)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(ID + &lt;span class=&#34;string&#34;&gt;&amp;quot; 01Trigger&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withSchedule(scheduleBuilder)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .startNow() &lt;span class=&#34;comment&#34;&gt;//立即執行一次任務&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 手动将触发器与任务绑定到调度器内&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.scheduleJob(jobDetail, trigger);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;yml配置&#34;&gt;yml配置&lt;/h5&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;spring:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;# Quartz 的配置，对应 QuartzProperties 配置类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;quartz:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;job-store-type:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;memory&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# Job 存储器类型。默认为 memory 表示内存，可选 jdbc 使用数据库。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;auto-startup:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# Quartz 是否自动启动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;startup-delay:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 延迟 N 秒启动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;wait-for-jobs-to-complete-on-shutdown:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 应用关闭时，是否等待定时任务执行完成。默认为 false ，建议设置为 true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;overwrite-existing-jobs:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 是否覆盖已有 Job 的配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;properties:&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 添加 Quartz Scheduler 附加属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;org:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;quartz:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;threadPool:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;threadCount:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;25&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 线程池大小。默认为 10 。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;threadPriority:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 线程优先级&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;class:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;org.quartz.simpl.SimpleThreadPool&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 线程池类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#    jdbc: # 这里暂时不说明，使用 JDBC 的 JobStore 的时候，才需要配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;测试&#34;&gt;测试&lt;/h5&gt;
&lt;p&gt;启动程序，FirstJob每5s执行一次，SecondJob每10s执行一次。&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[eduler_Worker-1] com.hyhwky.standalone.FirstJob           : FirstJob执行, 当前的时间: 2020-12-26 16:54:00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[eduler_Worker-2] com.hyhwky.standalone.SecondJob          : SecondJob执行, 当前的时间: 2020-12-26 16:54:00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[eduler_Worker-3] com.hyhwky.standalone.FirstJob           : FirstJob执行, 当前的时间: 2020-12-26 16:54:05&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[eduler_Worker-4] com.hyhwky.standalone.SecondJob          : SecondJob执行, 当前的时间: 2020-12-26 16:54:10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[eduler_Worker-5] com.hyhwky.standalone.FirstJob           : FirstJob执行, 当前的时间: 2020-12-26 16:54:10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[eduler_Worker-6] com.hyhwky.standalone.FirstJob           : FirstJob执行, 当前的时间: 2020-12-26 16:54:15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[eduler_Worker-7] com.hyhwky.standalone.SecondJob          : SecondJob执行, 当前的时间: 2020-12-26 16:54:20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;quartz持久化配置数据库&#34;&gt;2、Quartz持久化配置（数据库）&lt;/h4&gt;
&lt;p&gt;Quartz持久化配置提供了两种存储器：&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 9%&#34; /&gt;
&lt;col style=&#34;width: 45%&#34; /&gt;
&lt;col style=&#34;width: 45%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;缺点&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;RAMJobStore&lt;/td&gt;
&lt;td&gt;不要外部数据库，配置容易，运行速度快&lt;/td&gt;
&lt;td&gt;因为调度程序信息是存储在被分配给 JVM
的内存里面，所以，当应用程序停止运行时，所有调度信息将被丢失。另外因为存储到JVM内存里面，所以可以存储多少个
Job 和 Trigger 将会受到限制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;JDBC 作业存储&lt;/td&gt;
&lt;td&gt;支持集群，因为所有的任务信息都会保存到数据库中，可以控制事物，还有就是如果应用服务器关闭或者重启，任务信息都不会丢失，并且可以恢复因服务器关闭或者重启而导致执行失败的任务&lt;/td&gt;
&lt;td&gt;运行速度的快慢取决与连接数据库的快慢&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;创建数据库&#34;&gt;创建数据库&lt;/h5&gt;
&lt;p&gt;为了测试Quartz的持久化配置，我们事先在mysql中创建一个数据库quartz，并执行脚本，脚本藏在&lt;code&gt;org\quartz-scheduler\quartz\2.3.2\quartz-2.3.2.jar!\org\quartz\impl\jdbcjobstore\tables_mysql_innodb.sql&lt;/code&gt;，jdbcjobstore中有支持许多种数据库的脚本，可以按需执行。&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mysql&lt;span class=&#34;operator&#34;&gt;&amp;gt;&lt;/span&gt; use quartz;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Database changed&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mysql&lt;span class=&#34;operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;show&lt;/span&gt; tables;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;--------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; Tables_in_quartz         &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;--------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; qrtz_blob_triggers       &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt;## blog类型存储triggers&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; qrtz_calendars           &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt;## 以blog类型存储Calendar信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; qrtz_cron_triggers       &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt;## 存储cron &lt;span class=&#34;keyword&#34;&gt;trigger&lt;/span&gt;信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; qrtz_fired_triggers      &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt;## 存储已触发的&lt;span class=&#34;keyword&#34;&gt;trigger&lt;/span&gt;相关信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; qrtz_job_details         &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt;## 存储每一个已配置的job details&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; qrtz_locks               &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt;## 存储悲观锁的信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; qrtz_paused_trigger_grps &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt;## 存储已暂停的&lt;span class=&#34;keyword&#34;&gt;trigger&lt;/span&gt;组信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; qrtz_scheduler_state     &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt;## 存储Scheduler状态信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; qrtz_simple_triggers     &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt;## 存储simple &lt;span class=&#34;keyword&#34;&gt;trigger&lt;/span&gt;信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; qrtz_simprop_triggers    &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt;## 存储其他几种&lt;span class=&#34;keyword&#34;&gt;trigger&lt;/span&gt;信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; qrtz_triggers            &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt;## 存储已配置的&lt;span class=&#34;keyword&#34;&gt;trigger&lt;/span&gt;信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;--------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;所有的表中都含有一个&lt;code&gt;SCHED_NAME&lt;/code&gt;字段，对应我们配置的&lt;code&gt;scheduler-name&lt;/code&gt;，相同
Scheduler-name的节点，形成一个 Quartz 集群。&lt;/p&gt;
&lt;h5 id=&#34;引入mysql相关依赖&#34;&gt;引入mysql相关依赖&lt;/h5&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 实现对 Spring MVC 的自动化配置 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-web&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 实现对 Quartz 的自动化配置 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-quartz&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;mysql&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;mysql-connector-java&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.projectlombok&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;lombok&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;optional&lt;/span&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;optional&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-test&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;test&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-jdbc&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;配置yml&#34;&gt;配置yml&lt;/h5&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;spring:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;datasource:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;quartz:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;driver-class-name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;com.mysql.cj.jdbc.Driver&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;url:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;jdbc:mysql://localhost:3306/quartz?serverTimezone=GMT%2B8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;username:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;root&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;password:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;123456&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;quartz:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;job-store-type:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;jdbc&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 使用数据库存储&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;scheduler-name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;hyhScheduler&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 相同 Scheduler 名字的节点，形成一个 Quartz 集群&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;wait-for-jobs-to-complete-on-shutdown:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 应用关闭时，是否等待定时任务执行完成。默认为 false ，建议设置为 true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;jdbc:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;initialize-schema:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;never&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 是否自动使用 SQL 初始化 Quartz 表结构。这里设置成 never ，我们手动创建表结构。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;properties:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;org:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;quartz:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;comment&#34;&gt;# JobStore 相关配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;jobStore:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;dataSource:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;quartzDataSource&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 使用的数据源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;class:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;org.quartz.impl.jdbcjobstore.JobStoreTX&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# JobStore 实现类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;driverDelegateClass:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;org.quartz.impl.jdbcjobstore.StdJDBCDelegate&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;tablePrefix:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;QRTZ_&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# Quartz 表前缀&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;isClustered:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 是集群模式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;clusterCheckinInterval:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;useProperties:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;comment&#34;&gt;# 线程池相关配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;threadPool:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;threadCount:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;25&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 线程池大小。默认为 10 。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;threadPriority:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 线程优先级&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;class:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;org.quartz.simpl.SimpleThreadPool&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 线程池类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;创建任务&#34;&gt;创建任务&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Component&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;JobInit&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;ApplicationRunner&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;ID&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;SUMMERDAY&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Autowired&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; Scheduler scheduler;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(ApplicationArguments args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;JobDetail&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;jobDetail&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; JobBuilder.newJob(SecondJob.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(ID + &lt;span class=&#34;string&#34;&gt;&amp;quot; 02&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .storeDurably()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;CronScheduleBuilder&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;scheduleBuilder&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                CronScheduleBuilder.cronSchedule(&lt;span class=&#34;string&#34;&gt;&amp;quot;0/10 * * * * ? *&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 创建任务触发器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;Trigger&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;trigger&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; TriggerBuilder.newTrigger()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .forJob(jobDetail)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withIdentity(ID + &lt;span class=&#34;string&#34;&gt;&amp;quot; 02Trigger&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .withSchedule(scheduleBuilder)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .startNow() &lt;span class=&#34;comment&#34;&gt;//立即執行一次任務&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Set&amp;lt;Trigger&amp;gt; set = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;HashSet&lt;/span&gt;&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        set.add(trigger);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// boolean replace 表示启动时对数据库中的quartz的任务进行覆盖。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scheduler.scheduleJob(jobDetail, set, &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;启动测试&#34;&gt;启动测试&lt;/h5&gt;
&lt;p&gt;启动测试之后，我们的quartz任务相关信息就已经成功存储到mysql中了。&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mysql&lt;span class=&#34;operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; qrtz_simple_triggers;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;--------------+---------------------+---------------+--------------+-----------------+-----------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; SCHED_NAME   &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; TRIGGER_NAME        &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; TRIGGER_GROUP &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; REPEAT_COUNT &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; REPEAT_INTERVAL &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; TIMES_TRIGGERED &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;--------------+---------------------+---------------+--------------+-----------------+-----------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; hyhScheduler &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; SUMMERDAY &lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;Trigger&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;DEFAULT&lt;/span&gt;       &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt;           &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt;            &lt;span class=&#34;number&#34;&gt;5000&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt;             &lt;span class=&#34;number&#34;&gt;812&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;--------------+---------------------+---------------+--------------+-----------------+-----------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;set&lt;/span&gt; (&lt;span class=&#34;number&#34;&gt;0.00&lt;/span&gt; sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mysql&lt;span class=&#34;operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; qrtz_cron_triggers;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;--------------+---------------------+---------------+------------------+---------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; SCHED_NAME   &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; TRIGGER_NAME        &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; TRIGGER_GROUP &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; CRON_EXPRESSION  &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; TIME_ZONE_ID  &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;--------------+---------------------+---------------+------------------+---------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; hyhScheduler &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; SUMMERDAY &lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;Trigger&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;DEFAULT&lt;/span&gt;       &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; ? &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; Asia&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Shanghai &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;--------------+---------------------+---------------+------------------+---------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;相关链接&#34;&gt;相关链接&lt;/h2&gt;
&lt;p&gt;了解现有的定时任务机制&lt;/p&gt;
&lt;p&gt;https://blog.csdn.net/qianlixiaomage/article/details/106599951&lt;/p&gt;
&lt;p&gt;了解quartz定时调度&lt;/p&gt;
&lt;p&gt;https://blog.csdn.net/ScholarTang/article/details/118891297&lt;/p&gt;
&lt;p&gt;springboot整合Quartz&lt;/p&gt;
&lt;p&gt;https://www.cnblogs.com/summerday152/p/14193968.html&lt;/p&gt;
&lt;p&gt;---不用配置数据源这一步&lt;/p&gt;
</content>
        <category term="工作日志" scheme="http://example.com/categories/job/" />
        <category term="job" scheme="http://example.com/tags/job/" />
        <updated>2024-06-17T16:02:29.376Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/06/16/post/job/01-git%E6%8B%89%E5%8F%96%E9%A1%B9%E7%9B%AE/</id>
        <title>01-如何使用git拉取项目</title>
        <link rel="alternate" href="http://example.com/2024/06/16/post/job/01-git%E6%8B%89%E5%8F%96%E9%A1%B9%E7%9B%AE/"/>
        <content type="html">&lt;h1 id=&#34;一拉取项目到本地运行&#34;&gt;一、拉取项目到本地运行&lt;/h1&gt;
&lt;h3 id=&#34;拉取项目&#34;&gt;1、拉取项目&lt;/h3&gt;
&lt;h4 id=&#34;后端项目&#34;&gt;后端项目&lt;/h4&gt;
&lt;p&gt;创建目录在目录cmd[初始化]&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;git init&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;[克隆地址]一般为gitLab 或者gitHub 建议使用ssh，没有再使用http&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# git remote add origin &amp;lt;url&amp;gt;克隆地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;公司的项目一般来说都有很多分支，[查看分支]&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# git fetch &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;[拉取远程分支到本地]&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# git fetch origin &amp;lt;分支名&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# git pull origin &amp;lt;分支名&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;[查看当前分支]&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# git branch --show-current&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;[切换分支]&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# git checkout &amp;lt;分支名&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将从远程仓库的&lt;code&gt;demo&lt;/code&gt;分支拉取最新的提交并自动合并到本地的
&lt;code&gt;master&lt;/code&gt; 分支。&lt;code&gt;-Xtheirs&lt;/code&gt; 标志指示 Git
在解决合并冲突时选择使用&lt;code&gt;demo&lt;/code&gt;分支的更改。&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# git pull -s recursive -Xtheirs origin demo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后使用Maven下载依赖包&lt;/p&gt;
&lt;h4 id=&#34;前端项目&#34;&gt;前端项目&lt;/h4&gt;
&lt;p&gt;拉取本地同后端&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# npm install&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果node版本过高，请使用nvm管理node&lt;/p&gt;
&lt;p&gt;相关链接：
https://blog.csdn.net/HuangsTing/article/details/113857145&lt;/p&gt;
&lt;h1 id=&#34;二window下安装并使用nvm&#34;&gt;二、Window下安装并使用nvm&lt;/h1&gt;
&lt;h4
id=&#34;卸载已经安装好的没被nvm管理的node&#34;&gt;1、卸载已经安装好的没被nvm管理的node&lt;/h4&gt;
&lt;p&gt;如果你已经安装了node，那么你需要先卸载node，如果你没有安装那直接跳过这一步到下一步。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;打开控制面板 -&amp;gt; 打开程序和功能 -&amp;gt; 右上角搜索输入node
-&amp;gt; 右键卸载&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为了确保彻底删除node在看看你的node安装目录中还有没有node文件夹，有的话一起删除。再看看C:文件夹下有没有.npmrc以及.yarnrc等等统统删除。再去看看你的环境变量有没有node相关的，有的话也一起删除了。&lt;/p&gt;
&lt;h4 id=&#34;安装nvm&#34;&gt;2、安装nvm&lt;/h4&gt;
&lt;p&gt;去github &lt;a
href=&#34;https://github.com/coreybutler/nvm-windows/releases&#34;&gt;下载最新的
nvm&lt;/a&gt; 找到 &lt;code&gt;nvm-setup.zip&lt;/code&gt; 点击下载&lt;/p&gt;
&lt;p&gt;选择nvm安装路径&lt;/p&gt;
&lt;p&gt;选择nodejs的安装路径&lt;/p&gt;
&lt;p&gt;点击next，安装完成后在终端输入&lt;code&gt;nvm version&lt;/code&gt;,就能查到版本号说明安装成功了。&lt;/p&gt;
&lt;h4 id=&#34;配置路径和下载源&#34;&gt;3、配置路径和下载源&lt;/h4&gt;
&lt;p&gt;安装完nvm后先不要着急安装node。&lt;/p&gt;
&lt;p&gt;找到nvm安装路径 -&amp;gt; 找到 settings.txt 文件 -&amp;gt; 配置下载源&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 旧：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# node_mirror: https://npm.taobao.org/mirrors/node/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# npm_mirror: https://npm.taobao.org/mirrors/npm/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 新：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# nvm node_mirror https://npmmirror.com/mirrors/node/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# nvm npm_mirror https://npmmirror.com/mirrors/npm/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;使用nvm安装node&#34;&gt;4、使用nvm安装node&lt;/h4&gt;
&lt;p&gt;在终端输入 &lt;code&gt;nvm list available&lt;/code&gt;，
查看网络可以安装的版本。&lt;/p&gt;
&lt;p&gt;选择一个版本安装，比如 &lt;code&gt;nvm install 14.14.0&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;使用这个版本的node，&lt;code&gt;nvm use 14.14.0&lt;/code&gt;。输入&lt;code&gt;node -v&lt;/code&gt;
和 &lt;code&gt;npm -v&lt;/code&gt;可以查询到node和npm的版本号。&lt;/p&gt;
&lt;p&gt;输入&lt;code&gt;nvm list&lt;/code&gt;
查看已经安装的node，&lt;code&gt;*&lt;/code&gt;号表示当前使用的node版本。&lt;/p&gt;
&lt;h4 id=&#34;nvm常用命令&#34;&gt;5、nvm常用命令&lt;/h4&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 28%&#34; /&gt;
&lt;col style=&#34;width: 71%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;命令&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align: center;&#34;&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;nvm list&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;查看已经安装的版本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;nvm list installed&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;查看已经安装的版本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;nvm list available&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;查看网络可以安装的版本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;nvm arch&lt;/td&gt;
&lt;td
style=&#34;text-align: center;&#34;&gt;查看当前系统的位数和当前nodejs的位数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;nvm install [arch]&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;安装制定版本的node 并且可以指定平台
version 版本号 arch 平台&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;nvm on&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;打开nodejs版本控制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;nvm off&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;关闭nodejs版本控制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;nvm proxy [url]&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;查看和设置代理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;nvm node_mirror [url]&lt;/td&gt;
&lt;td
style=&#34;text-align: center;&#34;&gt;设置或者查看setting.txt中的node_mirror，如果不设置的默认是
https://nodejs.org/dist/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;nvm npm_mirror [url]&lt;/td&gt;
&lt;td
style=&#34;text-align: center;&#34;&gt;设置或者查看setting.txt中的npm_mirror,如果不设置的话默认的是：https://github.com/npm/npm/archive/.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;nvm uninstall&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;卸载指定的版本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;nvm use [version] [arch]&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;切换指定的node版本和位数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;nvm root [path]&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;设置和查看root路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;nvm version&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;查看当前的版本&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;全局安装npmcnpm&#34;&gt;6、全局安装npm，cnpm&lt;/h4&gt;
&lt;p&gt;安装node的时候，npm其实也已经一起安装了。因为nvm可以管理多个版本的node，如果每次添加一个node版本都要安装一堆的包很麻烦，如果有一个npm可以让各个版本的node共用，就不会这么麻烦了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简单的三步就可以配置一个全局的npm。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.npm config set prefix &#34;E:&#34;
//配置用npm下载包时全局安装的包路径。&lt;/p&gt;
&lt;p&gt;2.npm install npm -g
--registry=https://npmmirror.com/mirrors/安装全局npm，不同的node都使用这个npm。想更新全局的npm的话首先删除全局路径(就是上一行命令的地址，可以使用npm
config ls查看)下的npm，再执行一次这个命令即可。&lt;/p&gt;
&lt;p&gt;3.在用户变量中添加 NPM_HOME =
E:，path中添加%NPM_HOME%。这里需要注意的是，%NPM_HOME%要添加在%NVM_SYMLINK%之前，避免npm访问到的是nodejs中自带的npm包管理工具。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用淘宝镜像cnpm。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.&lt;code&gt;npm install -g cnpm --registry=https://npmmirror.com/mirrors&lt;/code&gt;
//使用淘宝镜像cnmp替代npm&lt;/p&gt;
&lt;p&gt;2.&lt;code&gt;cnpm config get registry&lt;/code&gt; //验证cnpm是否可用&lt;/p&gt;
&lt;h4 id=&#34;遇到的问题&#34;&gt;7、遇到的问题&lt;/h4&gt;
&lt;p&gt;1.在安装nvm的时候没有卸载node，导致使用nvm安装完之后，node和npm都不可用。&lt;/p&gt;
&lt;p&gt;2.在第一次使用nvm安装node后，要记得使用 nvm use
切换下node版本，以及用 nvm on
打开nodejs版本控制，不然这时候node和npm也都不可用。&lt;/p&gt;
&lt;p&gt;3.全局安装完npm的时候，需要关掉终端窗口重新打开，才能装得上cnpm。&lt;/p&gt;
</content>
        <category term="工作日志" scheme="http://example.com/categories/job/" />
        <category term="job" scheme="http://example.com/tags/job/" />
        <updated>2024-06-16T14:58:49.054Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/06/13/post/windows/pid/windows%E8%BF%9B%E7%A8%8B/</id>
        <title>windows进程命令</title>
        <link rel="alternate" href="http://example.com/2024/06/13/post/windows/pid/windows%E8%BF%9B%E7%A8%8B/"/>
        <content type="html">&lt;h1 id=&#34;windows进程&#34;&gt;windows进程&lt;/h1&gt;
&lt;h3 id=&#34;查看进程&#34;&gt;查看进程&lt;/h3&gt;
&lt;p&gt;查看该服务的进程&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;tasklist | findstr &lt;span class=&#34;string&#34;&gt;&amp;quot;jupyter&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看端口占用&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;netstat -ano&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看指定端口的占用情况&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;netstat -aon|findstr 8080&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看PID对应的进程&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;tasklist|findstr 21692&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;杀死进程&#34;&gt;杀死进程&lt;/h3&gt;
&lt;p&gt;杀程序&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;taskkill /f /t /im jupyter-notebook.exe&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;杀PID&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;taskkill /f /PID 22524&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="Windows" scheme="http://example.com/categories/windows/" />
        <category term="进程" scheme="http://example.com/categories/windows/pid/" />
        <category term="Windows" scheme="http://example.com/tags/Windows/" />
        <category term="进程" scheme="http://example.com/tags/%E8%BF%9B%E7%A8%8B/" />
        <updated>2024-06-12T18:42:16.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/06/10/post/biao/cryptology/Elliptic%20Curve/</id>
        <title>密码学中的椭圆曲线（一）——代数曲线</title>
        <link rel="alternate" href="http://example.com/2024/06/10/post/biao/cryptology/Elliptic%20Curve/"/>
        <content type="html">&lt;h1
id=&#34;密码学中的椭圆曲线一代数曲线&#34;&gt;密码学中的椭圆曲线（一）——代数曲线&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;椭圆曲线定义&lt;/strong&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;椭圆曲线是指具有特殊基点且亏格为1的代数曲线&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;（定义在&lt;span
class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt;上的）椭圆曲线是至少包含一个&lt;span
class=&#34;math inline&#34;&gt;\(K-\)&lt;/span&gt;有理点的亏格为1的光滑射影曲线&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;        曲线：一种一维结构          射影：添加了无穷远点
        光滑：曲线不存在尖点或交叉点（结点）
        亏格为1：一种拓扑性质&lt;/p&gt;
&lt;p&gt; 直观来看，&lt;strong&gt;曲线&lt;/strong&gt;可以看成满足一个多项式方程组的解，或者称为代数集。曲线的光滑性可直观体现为不存在交叉点（结点）或尖点。亏格是拓扑性质，直观上体现为闭曲面洞的数量。例如，球面的亏格为0，环面的亏格为1.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;代数集&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;约定&lt;span
class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt;是一个完全域（任何域扩张都是可分的），&lt;span
class=&#34;math inline&#34;&gt;\(\bar{K}\)&lt;/span&gt;表示其代数闭包。将多个变量的多项式环&lt;span
class=&#34;math inline&#34;&gt;\(K[x_1,x_2,\cdots,x_n]\)&lt;/span&gt;简记为&lt;span
class=&#34;math inline&#34;&gt;\(K[X]\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;仿射空间中的代数集是仿射空间的点集。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;定义（代数集）&lt;/strong&gt;：设&lt;span
class=&#34;math inline&#34;&gt;\(I\subseteq\bar{K}[X]\)&lt;/span&gt;是多项式环的理想，称&lt;span
class=&#34;math inline&#34;&gt;\(V_I=\{P\in\mathbb{A}^n(\bar{K})\mid \forall f\in
I,f(P)=0\}\)&lt;/span&gt;为理想&lt;span
class=&#34;math inline&#34;&gt;\(I\)&lt;/span&gt;的代数集。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;反过来可以定义代数集的理想：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：设&lt;span class=&#34;math inline&#34;&gt;\(V\subseteq
\mathbb{A}^n\)&lt;/span&gt;是代数集，称&lt;span
class=&#34;math inline&#34;&gt;\(I(V)=\{f\in\bar{K}[X]\mid \forall P\in
V,f(P)=0\}\)&lt;/span&gt;为代数集&lt;span
class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt;的理想。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例如&lt;span
class=&#34;math inline&#34;&gt;\((x)\subseteq\bar{\mathbb{Q}}[x,y]\)&lt;/span&gt;是理想，其代数集为&lt;span
class=&#34;math inline&#34;&gt;\(V_{(x)}=\{(0,b)\mid b\in
\bar{\mathbb{Q}}\}\)&lt;/span&gt;。&lt;span
class=&#34;math inline&#34;&gt;\(V=\{(0,0)\}\)&lt;/span&gt;是代数集，其理想为&lt;span
class=&#34;math inline&#34;&gt;\(I(V)=(x,y)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;如果代数集&lt;span class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt;的理想可由&lt;span
class=&#34;math inline&#34;&gt;\(K[X]\)&lt;/span&gt;中多项式生成，则称&lt;span
class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt;定义在&lt;span
class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt;上，记作&lt;span
class=&#34;math inline&#34;&gt;\(V/K\)&lt;/span&gt;。可定义&lt;span
class=&#34;math inline&#34;&gt;\(I(V/K)=\{f\in K[X]\mid \forall P\in
V,f(P)=0\}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;射影代数集&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为了保证多项式的根不会因射影空间中的不同坐标而冲突（例如在&lt;span
class=&#34;math inline&#34;&gt;\(\mathbb{P}^1\)&lt;/span&gt;中考虑&lt;span
class=&#34;math inline&#34;&gt;\(x+1=0\)&lt;/span&gt;，&lt;span
class=&#34;math inline&#34;&gt;\((-1:0)\)&lt;/span&gt;和&lt;span
class=&#34;math inline&#34;&gt;\((1:0)\)&lt;/span&gt;表示同一个点，但只有前者是多项式的根），因此考虑齐次多项式。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;定义（射影代数集）&lt;/strong&gt;：设&lt;span
class=&#34;math inline&#34;&gt;\(I\subseteq\bar{K}[X]\)&lt;/span&gt;是齐次多项式生成的的理想，称&lt;span
class=&#34;math inline&#34;&gt;\(V_I=\{P\in\mathbb{P}^n(\bar{K})\mid \forall f\in
I,f(P)=0\}\)&lt;/span&gt;为理想&lt;span
class=&#34;math inline&#34;&gt;\(I\)&lt;/span&gt;的射影代数集。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;反过来也可以定义射影代数集的理想&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：设&lt;span class=&#34;math inline&#34;&gt;\(V\subseteq
\mathbb{P}^n\)&lt;/span&gt;是射影代数集，称&lt;span
class=&#34;math inline&#34;&gt;\(I(V)=\{f\in\bar{K}[X]\mid f是其次多项式 \land
\forall P\in V,f(P)=0\}\)&lt;/span&gt;为射影代数集&lt;span
class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt;的理想。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例如&lt;span class=&#34;math inline&#34;&gt;\(I=(x-z)\subseteq
\bar{\mathbb{Q}}[x,y,z]\)&lt;/span&gt;是齐次理想，其射影代数集为&lt;span
class=&#34;math inline&#34;&gt;\(V_I=\{(1:a:1)\mid a\in\bar{\mathbb{Q}}\}\cup
\{(0:1:0)\}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;仿射空间和射影空间中的代数集可以通过齐次化和去齐次化相互转化。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;齐次化&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;设&lt;span
class=&#34;math inline&#34;&gt;\(I=(y^2-x^3+x)\subseteq\bar{\mathbb{Q}}[x,y]\)&lt;/span&gt;，对应的代数集为&lt;span
class=&#34;math inline&#34;&gt;\(V_I=\{(x,y)\in\bar{\mathbb{Q}}^2\mid
y^2=x^3-x\}\subseteq\mathbb{A}^2(\bar{\mathbb{Q}})\)&lt;/span&gt;。可将&lt;span
class=&#34;math inline&#34;&gt;\(f(x,y)\)&lt;/span&gt;齐次化为&lt;span
class=&#34;math inline&#34;&gt;\(f^*(x,y,z)=z^{\deg
f}f(x/z,y/z)\)&lt;/span&gt;，上面的例子即为&lt;span
class=&#34;math inline&#34;&gt;\(y^2z-x^3+xz^2\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;去齐次化&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于一个代数集&lt;span
class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt;，可限制某个坐标为1，进行去齐次化，并将其记为&lt;span
class=&#34;math inline&#34;&gt;\(V\cap \mathbb{A}^n\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;代数簇&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：一个（射影）代数集对应的（齐次）理想为&lt;span
class=&#34;math inline&#34;&gt;\(\bar{K}[X]\)&lt;/span&gt;的素理想，则称为（射影）代数簇。有一个等价定义，若一个代数集不可写成两个真子代数集的并，则称为代数簇。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例如&lt;span
class=&#34;math inline&#34;&gt;\(（x）\subseteq\bar{\mathbb{Q}}[x,y]\)&lt;/span&gt;是素理想，&lt;span
class=&#34;math inline&#34;&gt;\((xy)\subseteq\bar{\mathbb{Q}}[x,y]\)&lt;/span&gt;不是素理想。&lt;/p&gt;
&lt;p&gt;下面定义坐标环和函数域。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：设&lt;span
class=&#34;math inline&#34;&gt;\(V/K\)&lt;/span&gt;是仿射代数簇，则定义坐标环为&lt;span
class=&#34;math inline&#34;&gt;\(K[V]=K[X]/I(V/K)\)&lt;/span&gt;，其分式域即&lt;span
class=&#34;math inline&#34;&gt;\(V/K\)&lt;/span&gt;的函数域，记为&lt;span
class=&#34;math inline&#34;&gt;\(K(V)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;若&lt;span class=&#34;math inline&#34;&gt;\(V/K\)&lt;/span&gt;是射影代数簇，则用&lt;span
class=&#34;math inline&#34;&gt;\(K[V],K(V)\)&lt;/span&gt;分别表示&lt;span
class=&#34;math inline&#34;&gt;\(K[V\cap\mathbb{A}^n],K(V\cap\mathbb{A}^n)\)&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例：对于&lt;span
class=&#34;math inline&#34;&gt;\(I=(y^2-x^3+x)\subseteq\mathbb{Q}[x,y]\)&lt;/span&gt;，对应的代数簇为&lt;span
class=&#34;math inline&#34;&gt;\(V/\mathbb{Q}\)&lt;/span&gt;，则&lt;span
class=&#34;math inline&#34;&gt;\(\mathbb{Q}(V)=\mathbb{Q}(x,\sqrt{x^3-x})\)&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：设&lt;span
class=&#34;math inline&#34;&gt;\(V/K\)&lt;/span&gt;是代数簇，&lt;span
class=&#34;math inline&#34;&gt;\(\bar{K}(V)\)&lt;/span&gt;相对&lt;span
class=&#34;math inline&#34;&gt;\(\bar{K}\)&lt;/span&gt;的超越次数称为&lt;span
class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt;的维数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上例中维数为1。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：&lt;span
class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;是代数簇&lt;span
class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt;上的一点，定义&lt;span
class=&#34;math inline&#34;&gt;\(\bar{K}[V]\)&lt;/span&gt;在理想&lt;span
class=&#34;math inline&#34;&gt;\(M_P=\{f\in\bar{K}[V]\mid
f(P)=0\}\)&lt;/span&gt;处的局部化。&lt;span
class=&#34;math inline&#34;&gt;\(\bar{K}[V]_P=\{\frac{f}{g}\in\bar{K}(V)\mid
f,g\in\bar{K}[V],g(P)\neq0\}\)&lt;/span&gt;为&lt;span
class=&#34;math inline&#34;&gt;\(V\)&lt;/span&gt;在&lt;span
class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;点的局部环。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;曲线、光滑&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;定义：1维的射影代数簇称为曲线。&lt;/p&gt;
&lt;p&gt;定义：设&lt;span class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt;是一条由&lt;span
class=&#34;math inline&#34;&gt;\(f(x,y,z)=0\)&lt;/span&gt;定义的曲线，若&lt;span
class=&#34;math inline&#34;&gt;\(\frac{\partial f}{\partial x}|_P=\frac{\partial
f}{\partial y}|_P=\frac{\partial f}{\partial z}|_P=0\)&lt;/span&gt;，则称&lt;span
class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt;在点&lt;span
class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;处奇异。在每一点都非奇异的曲线称为光滑的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例如&lt;span
class=&#34;math inline&#34;&gt;\(zy^2-x^3+xz^2=0\)&lt;/span&gt;定义的曲线是光滑的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;映射&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面给出有理映射，态射的概念&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：设&lt;span
class=&#34;math inline&#34;&gt;\(V_1,V_2\)&lt;/span&gt;是两个代数簇，如果映射&lt;span
class=&#34;math inline&#34;&gt;\(\phi:V_1\rightarrow
V_2\)&lt;/span&gt;满足如下条件则称为有理映射：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\begin{aligned}\phi:V_1&amp;amp;\rightarrow
V_2\\P&amp;amp;\mapsto [f_0(P),\cdots,f_n(P)]\in V_2
\end{aligned}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这里&lt;span
class=&#34;math inline&#34;&gt;\(f_0,\cdots,f_n\in\bar{K}(V_1)\)&lt;/span&gt;，且这些函数对于任意&lt;span
class=&#34;math inline&#34;&gt;\(P\in V_1\)&lt;/span&gt;都有定义。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：如果存在&lt;span
class=&#34;math inline&#34;&gt;\(g\in\bar{K}(V_1)\)&lt;/span&gt;使得下面两个条件成立，则称有理映射&lt;span
class=&#34;math inline&#34;&gt;\(\phi:V_1\rightarrow V_2\)&lt;/span&gt;在&lt;span
class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;点处正则：&lt;/p&gt;
&lt;p&gt;（1）&lt;span class=&#34;math inline&#34;&gt;\(gf_i\)&lt;/span&gt;均在点&lt;span
class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;处正则&lt;/p&gt;
&lt;p&gt;（2）存在某个&lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;使得&lt;span
class=&#34;math inline&#34;&gt;\(gf_i(P)\neq0\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果&lt;span class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt;在&lt;span
class=&#34;math inline&#34;&gt;\(V_1\)&lt;/span&gt;的每个点正则，则称&lt;span
class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt;为态射。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：如果存在态射&lt;span
class=&#34;math inline&#34;&gt;\(\phi:V_1\rightarrow V_2,\psi:V_2\rightarrow
V_1\)&lt;/span&gt;，使得&lt;span class=&#34;math inline&#34;&gt;\(\phi \circ \psi,\psi\circ
\phi\)&lt;/span&gt;分别是&lt;span
class=&#34;math inline&#34;&gt;\(V_2,V_1\)&lt;/span&gt;上的恒等映射，则称&lt;span
class=&#34;math inline&#34;&gt;\(V_1,V_2\)&lt;/span&gt;同构。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例如&lt;span class=&#34;math inline&#34;&gt;\(V_1=\{[x,y,z]\mid
zy^2=x^3+z^3\}，V_2=\mathbb{P}^1\)&lt;/span&gt;，有理映射&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\phi: V_1&amp;amp;\rightarrow V_2\\
[x,y,z]&amp;amp;\mapsto[x,z]\\
[0,1,0]&amp;amp;\mapsto[1,0]
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;选择&lt;span class=&#34;math inline&#34;&gt;\(g=x^2\)&lt;/span&gt;，&lt;span
class=&#34;math inline&#34;&gt;\([x,z]=[x^3,x^2z]=[zy^2-z^3,x^2z]=[y^2-z^2,x^2]\)&lt;/span&gt;，因此&lt;span
class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt;是态射。&lt;/p&gt;
&lt;h1
id=&#34;密码学中的椭圆曲线二阶与除子&#34;&gt;&lt;strong&gt;密码学中的椭圆曲线（二）——阶与除子&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;直观来看，映射把曲线上的点映射成另一条曲线上的点，映射的次数可视为在非分歧的情况下一个点有多少个原像，而分歧从图上看是某一点附近有多少个点映射成同一个点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;阶&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：设&lt;span
class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt;是射影代数曲线，&lt;span
class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;是其上的非奇异点，可定义函数的阶&lt;/p&gt;
&lt;p&gt;并可扩展定义在&lt;span class=&#34;math inline&#34;&gt;\(\bar{K}(C)\)&lt;/span&gt;上。&lt;/p&gt;
&lt;p&gt;$$ \begin{aligned}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ord_P：{K}[C]_P&amp;amp;\ f&amp;amp;{dfM_P^{d}}&lt;/p&gt;
&lt;p&gt;\end{aligned}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$$&lt;/p&gt;
&lt;p&gt;&lt;span
class=&#34;math inline&#34;&gt;\(ord_P(\frac{f}{g})=ord_P(f)-ord_P(g)\)&lt;/span&gt;。如果&lt;span
class=&#34;math inline&#34;&gt;\(t\in\bar{K}(C)\)&lt;/span&gt;满足&lt;span
class=&#34;math inline&#34;&gt;\(ord_P(t)=1\)&lt;/span&gt;，则称为单值化子。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定理&lt;/strong&gt;：设&lt;span
class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt;是光滑射影代数曲线，则&lt;span
class=&#34;math inline&#34;&gt;\(f\in\bar{K}(C)\)&lt;/span&gt;的零点和极点有限，且若&lt;span
class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt;无极点，则&lt;span
class=&#34;math inline&#34;&gt;\(f\in\bar{K}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;证明&lt;/strong&gt;：待补充。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;阶满足如下性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;span
class=&#34;math inline&#34;&gt;\(ord_P(fg)=ord_P(f)ord_P(g)\)&lt;/span&gt;,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;若&lt;span class=&#34;math inline&#34;&gt;\(ord_P(f)\neq
ord_P(g)\)&lt;/span&gt;，则有&lt;span
class=&#34;math inline&#34;&gt;\(ord_P(f+g)=\min\{ord_P(f),ord_P(g)\}\)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;一个重要例子&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;光滑曲线&lt;span
class=&#34;math inline&#34;&gt;\(E/\bar{K}:y^2=x^3+Ax+B=(x-e_1)(x-e_2)(x-e_3)\)&lt;/span&gt;，设&lt;span
class=&#34;math inline&#34;&gt;\(P_i=(e_i,0)\)&lt;/span&gt;，无穷远点&lt;span
class=&#34;math inline&#34;&gt;\(\mathcal{O}=[0,1,0]\)&lt;/span&gt;，求&lt;span
class=&#34;math inline&#34;&gt;\(ord_{P_i}(x-e_i)，ord_{P_i}(y),ord_\mathcal{O}(y)\)&lt;/span&gt;?&lt;/p&gt;
&lt;p&gt;注意到曲线光滑保证了&lt;span class=&#34;math inline&#34;&gt;\(i\neq
j\)&lt;/span&gt;时，&lt;span class=&#34;math inline&#34;&gt;\(e_i\neq e_j\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span
class=&#34;math inline&#34;&gt;\(\bar{K}[E]=\bar{K}[E\cap\mathbb{A}^2]=\bar{K}[x,y]/(y^2-x^3-Ax-B)\)&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;以&lt;span class=&#34;math inline&#34;&gt;\(P_1\)&lt;/span&gt;为例，&lt;span
class=&#34;math inline&#34;&gt;\(X-e_1Z,Y\in M_{P_1}\)&lt;/span&gt;，&lt;span
class=&#34;math inline&#34;&gt;\((X-e_1Z,Y)\)&lt;/span&gt;是&lt;span
class=&#34;math inline&#34;&gt;\(\bar{K}[E]\)&lt;/span&gt;的极大理想，因此&lt;span
class=&#34;math inline&#34;&gt;\(M_{P_1}=(X-e_1Z,Y)\)&lt;/span&gt;，可对等式右侧进行泰勒展开得到：
&lt;span
class=&#34;math inline&#34;&gt;\(Y^2Z=(e_1Z-e_2Z)(e_1Z-e_3Z)(X-e_1Z)+\frac{1}{2}(2e_1-e_2-e_3)Z(X-e_1Z)^2+\frac{1}{6}(X-e_1Z)^3\)&lt;/span&gt;
整理可得 &lt;span
class=&#34;math inline&#34;&gt;\((e_1-e_2)(e_1-e_3)Z^2(X-e_1Z)=Y^2Z-\frac{1}{2}(2e_1-e_2-e_3)Z(X-e_1Z)^2-\frac{1}{6}(X-e_1Z)^3\)&lt;/span&gt;
注意到&lt;span class=&#34;math inline&#34;&gt;\(RHS\in M_P^{2}\)&lt;/span&gt;，故&lt;span
class=&#34;math inline&#34;&gt;\(X-e_1Z\in M_P^2\)&lt;/span&gt;，曲线光滑&lt;span
class=&#34;math inline&#34;&gt;\(\dim_{\bar{K}}M_{P_1}/M_{P_1}^2=\dim
V=1\)&lt;/span&gt;，&lt;span
class=&#34;math inline&#34;&gt;\(M_{P_1}/M_{P_1}^2\)&lt;/span&gt;由&lt;span
class=&#34;math inline&#34;&gt;\(Y\)&lt;/span&gt;生成，即&lt;span
class=&#34;math inline&#34;&gt;\(ord_{P_1}(Y)=1\)&lt;/span&gt;. &lt;span
class=&#34;math inline&#34;&gt;\(ord_{P_1}(X-e_1Z)=\min\{2ord_{P_1}(Y),2ord_{P_1}(X-e_1Z),3ord_{P_1}(X-e_1Z)\}=2\)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在&lt;span class=&#34;math inline&#34;&gt;\(\mathcal{O}\)&lt;/span&gt;点附近由&lt;span
class=&#34;math inline&#34;&gt;\(\bar{K}[E]=\bar{K}[E\cap\mathbb{A}^2]=\bar{K}[x,z]/(z-x^3-Axz^2-Bz^3)\)&lt;/span&gt;，&lt;span
class=&#34;math inline&#34;&gt;\(M_\mathcal{O}=(X,Z)\)&lt;/span&gt;，因此&lt;span
class=&#34;math inline&#34;&gt;\(X-e_iZ\in M_\mathcal{O},Z\in
M^3_\mathcal{O}\)&lt;/span&gt;，&lt;span
class=&#34;math inline&#34;&gt;\(M_\mathcal{O}/M_\mathcal{O}^2\)&lt;/span&gt;由&lt;span
class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;生成，即&lt;span
class=&#34;math inline&#34;&gt;\(ord_\mathcal{O}(X)=1,ord_\mathcal{O}(X-e_iZ)=\min\{ord_\mathcal{O}(X),ord_\mathcal{O}(Z)\}=1.\)&lt;/span&gt;
最够得到&lt;span
class=&#34;math inline&#34;&gt;\(ord_{P_i}(x-e_i)=2,ord_{P_i}(y)=1,ord_\mathcal{O}(x-e_i)=-2,ord_\mathcal{O}(y)=-3\)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;命题&lt;/strong&gt;：设&lt;span
class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;是曲线&lt;span
class=&#34;math inline&#34;&gt;\(C/K\)&lt;/span&gt;上的非奇异点，&lt;span
class=&#34;math inline&#34;&gt;\(t_P\)&lt;/span&gt;是对应的单值化子，则&lt;span
class=&#34;math inline&#34;&gt;\(K(C)/K(t_P)\)&lt;/span&gt;是有限可分扩张。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;曲线的映射&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;命题&lt;/strong&gt;：设&lt;span
class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt;是曲线，&lt;span
class=&#34;math inline&#34;&gt;\(V\subseteq\mathbb{P}^n\)&lt;/span&gt;是代数簇，&lt;span
class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;是曲线&lt;span
class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt;上的非奇异点，&lt;span
class=&#34;math inline&#34;&gt;\(\phi:C\rightarrow V\)&lt;/span&gt;是有理映射，则&lt;span
class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt;在&lt;span
class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;处正则。特别地，如果&lt;span
class=&#34;math inline&#34;&gt;\(C\)&lt;/span&gt;光滑，则&lt;span
class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt;是态射。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;证明&lt;/strong&gt;：令&lt;span
class=&#34;math inline&#34;&gt;\(\phi=[f_0,\cdots,f_n],f_i\in
\bar{K}(C)\)&lt;/span&gt;，选择一个在&lt;span
class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;点处的单值化子&lt;span
class=&#34;math inline&#34;&gt;\(t\in\bar{K}(C)\)&lt;/span&gt;，令&lt;span
class=&#34;math inline&#34;&gt;\(n=\underset{0\leq i\leq n}{\min}
ord_P(f_i)\)&lt;/span&gt;。则对任意的&lt;span
class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;，&lt;span
class=&#34;math inline&#34;&gt;\(ord_P(t^{-n}f_i)\geq0\)&lt;/span&gt;，存在一个&lt;span
class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;满足&lt;span
class=&#34;math inline&#34;&gt;\(ord_P(t^{-n}f_j)=0\)&lt;/span&gt;。因此，每个&lt;span
class=&#34;math inline&#34;&gt;\(t^{-n}f_i\)&lt;/span&gt;在&lt;span
class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;点处正则，且&lt;span
class=&#34;math inline&#34;&gt;\((t^{-n}f_j)(P)\neq0\)&lt;/span&gt;，因此&lt;span
class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt;在&lt;span
class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;处正则。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;定理&lt;/strong&gt;：曲线之间的态射要么是满射，要么是常值映射。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;两条曲线&lt;span
class=&#34;math inline&#34;&gt;\(C_1/K,C_2/K\)&lt;/span&gt;，非常值有理映射&lt;span
class=&#34;math inline&#34;&gt;\(\phi:C_1\rightarrow C_2\)&lt;/span&gt;诱导一个单射&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\phi^*:K(C_2)&amp;amp;\rightarrow K(C_1)\\
f&amp;amp;\mapsto f\circ\phi
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;定理&lt;/strong&gt;：曲线&lt;span
class=&#34;math inline&#34;&gt;\(C_1/K,C_2/K\)&lt;/span&gt;，非常值有理映射&lt;span
class=&#34;math inline&#34;&gt;\(\phi:C_1\rightarrow C_2\)&lt;/span&gt;，则有&lt;/p&gt;
&lt;p&gt;（1）&lt;span
class=&#34;math inline&#34;&gt;\(K(C_1)/\phi^*(K(C_2)\)&lt;/span&gt;是有限扩张&lt;/p&gt;
&lt;p&gt;（2）&lt;span class=&#34;math inline&#34;&gt;\(\tau:K(C_2)\rightarrow
K(C_1)\)&lt;/span&gt;是任意单射，则存在&lt;span
class=&#34;math inline&#34;&gt;\(\phi:C_2\rightarrow C_1\)&lt;/span&gt;使得&lt;span
class=&#34;math inline&#34;&gt;\(\tau=\phi^*\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（3）&lt;span class=&#34;math inline&#34;&gt;\(K\subseteq F\subseteq
K(C_1)\)&lt;/span&gt;是满足&lt;span
class=&#34;math inline&#34;&gt;\([K(C_1):F]&amp;lt;\infty\)&lt;/span&gt;的子域，则存在且在&lt;span
class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt;同构意义的唯一曲线&lt;span
class=&#34;math inline&#34;&gt;\(C^{\prime}\)&lt;/span&gt;，以及非常值的有理映射&lt;span
class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt;，使得&lt;span
class=&#34;math inline&#34;&gt;\(\phi^*(K(C^\prime))=F\)&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;该定理说明了曲线与函数域的一种对应关系。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：曲线&lt;span
class=&#34;math inline&#34;&gt;\(C_1/K,C_2/K\)&lt;/span&gt;，非常值的有理映射&lt;span
class=&#34;math inline&#34;&gt;\(\phi:C_1\rightarrow
C_2\)&lt;/span&gt;，则定义映射的次数为&lt;span class=&#34;math inline&#34;&gt;\(\deg
\phi=[K(C_1):\phi^*(K(C_2))]\)&lt;/span&gt;。对应的可定义纯不可分次数，可分次数为&lt;span
class=&#34;math inline&#34;&gt;\(\deg_i\phi,deg_s\phi\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：利用映射的次数为1可证明两曲线同构。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例如曲线&lt;span
class=&#34;math inline&#34;&gt;\(C/\mathbb{Q}:Y^2Z=X^3+Z^3\)&lt;/span&gt;，考虑有理映射&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\phi:C&amp;amp;\rightarrow \mathbb{P}^1(\mathbb{Q})\\
[X,Y,Z]&amp;amp;\mapsto[X,Z]
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;诱导出&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
\phi^*:\mathbb{Q}(x)&amp;amp;\rightarrow \mathbb{Q}(x,\sqrt{x^3+1})\\
x_{\mathbb{P}^1}&amp;amp;\mapsto x_C
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;映射的次数为&lt;span
class=&#34;math inline&#34;&gt;\(\deg\phi=[\mathbb{Q}(x,\sqrt{x^3+1}):\mathbb{Q}(x)]=2\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分歧&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;定义&lt;span class=&#34;math inline&#34;&gt;\(\phi:C_1\rightarrow
C_2\)&lt;/span&gt;是两条光滑的曲线之间非常值的有理映射，&lt;span
class=&#34;math inline&#34;&gt;\(P\in C_1\)&lt;/span&gt;，&lt;span
class=&#34;math inline&#34;&gt;\(C_2\)&lt;/span&gt;在&lt;span
class=&#34;math inline&#34;&gt;\(\phi(P)\)&lt;/span&gt;处的单值化子为&lt;span
class=&#34;math inline&#34;&gt;\(t_{\phi(P)}\)&lt;/span&gt;，则定义分歧指数&lt;span
class=&#34;math inline&#34;&gt;\(e_\phi(P)=ord_P(\phi^*(t_{\phi(P)}))\)&lt;/span&gt;。如果&lt;span
class=&#34;math inline&#34;&gt;\(e_{\phi(P)}=1\)&lt;/span&gt;，则称为非分歧，否则称为分歧。如果对&lt;span
class=&#34;math inline&#34;&gt;\(C_1\)&lt;/span&gt;上所有点非分歧，则称&lt;span
class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt;非分歧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上例中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;点&lt;span class=&#34;math inline&#34;&gt;\(P=[-1,0,1]\)&lt;/span&gt;，则&lt;span
class=&#34;math inline&#34;&gt;\(\phi(P)=[-1,1]\)&lt;/span&gt;，&lt;span
class=&#34;math inline&#34;&gt;\(t_{\phi(P)}=x_{\mathbb{P}^1}+1\)&lt;/span&gt;，&lt;span
class=&#34;math inline&#34;&gt;\(e_\phi(P)=ord_P(\phi^*(x_{\mathbb{P}^1}+1))=ord_P(x_C+1)=2\)&lt;/span&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点&lt;span class=&#34;math inline&#34;&gt;\(Q=[0,1,1]\)&lt;/span&gt;，则&lt;span
class=&#34;math inline&#34;&gt;\(\phi(Q)=[0,1]\)&lt;/span&gt;，&lt;span
class=&#34;math inline&#34;&gt;\(t_{\phi(Q)}=x_{\mathbb{P}^1}\)&lt;/span&gt;，&lt;span
class=&#34;math inline&#34;&gt;\(ord_P(\phi^*(x_{\mathbb{P}^1}))=ord_P(x_C)=1\)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点&lt;span
class=&#34;math inline&#34;&gt;\(\mathcal{O}=[0,1,0]\)&lt;/span&gt;，则&lt;span
class=&#34;math inline&#34;&gt;\(\phi(\mathcal{O})=[0,0],t_{\phi(\mathcal{O})}=\frac{1}{x_{\mathbb{P}^1}}\)&lt;/span&gt;,注意到&lt;span
class=&#34;math inline&#34;&gt;\(ord_\mathcal{O}(x_C)=ord_\mathcal{O}(x_C+1)=-2\)&lt;/span&gt;。&lt;span
class=&#34;math inline&#34;&gt;\(e_\phi(\mathcal{O})=ord_\mathcal{O}(\phi^*(\frac{1}{x_{\mathbb{P}^1}}))=ord_\mathcal{O}(\frac{1}{x_C})=-ord_\mathcal{O}(x_C)=2。\)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;命题：设&lt;span class=&#34;math inline&#34;&gt;\(\phi:C_1\to
C_2\)&lt;/span&gt;是两条光滑的曲线之间非常值的有理映射，则有： (1) &lt;span
class=&#34;math inline&#34;&gt;\(\sum _{P\in \phi ^{- 1}( Q) }e_{\phi }( P) = \deg
\phi\)&lt;/span&gt; (2) &lt;span
class=&#34;math inline&#34;&gt;\(C_2\)&lt;/span&gt;上除了有限个点以外，&lt;span
class=&#34;math inline&#34;&gt;\(\#\phi^-1(Q)=\deg_s\phi\)&lt;/span&gt; (3) &lt;span
class=&#34;math inline&#34;&gt;\(\psi : C_2\to
C_3\)&lt;/span&gt;也是两条光滑的曲线之间非常值的有理映射， &lt;span
class=&#34;math inline&#34;&gt;\(e_{\psi\circ\phi}(P)=e_\psi(\phi(P))e_\phi(P)\)&lt;/span&gt;
推论：&lt;span class=&#34;math inline&#34;&gt;\(\phi:C_1\to
C_2\)&lt;/span&gt;非分歧等价于&lt;span class=&#34;math inline&#34;&gt;\(\forall Q\in
C_2,\#\phi^{-1}(Q)=\deg_s\phi\)&lt;/span&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;除子&lt;/strong&gt;&lt;/p&gt;
</content>
        <category term="标标备忘录" scheme="http://example.com/categories/biao/" />
        <category term="密码学中的椭圆曲线" scheme="http://example.com/categories/biao/cryptology/" />
        <category term="标标备忘录" scheme="http://example.com/tags/%E6%A0%87%E6%A0%87%E5%A4%87%E5%BF%98%E5%BD%95/" />
        <category term="密码学" scheme="http://example.com/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/" />
        <updated>2024-06-10T05:48:16.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/06/10/post/biao/shor/Shor%20algorithm/</id>
        <title>Shor算法详解</title>
        <link rel="alternate" href="http://example.com/2024/06/10/post/biao/shor/Shor%20algorithm/"/>
        <content type="html">&lt;h1 id=&#34;shor算法详解&#34;&gt;Shor算法详解&lt;/h1&gt;
&lt;p&gt;量子计算理论中一个重要的结论是：「所有经典图灵机都可以用量子电路实现」，也就是说量子计算机至少拥有经典计算机的计算能力。超越经典计算机的能力被称为Quantum
Supermacy。&lt;/p&gt;
&lt;p&gt;Shor算法解决的问题是「任何合数的质因数分解」——输入21，输出3×7；输入3233，输出53×61。在经典计算理论中，质因数分解算法在不断优化，但是至今仍然没有发现一个多项式复杂度的算法。不仅如此，也没有人能从反方向证明质因数分解是一个&lt;strong&gt;NP
Complete&lt;/strong&gt;问题。&lt;/p&gt;
&lt;p&gt;算法整体的大致脉络：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;&lt;p&gt;因数分解问题——对于任意合数n，希望找到它的一个因数p :
1&amp;lt;p&amp;lt;n（这里不要求p为质数）；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;我们将证明，如果能够解决另外一个所谓「模n周期」问题（Order
finding
problem)，那么就可以利用该问题的解来搞定因数分解问题（两个问题的转化只需要经典算法）；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;「模n周期」问题的求解可以分为两个步骤&lt;/p&gt;
&lt;ol type=&#34;i&#34;&gt;
&lt;li&gt;第一步是量子算法，用到一个叫「相位估计」（Phase
estimation）的量子电路得到中间解；&lt;/li&gt;
&lt;li&gt;第二步用到的是连分数（Continued
fraction）的经典（非量子）算法将中间解转化为最终「模n周期」的解&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;「相位估计」量子电路具有以下特点&lt;/p&gt;
&lt;ol type=&#34;i&#34;&gt;
&lt;li&gt;输入状态是实验室条件下易准备的状态；&lt;/li&gt;
&lt;li&gt;输出的测量结果成功概率可以通过输入状态精度进行调控。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最终结果是，我们整体上获得了一个经典+量子混合的一个概率算法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;复杂度为&lt;span
class=&#34;math inline&#34;&gt;\(O(\log(n)^3\)&lt;/span&gt;，远低于多项式复杂度；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过调整输入精度能够以任意接近于1的概率得到一个正确的结果&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2
id=&#34;因数分解问题到模n周期问题的转化&#34;&gt;「因数分解」问题到「模n周期」问题的转化&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：给定正整数n，和与之互质的的整数&lt;span
class=&#34;math inline&#34;&gt;\(x：1 &amp;lt; x &amp;lt; n\)&lt;/span&gt;，满足以下条件&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
x^r-1=0 \pmod n
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;的最小正整数&lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt;，称为 $ x $
的「模n周期」，简称周期。&lt;/p&gt;
&lt;p&gt;例：令 &lt;span class=&#34;math inline&#34;&gt;\(n=18,x=11\)&lt;/span&gt;：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;11^1=11&amp;amp;\pmod {18}\\
&amp;amp;11^2=121=13&amp;amp;\pmod {18}\\
&amp;amp;11^3=1331=17&amp;amp;\pmod{18}\\
&amp;amp;11^4=14641=7&amp;amp;\pmod{18}\\
&amp;amp;11^5=161051=5&amp;amp;\pmod{18}\\
&amp;amp;11^6=1771561=1&amp;amp;\pmod{18}\\
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;因此对于模n=18，x=11的周期为r=6.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命题&lt;/strong&gt;：若&lt;span
class=&#34;math inline&#34;&gt;\(\gcd(x,n)=1\)&lt;/span&gt;，则周期一定存在。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;证明&lt;/strong&gt;：考虑 &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;
的各级幂在模n下的余数&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
x^1,x^2,\cdots,x^{n-1},x^n\pmod n
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;由于&lt;span
class=&#34;math inline&#34;&gt;\(\gcd(x,n)=1\)&lt;/span&gt;，则上列各数都非零，从而上列诸数只能从1到n-1中取值。由鸽巢原理可知，故必有两者取值相同，记为&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
x^j=x^k\pmod n
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;但由于&lt;span class=&#34;math inline&#34;&gt;\(x\neq0\pmod n\)&lt;/span&gt;，因此&lt;span
class=&#34;math inline&#34;&gt;\(r=|j-k|\)&lt;/span&gt;满足周期性要求&lt;span
class=&#34;math inline&#34;&gt;\(x^n=1\pmod n\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;若周期 &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt;
是偶数，则我们可以将周期的定义等价改写为&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
(x^{r/2}-1)(x^{r/2}+1)=0\pmod n
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;n整除上式左边的两个乘积。但由于周期r定义中的最小性， &lt;span
class=&#34;math inline&#34;&gt;\(x^{r/2}-1\)&lt;/span&gt; 不可能为0，而如果此时 &lt;span
class=&#34;math inline&#34;&gt;\(x^{r/2}+1\)&lt;/span&gt;也不为零，那么&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\gcd(x^{r/2}-1,n),\qquad \gcd(x^{r/2}+1,n)
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;二者之中至少一个是n的因数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;：我们随机选定一个与n互质的数x：1 &amp;lt; x &amp;lt;
n，求得它的周期r，如果r满足以下两个条件——称为【好周期条件】&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;&lt;p&gt;r 是偶数；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(x^{r/2}+1\neq0\pmod
n\)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那么我们就可以通过最大公约数gcd操作获得n的一个因数，而众所周知，求最大公约数的问题存在log(n)
复杂度的经典算法（即「辗转相除法」或者Euclid
Algorithm）。由此我们便解决了因数分解问题。&lt;/p&gt;
&lt;p&gt;下表列出了所有与n互质的x、x的周期r以及  的值，并在最后一列标注r是否满足【好周期条件】。我们看到，对于n=33，一共有20个x与n互质，而其中10个满足条件。&lt;/p&gt;
&lt;figure&gt;
&lt;img
src=&#34;https://pic2.zhimg.com/80/v2-971e98aeb4f10c1511cdaa9118517df1_720w.webp&#34;
alt=&#34;v2-971e98aeb4f10c1511cdaa9118517df1_720w&#34; /&gt;
&lt;figcaption
aria-hidden=&#34;true&#34;&gt;v2-971e98aeb4f10c1511cdaa9118517df1_720w&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;好周期概率定理&lt;/strong&gt;：若某个奇合数的质因数分解为如下形式&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
n=p_1^{\alpha_1}p_2^{\alpha_2}\cdots p_m^{\alpha_m}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;令&lt;span
class=&#34;math inline&#34;&gt;\(x：1&amp;lt;x&amp;lt;n\)&lt;/span&gt;为随机选取的与n互质的整数，则x的周期r满足【好周期条件】的概率不低于&lt;span
class=&#34;math inline&#34;&gt;\(1-\frac{1}{2^{m-1}}\)&lt;/span&gt;.&lt;/p&gt;
&lt;figure&gt;
&lt;img
src=&#34;https://pic1.zhimg.com/80/v2-82f9fdd57bc0592d0cb0ba1a5e385714_720w.webp&#34;
alt=&#34;v2-82f9fdd57bc0592d0cb0ba1a5e385714_720w&#34; /&gt;
&lt;figcaption
aria-hidden=&#34;true&#34;&gt;v2-82f9fdd57bc0592d0cb0ba1a5e385714_720w&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;现在问题的&lt;strong&gt;核心&lt;/strong&gt;就转移到：给定n和与之互质的x，如何寻找x的周期r。&lt;/p&gt;
&lt;h1 id=&#34;rsa加密算法&#34;&gt;RSA加密算法&lt;/h1&gt;
&lt;h2 id=&#34;操作&#34;&gt;1.操作&lt;/h2&gt;
&lt;h3 id=&#34;公钥与私钥的产生&#34;&gt;公钥与私钥的产生&lt;/h3&gt;
&lt;p&gt;假设&lt;a
href=&#34;https://zh.wikipedia.org/wiki/%E6%84%9B%E9%BA%97%E7%B5%B2%E8%88%87%E9%AE%91%E4%BC%AF&#34;
title=&#34;爱丽丝与鲍伯&#34;&gt;Alice&lt;/a&gt;想要通过不可靠的媒体接收Bob的私人消息。她可以用以下的方式来产生一个&lt;strong&gt;公钥&lt;/strong&gt;和一个&lt;strong&gt;私钥&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;    (1) 随意选择两个不相等的大素数&lt;span
class=&#34;math inline&#34;&gt;\(p,q\)&lt;/span&gt;，计算&lt;span
class=&#34;math inline&#34;&gt;\(N=pq\)&lt;/span&gt;；&lt;/p&gt;
&lt;p&gt;     (2) 根据欧拉函数，求得&lt;span
class=&#34;math inline&#34;&gt;\(r=\varphi(N)=\varphi(p)\varphi(q)=(p-1)(q-1)\)&lt;/span&gt;；&lt;/p&gt;
&lt;p&gt;    (3) 选择一个小于&lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt;的整数&lt;span
class=&#34;math inline&#34;&gt;\(e\)&lt;/span&gt;，且满足&lt;span
class=&#34;math inline&#34;&gt;\(\gcd(r,e)=1\)&lt;/span&gt;，并求得&lt;span
class=&#34;math inline&#34;&gt;\(e\)&lt;/span&gt;关于&lt;span
class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt;的模逆元，记为&lt;span
class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt;（即求&lt;span
class=&#34;math inline&#34;&gt;\(ex\equiv1\pmod r\)&lt;/span&gt;的解）；&lt;/p&gt;
&lt;p&gt;    (4) 将&lt;span class=&#34;math inline&#34;&gt;\(p,q\)&lt;/span&gt;的记录销毁。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\((N,e)\)&lt;/span&gt;是公钥，&lt;span
class=&#34;math inline&#34;&gt;\((N,d)\)&lt;/span&gt;是私钥。Alice将她的公钥&lt;span
class=&#34;math inline&#34;&gt;\((N,e)\)&lt;/span&gt;传给Bob，而将她的私钥&lt;span
class=&#34;math inline&#34;&gt;\((N,d)\)&lt;/span&gt;藏起来。&lt;/p&gt;
&lt;h3 id=&#34;加密信息&#34;&gt;加密信息&lt;/h3&gt;
&lt;p&gt;假设Bob想给Alice送消息&lt;span
class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;，他知道Alice产生的&lt;span
class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;和&lt;span
class=&#34;math inline&#34;&gt;\(e\)&lt;/span&gt;。他使用起先与Alice约好的格式将&lt;span
class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;转换为一个小于&lt;span
class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;的非负整数&lt;span
class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;，比如他可以将每一个字转换为这个字的&lt;a
href=&#34;https://zh.wikipedia.org/wiki/Unicode&#34;
title=&#34;Unicode&#34;&gt;Unicode&lt;/a&gt;码，然后将这些数字连在一起组成一个数字。假如他的信息非常长的话，他可以将这个信息分为几段，然后将每一段转换为&lt;span
class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;。利用公式 &lt;span
class=&#34;math inline&#34;&gt;\(c=n^e\pmod N\)&lt;/span&gt; 可以将 &lt;span
class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 加密为 &lt;span
class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;，这里的&lt;span
class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;可以用模幂算法快速求出来。Bob算出&lt;span
class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;后可将它转递给Alice。&lt;/p&gt;
&lt;h3 id=&#34;解密信息&#34;&gt;解密信息&lt;/h3&gt;
&lt;p&gt;Alice得到Bob的消息 &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;
后就可以利用密钥 &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt;
来解码，利用公式&lt;span class=&#34;math inline&#34;&gt;\(n=c^d\pmod N\)&lt;/span&gt;将
&lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 转化为&lt;span
class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;；&lt;/p&gt;
&lt;p&gt;解码的原理为：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
c^d\equiv n^{e\cdot d}\pmod N
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;已知 &lt;span class=&#34;math inline&#34;&gt;\(ed\equiv1\pmod r\)&lt;/span&gt;，即 &lt;span
class=&#34;math inline&#34;&gt;\(ed=1+h\varphi(N)\)&lt;/span&gt;。那么有&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
n^{ed}=n^{1+h\varphi(N)}=n\cdot n^{h\varphi(N)}=n(n^{\varphi(N)})^h
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;若 &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; 与 &lt;span
class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 互素，则由欧拉定理得：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
n^{ed}\equiv n(n^{\varphi(N)})^h\equiv n(1)^h\equiv n \pmod N
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;若 n 与 N 不互素，则不失一般性考虑 &lt;span
class=&#34;math inline&#34;&gt;\(n=ph\)&lt;/span&gt; 以及 &lt;span
class=&#34;math inline&#34;&gt;\(ed-1=k(q-1)\)&lt;/span&gt;,得：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;n^{ed}=(ph)^{ed}\equiv0 \equiv ph\equiv n\pmod p\\
&amp;amp;n^{ed}=n^{ed-1}n=n^{k(q-1)}n=(n^{q-1})^kn\equiv 1^kn\equiv n\pmod q
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;因此 &lt;span class=&#34;math inline&#34;&gt;\(n^{ed}\equiv n\pmod N\)&lt;/span&gt;
得证。&lt;/p&gt;
&lt;h3 id=&#34;签名信息&#34;&gt;签名信息&lt;/h3&gt;
&lt;p&gt;RSA也可以用来为一个消息署名。假如Alice想给Bob传递一个署名的消息的话，那么她可以为她的消息计算一个&lt;a
href=&#34;https://zh.wikipedia.org/wiki/%E6%95%A3%E5%88%97&#34;
title=&#34;散列&#34;&gt;散列值&lt;/a&gt;（Message
digest），然后用她的私钥“加密”（如同前面“加密消息”的步骤）这个散列值并将这个“署名”加在消息的后面。这个消息只有用她的公钥才能被解密。Bob获得这个消息后可以用Alice的公钥“解密”（如同前面“解密消息”的步骤）这个散列值，然后将这个数据与他自己为这个消息计算的散列值相比较。假如两者相符的话，那么Bob就可以知道发信人持有Alice的&lt;strong&gt;私钥&lt;/strong&gt;，以及这个消息在传播路径上没有被篡改过。&lt;/p&gt;
&lt;h3 id=&#34;正确性证明&#34;&gt;正确性证明&lt;/h3&gt;
&lt;p&gt;首先取两个互素数 &lt;span class=&#34;math inline&#34;&gt;\(p,q\)&lt;/span&gt;，计算&lt;span
class=&#34;math inline&#34;&gt;\(p\cdot q\)&lt;/span&gt; 得到 &lt;span
class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;然后计算欧拉函数&lt;span class=&#34;math inline&#34;&gt;\(\phi(N)\)&lt;/span&gt;，由于
&lt;span class=&#34;math inline&#34;&gt;\(p,q\)&lt;/span&gt; 都是素数，因此 &lt;span
class=&#34;math inline&#34;&gt;\(\phi(N)=(p-1)(q-1)\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;这时我们随机选择一个整数&lt;span
class=&#34;math inline&#34;&gt;\(e\)&lt;/span&gt;，满足&lt;span
class=&#34;math inline&#34;&gt;\(1&amp;lt;e&amp;lt;\phi(N)\)&lt;/span&gt;，且&lt;span
class=&#34;math inline&#34;&gt;\(\gcd(e,\phi(N)=1\)&lt;/span&gt;,接着计算 &lt;span
class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; 满足 &lt;span
class=&#34;math inline&#34;&gt;\(cd\equiv 1\pmod {\phi(N)}\)&lt;/span&gt;。即&lt;span
class=&#34;math inline&#34;&gt;\(ed=k(p-1)(q-1)+1\)&lt;/span&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;于是，RSA公钥为&lt;span class=&#34;math inline&#34;&gt;\((N,e)\)&lt;/span&gt;,私钥为&lt;span
class=&#34;math inline&#34;&gt;\((N,d)\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;加密原文 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 得到密文 &lt;span
class=&#34;math inline&#34;&gt;\(x=m^e\pmod N\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;解密公式为 &lt;span class=&#34;math inline&#34;&gt;\(m=x^d\pmod N\)&lt;/span&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id=&#34;证明解密逻辑&#34;&gt;证明解密逻辑&lt;/h3&gt;
&lt;p&gt;在&lt;span class=&#34;math inline&#34;&gt;\(m&amp;lt;N\)&lt;/span&gt;的状况下证明&lt;span
class=&#34;math inline&#34;&gt;\(m=x^d\pmod N\)&lt;/span&gt;，即证明&lt;span
class=&#34;math inline&#34;&gt;\(x^d\pmod N -m=0\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;x^d\%N-m\\
&amp;amp;=(m^e\%N)^d\%N-m\\
&amp;amp;=m^{ed}\%N-m\\
&amp;amp;=m^{k(p-1)(q-1)+1}\%N-m\\
&amp;amp;=m\cdot (m^{k(p-1)(q-1)-1})\%N
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;当&lt;span
class=&#34;math inline&#34;&gt;\(\gcd(m,N)=1\)&lt;/span&gt;时，由费马小定理可知：&lt;/p&gt;
&lt;p&gt;$$ (m&lt;sup&gt;{k(q-1)})&lt;/sup&gt;{p-1}p\ (m&lt;sup&gt;{k(p-1)})&lt;/sup&gt;{q-1}q\
m^{k(p-1)(q-1)}\ m^{k(p-1)(q-1)}\&lt;/p&gt;
&lt;p&gt;m(m^{k(p-1)(q-1)}-1)%N=0 $$&lt;/p&gt;
&lt;p&gt;当 &lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt; 与 &lt;span
class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; 不互质时，不失一般性设公因子为 &lt;span
class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;，即 &lt;span
class=&#34;math inline&#34;&gt;\(m=ph_1(h_1&amp;lt;q)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;假设 &lt;span class=&#34;math inline&#34;&gt;\(q\mid m\)&lt;/span&gt;，从而&lt;span
class=&#34;math inline&#34;&gt;\(q\mid ph_1\)&lt;/span&gt;。由于 &lt;span
class=&#34;math inline&#34;&gt;\(p,q\)&lt;/span&gt; 互素，从而 &lt;span
class=&#34;math inline&#34;&gt;\(q\mid h_1\)&lt;/span&gt;，因此 &lt;span
class=&#34;math inline&#34;&gt;\(q\leq h_1\)&lt;/span&gt; 矛盾，所以 &lt;span
class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; 不整除 &lt;span
class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;此时 &lt;span class=&#34;math inline&#34;&gt;\(m,q\)&lt;/span&gt;
互素，根据费马小定理：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
&amp;amp;m^{q-1}\equiv 1\pmod q\\
&amp;amp;\Rightarrow m^{k(p-1)(q-1)}\equiv 1\pmod q\\
&amp;amp;\Rightarrow m^{k(p-1)(q-1)}-1=qh_2\\
&amp;amp;\Rightarrow m\cdot (m^{k(p-1)(q-1)}-1)\%N=ph_1\cdot qh_2\%N=0.
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;安全性&#34;&gt;安全性&lt;/h3&gt;
&lt;p&gt;假设偷听者Eve获得了Alice的公钥&lt;span
class=&#34;math inline&#34;&gt;\(N,e\)&lt;/span&gt;以及Bob的加密消息 &lt;span
class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;，但她无法直接获得Alice的密钥 &lt;span
class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt;，要获得 &lt;span
class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt;，最简单的方法是将 &lt;span
class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;分解成&lt;span
class=&#34;math inline&#34;&gt;\(p,q\)&lt;/span&gt;，这样得到同余方程&lt;span
class=&#34;math inline&#34;&gt;\(de\equiv 1\pmod {(p-1)(q-1)}\)&lt;/span&gt;并解出&lt;span
class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; ,然后代入解密公式 &lt;span
class=&#34;math inline&#34;&gt;\(c^d\equiv n \pmod N\)&lt;/span&gt;导出 &lt;span
class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;但至今为止还没有人找到一个多项式时间的算法来分解一个大的整数的因子，同时也还没有人能够证明这种算法不存在。至今为止也没有人能够证明对&lt;span
class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;进行因数分解是唯一的从 &lt;span
class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; 导出 &lt;span
class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;
的方法，直到今天也还没有找到比它更简单的方法。&lt;/p&gt;
&lt;p&gt;假如&lt;span
class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;的长度小于或等于256位，那么用一台个人电脑在几个小时内就可以分解它的因子了。1999年，数百台电脑合作分解了一个512位长的&lt;span
class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;。一个由Shamir
和Tromer在2003年从理论上构建的硬件TWIRL，使人们开始质疑1024位长的&lt;span
class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;的安全性，目前推荐&lt;span
class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;的长度至少为2048位。&lt;/p&gt;
&lt;p&gt;1994年，彼得·秀尔证明一台&lt;a
href=&#34;https://zh.wikipedia.org/wiki/%E9%87%8F%E5%AD%90%E8%AE%A1%E7%AE%97%E6%9C%BA&#34;
title=&#34;量子计算机&#34;&gt;量子计算机&lt;/a&gt;可以在多项式时间内进行因数分解。假如量子计算机有朝一日可以成为一种可行的技术的话，那么秀尔的算法可以淘汰RSA和相关的派生算法。（即依赖于分解大整数困难性的加密算法）&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;实现细节&#34;&gt;实现细节&lt;/h2&gt;
&lt;h3 id=&#34;密钥生成&#34;&gt;密钥生成&lt;/h3&gt;
&lt;p&gt;首先要使用概率算法来验证随机产生的大的整数是否质数，这样的算法比较快而且可以消除掉大多数非质数。假如有一个数通过了这个测试的话，那么要使用一个精确的测试来保证它的确是一个质数。&lt;/p&gt;
&lt;p&gt;除此之外这样找到的&lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;和&lt;span
class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt;还要满足一定的要求，首先它们不能太靠近，此外&lt;span
class=&#34;math inline&#34;&gt;\(p-1\)&lt;/span&gt;或&lt;span
class=&#34;math inline&#34;&gt;\(q-1\)&lt;/span&gt;的因子不能太小，否则的话&lt;span
class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;也可以被很快地分解。
此外寻找质数的算法不能给攻击者任何信息，这些质数是怎样找到的，尤其产生随机数的软件必须非常好。要求是随机和不可预测。这两个要求并不相同。一个随机过程可能可以产生一个不相关的数的系列，但假如有人能够预测出(或部分地预测出)这个系列的话，那么它就已经不可靠了。比如有一些非常好的随机数算法，但它们都已经被发表，因此它们不能被使用，因为假如一个攻击者可以猜出&lt;span
class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;和&lt;span
class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt;一半的位的话，那么他们就已经可以轻而易举地推算出另一半。
此外密钥&lt;span
class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt;必须足够大，1990年有人证明假如&lt;span
class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;大于&lt;span
class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt;而小于2&lt;span
class=&#34;math inline&#34;&gt;\(q\)&lt;/span&gt; (这是一个很常见的情况)而 &lt;span
class=&#34;math inline&#34;&gt;\(d&amp;lt;\frac{1}{3}\times
N^{\frac{1}{4}}\)&lt;/span&gt;,那么从&lt;span
class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;和&lt;span
class=&#34;math inline&#34;&gt;\(e\)&lt;/span&gt;可以很有效地推算出&lt;span
class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt;。此外&lt;span
class=&#34;math inline&#34;&gt;\(e=2\)&lt;/span&gt;永远不应该被使用。&lt;/p&gt;
&lt;h3 id=&#34;密钥分配&#34;&gt;密钥分配&lt;/h3&gt;
&lt;p&gt;和其它加密过程一样，对RSA来说分配公钥的过程是非常重要的。分配公钥的过程必须能够抵挡中间人攻击。假设Eve交给Bob一个公钥，并使Bob相信这是Alice的公钥，并且她可以截下Alice和Bob之间的信息传递，那么她可以将她自己的公钥传给Bob，Bob以为这是Alice的公钥。Eve可以将所有Bob传递给Alice的消息截下来，将这个消息用她自己的密钥解密，读这个消息，然后将这个消息再用Alice的公钥加密后传给Alice。理论上Alice和Bob都不会发现Eve在偷听他们的消息。今天人们一般用&lt;a
href=&#34;https://zh.wikipedia.org/wiki/%E5%85%AC%E9%96%8B%E9%87%91%E9%91%B0%E5%9F%BA%E7%A4%8E%E5%BB%BA%E8%A8%AD&#34;
title=&#34;公开密钥基础建设&#34;&gt;可靠的第三方机构签发证书&lt;/a&gt;来防止这样的攻击。&lt;/p&gt;
&lt;h3 id=&#34;时间攻击&#34;&gt;时间攻击&lt;/h3&gt;
&lt;p&gt;1995年，丹·博内和大卫·布鲁姆利提出了一种出人意料的攻击方式：假如Eve（窃密者）对Alice的硬件有充分的了解，而且知道它对一些特定的消息加密时所需要的时间的话，那么她可以很快地推导出_d_。这种攻击方式之所以会成立，主要是因为在进行加密时所进行的模指数运算是一个比特一个比特进行的，而比特为1所花的运算比比特为0的运算要多很多，因此若能得到多组消息与其加密时间，就会有机会可以反推出私钥的内容。&lt;/p&gt;
&lt;h1
id=&#34;pnpnp-complete和np-hard问题&#34;&gt;P、NP、NP-Complete和NP-Hard问题&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;P问题&lt;/strong&gt;：能在多项式时间内解决的问题
(P：polynominal，多项式)（例如，&lt;strong&gt;计算1-1000的连续整数之和&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NP问题&lt;/strong&gt;：指一个复杂问题不能确定是否在多项式时间内找到答案，但是可以在多项式时间内验证答案是否正确。
即能在多项式时间内验证得出一个正确解的问题 (NP:Nondeterministic
polynominal，非确定性多项式)。（例如，&lt;strong&gt;计算地球上所有原子个数之和&lt;/strong&gt;：这个问题就很困难甚至无解，但是现在有个答案是300个，显然是错的，所以很容易验证但不容易求解）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;P问题与NP问题的关系&lt;/strong&gt;：&lt;span
class=&#34;math inline&#34;&gt;\(P\subseteq NP\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NP-Complete问题（NPC）&lt;/strong&gt;：这个问题满足两个条件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;它是一个NP问题&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;其他所有属于NP的问题都可以归约成它&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;也就是说，只要解决了这个问题，那么所有的NP问题都能解决。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;归约&lt;/strong&gt;：将一个问题转化为另一个问题，使用第二个问题的解来解决第一个问题。&lt;/p&gt;
&lt;p&gt;归约的传递性：如果问题A可约化为问题B，问题B可约化为问题C，那么问题A一定可约化为问题C。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NP-Hard问题&lt;/strong&gt;：它满足NPC问题定义的第二条但不一定要满足第一条。
即所有的NP问题都能约化到它，但是他不一定是一个NP问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NPC与NP-Hard的典型示例-旅行推销员问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;旅行推销员问题（Traveling Salesman Problem,
TSP）&lt;/strong&gt; 是一个商品推销员要去若干个城市推销商品，该推销员从一个城市出发，需要经过所有城市后，回到出发地。&lt;/p&gt;
&lt;p&gt;旅行商问题有两个版本：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;&lt;p&gt;在一个图里，除了起始点以外不重复地遍历所有节点构成一条闭合回路，问这条回路的最短路径是多少？（应如何选择行进路线，以使总的行程最短）---&lt;strong&gt;这个是最优解问题&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在一个图里，除了起始点以外不重复地遍历所有节点构成一条闭合回路，问路径长度小于等于某个值的这样的回路是否存在？（应如何选择行进路线，以使总的行程小于等于某个值）---&lt;strong&gt;这个是判定性问题&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于&lt;strong&gt;问题1&lt;/strong&gt;，是无法令确定型图灵机在多项式时间内验证答案的，所以问题1不是NP问题，因此也不是NPC问题，但是Hamilton回路问题可以约化为TSP问题，而Hamilton回路问题是NP问题，因此是NP-Hard问题。&lt;/p&gt;
&lt;p&gt;对于&lt;strong&gt;问题2&lt;/strong&gt;，可以令确定型图灵机在多项式时间内验证答案，所以问题2是NP问题，同时Hamilton回路问题可以约化为TSP问题，而Hamilton回路问题是NP问题，因此问题2是NP-Hard问题，同时它也是NPC问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四者之间的联系&lt;/strong&gt;：&lt;/p&gt;
&lt;figure&gt;
&lt;img
src=&#34;https://pic1.zhimg.com/80/v2-a7c4f22e07699cbeda418d48379aa4c8_720w.webp&#34;
alt=&#34;v2-a7c4f22e07699cbeda418d48379aa4c8_720w&#34; /&gt;
&lt;figcaption
aria-hidden=&#34;true&#34;&gt;v2-a7c4f22e07699cbeda418d48379aa4c8_720w&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;说明&lt;/strong&gt;：&lt;/p&gt;
&lt;ol type=&#34;1&#34;&gt;
&lt;li&gt;&lt;p&gt;P问题属于NP问题，NPC问题属于NP问题。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;P问题属于NP问题，NPC问题属于NP问题。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt; 尚未有人能提出证明，说明NPC问题是否能在多项式时间中解决，使得此问题成为著名的数学中未解决的问题。位于剑桥市的&lt;strong&gt;克雷数学研究所&lt;/strong&gt;(Clay
Mathematics
Institute，简称CMI)提供了一百万美金奖金给任何可以证明P=NP或P≠NP的人。&lt;/p&gt;
</content>
        <category term="标标备忘录" scheme="http://example.com/categories/biao/" />
        <category term="Shor算法详解" scheme="http://example.com/categories/biao/shor/" />
        <category term="标标备忘录" scheme="http://example.com/tags/%E6%A0%87%E6%A0%87%E5%A4%87%E5%BF%98%E5%BD%95/" />
        <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/" />
        <updated>2024-06-10T05:42:16.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/06/09/post/springboot/01-java%E6%B5%81-Stream/</id>
        <title>01-Java流-Stream</title>
        <link rel="alternate" href="http://example.com/2024/06/09/post/springboot/01-java%E6%B5%81-Stream/"/>
        <content type="html">&lt;h1
id=&#34;java基础吐血总结stream流操作&#34;&gt;【java基础】吐血总结Stream流操作&lt;/h1&gt;
&lt;h2 id=&#34;java-8-新特性&#34;&gt;JAVA 8 新特性&lt;/h2&gt;
&lt;p&gt;Java 8
API添加了一个新的抽象称为流Stream，可以让你以一种声明的方式处理数据。&lt;/p&gt;
&lt;p&gt;Stream 使用一种类似用 SQL 语句从数据库查询数据的直观方式来提供一种对
Java 集合运算和表达的高阶抽象。&lt;/p&gt;
&lt;p&gt;Stream
API可以极大提高Java程序员的生产力，让程序员写出高效率、干净、简洁的代码。&lt;/p&gt;
&lt;p&gt;这种风格将要处理的元素集合看作一种流， 流在管道中传输，
并且可以在管道的节点上进行处理， 比如筛选， 排序，聚合等。&lt;/p&gt;
&lt;p&gt;元素流在管道中经过中间操作（intermediate
operation）的处理，最后由最终操作(terminal
operation)得到前面处理的结果。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;+--------------------+       +------+   +------+   +---+   +-------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| stream of elements +-----&amp;gt; |filter+-&amp;gt; |sorted+-&amp;gt; |map+-&amp;gt; |collect|&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+--------------------+       +------+   +------+   +---+   +-------+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上的流程转换为 Java 代码为：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;List&amp;lt;Integer&amp;gt; transactionsIds = &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;widgets.stream()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             .filter(b -&amp;gt; b.getColor() == RED)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             .sorted((x,y) -&amp;gt; x.getWeight() - y.getWeight())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             .mapToInt(Widget::getWeight)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             .sum();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;什么是stream&#34;&gt;1、什么是Stream？&lt;/h3&gt;
&lt;p&gt;Stream（流）是一个来自数据源的元素队列并支持聚合操作&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;元素是特定类型的对象，形成一个队列。
Java中的Stream并不会存储元素，而是按需计算。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据源&lt;/strong&gt; 流的来源。 可以是集合，数组，I/O channel，
产生器generator 等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;聚合操作&lt;/strong&gt; 类似SQL语句一样的操作， 比如filter, map,
reduce, find, match, sorted等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;和以前的Collection操作不同， Stream操作还有两个基础的特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pipelining&lt;/strong&gt;: 中间操作都会返回流对象本身。
这样多个操作可以串联成一个管道， 如同流式风格（fluent style）。
这样做可以对操作进行优化， 比如延迟执行(laziness)和短路(
short-circuiting)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内部迭代&lt;/strong&gt;：
以前对集合遍历都是通过Iterator或者For-Each的方式,
显式的在集合外部进行迭代， 这叫做外部迭代。 Stream提供了内部迭代的方式，
通过访问者模式(Visitor)实现。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;使用方法&#34;&gt;2、使用方法&lt;/h3&gt;
&lt;p&gt;在 Java 8 中, 集合接口有两个方法来生成流：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;stream()&lt;/strong&gt; − 为集合创建串行流。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;parallelStream()&lt;/strong&gt; − 为集合创建并行流。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;List&amp;lt;String&amp;gt; strings = Arrays.asList(&lt;span class=&#34;string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;bc&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;efg&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;abcd&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;jkl&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;List&amp;lt;String&amp;gt; filtered = strings.stream().filter(string -&amp;gt; !string.isEmpty()).collect(Collectors.toList());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;具体方法&#34;&gt;3、具体方法&lt;/h3&gt;
&lt;h4 id=&#34;foreach&#34;&gt;1、forEach&lt;/h4&gt;
&lt;p&gt;Stream 提供了新的方法 &#39;forEach&#39;
来迭代流中的每个数据。以下代码片段使用 forEach 输出了10个随机数：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Random&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;random&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Random&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;random.ints().limit(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;).forEach(System.out::println);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;map&#34;&gt;2、map&lt;/h4&gt;
&lt;p&gt;map 方法用于映射每个元素到对应的结果，以下代码片段使用 map
输出了元素对应的平方数：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 获取对应的平方数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;List&amp;lt;Integer&amp;gt; squaresList = numbers.stream().map( i -&amp;gt; i*i).distinct().collect(Collectors.toList());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;filter&#34;&gt;3、filter&lt;/h4&gt;
&lt;p&gt;filter 方法用于通过设置的条件过滤出元素。以下代码片段使用 filter
方法过滤出空字符串：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;List&amp;lt;String&amp;gt;strings = Arrays.asList(&lt;span class=&#34;string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;bc&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;efg&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;abcd&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;jkl&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 获取空字符串的数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; strings.stream().filter(string -&amp;gt; string.isEmpty()).count();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;limit&#34;&gt;4、limit&lt;/h4&gt;
&lt;p&gt;limit 方法用于获取指定数量的流。 以下代码片段使用 limit 方法打印出 10
条数据：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Random&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;random&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Random&lt;/span&gt;(); random.ints().limit(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;).forEach(System.out::println);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;sorted&#34;&gt;5、sorted&lt;/h4&gt;
&lt;p&gt;sorted 方法用于对流进行排序。以下代码片段使用 sorted 方法对输出的 10
个随机数进行排序：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Random&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;random&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Random&lt;/span&gt;(); random.ints().limit(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;).sorted().forEach(System.out::println);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr /&gt;
&lt;h4 id=&#34;并行parallel程序&#34;&gt;6、并行（parallel）程序&lt;/h4&gt;
&lt;p&gt;parallelStream 是流并行处理程序的代替方法。以下实例我们使用
parallelStream 来输出空字符串的数量：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;List&amp;lt;String&amp;gt; strings = Arrays.asList(&lt;span class=&#34;string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;bc&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;efg&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;abcd&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;jkl&amp;quot;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 获取空字符串的数量 long count = strings.parallelStream().filter(string -&amp;gt; string.isEmpty()).count();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以很容易的在顺序运行和并行之间切换。&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id=&#34;collectors&#34;&gt;7、Collectors&lt;/h4&gt;
&lt;p&gt;Collectors
类实现了很多归约操作，例如将流转换成集合和聚合元素。Collectors
可用于返回列表或字符串：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;List&amp;lt;String&amp;gt;strings = Arrays.asList(&lt;span class=&#34;string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;bc&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;efg&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;abcd&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;jkl&amp;quot;&lt;/span&gt;); List&amp;lt;String&amp;gt; filtered = strings.stream().filter(string -&amp;gt;！!string.isEmpty()).collect(Collectors.toList());  System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;筛选列表: &amp;quot;&lt;/span&gt; + filtered); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;mergedString&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; strings.stream().filter(string -&amp;gt; !string.isEmpty()).collect(Collectors.joining(&lt;span class=&#34;string&#34;&gt;&amp;quot;, &amp;quot;&lt;/span&gt;)); System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;合并字符串: &amp;quot;&lt;/span&gt; + mergedString);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr /&gt;
&lt;h4 id=&#34;统计&#34;&gt;8、统计&lt;/h4&gt;
&lt;p&gt;另外，一些产生统计结果的收集器也非常有用。它们主要用于int、double、long等基本类型上，它们可以用来产生类似如下的统计结果。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;IntSummaryStatistics&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;stats&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; numbers.stream().mapToInt((x) -&amp;gt; x).summaryStatistics();  System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;列表中最大的数 : &amp;quot;&lt;/span&gt; + stats.getMax()); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;列表中最小的数 : &amp;quot;&lt;/span&gt; + stats.getMin()); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;所有数之和 : &amp;quot;&lt;/span&gt; + stats.getSum()); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;平均数 : &amp;quot;&lt;/span&gt; + stats.getAverage());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;一些例子&#34;&gt;一些例子&lt;/h3&gt;
&lt;h4 id=&#34;section&#34;&gt;&lt;/h4&gt;
</content>
        <category term="后端" scheme="http://example.com/categories/springboot/" />
        <category term="Java" scheme="http://example.com/tags/Java/" />
        <category term="流" scheme="http://example.com/tags/%E6%B5%81/" />
        <updated>2024-06-09T06:48:16.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/06/09/post/vue/hello-world/</id>
        <title>暂时置顶文章</title>
        <link rel="alternate" href="http://example.com/2024/06/09/post/vue/hello-world/"/>
        <content type="html">&lt;h1 id=&#34;暂时没有内容窝&#34;&gt;暂时没有内容窝&lt;/h1&gt;
</content>
        <category term="前端" scheme="http://example.com/categories/vue/" />
        <updated>2024-06-09T04:34:29.549Z</updated>
    </entry>
</feed>
